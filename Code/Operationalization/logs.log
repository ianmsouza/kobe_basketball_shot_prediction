2025-03-25 19:50:52,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:50:52,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:50:52,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:50:52,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:50:54,595:INFO:PyCaret ClassificationExperiment
2025-03-25 19:50:54,595:INFO:Logging name: Treinamento
2025-03-25 19:50:54,595:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-25 19:50:54,595:INFO:version 3.3.2
2025-03-25 19:50:54,595:INFO:Initializing setup()
2025-03-25 19:50:54,595:INFO:self.USI: 8ccb
2025-03-25 19:50:54,595:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'X_train', 'memory', 'html_param', 'y', 'pipeline', 'X', 'logging_param', 'gpu_n_jobs_param', 'n_jobs_param', 'y_test', 'seed', 'fold_shuffle_param', 'fix_imbalance', '_ml_usecase', 'data', 'idx', '_available_plots', 'fold_groups_param', 'fold_generator', 'exp_id', 'is_multiclass', 'X_test', 'target_param', 'y_train', 'USI', 'gpu_param'}
2025-03-25 19:50:54,595:INFO:Checking environment
2025-03-25 19:50:54,595:INFO:python_version: 3.9.21
2025-03-25 19:50:54,595:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-25 19:50:54,595:INFO:machine: AMD64
2025-03-25 19:50:54,618:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-25 19:50:54,618:INFO:Memory: svmem(total=33685155840, available=22162690048, percent=34.2, used=11522465792, free=22162690048)
2025-03-25 19:50:54,618:INFO:Physical Core: 6
2025-03-25 19:50:54,618:INFO:Logical Core: 12
2025-03-25 19:50:54,618:INFO:Checking libraries
2025-03-25 19:50:54,618:INFO:System:
2025-03-25 19:50:54,618:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-25 19:50:54,618:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-25 19:50:54,618:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-25 19:50:54,618:INFO:PyCaret required dependencies:
2025-03-25 19:50:54,668:INFO:                 pip: 25.0
2025-03-25 19:50:54,668:INFO:          setuptools: 75.8.0
2025-03-25 19:50:54,668:INFO:             pycaret: 3.3.2
2025-03-25 19:50:54,668:INFO:             IPython: 8.18.1
2025-03-25 19:50:54,668:INFO:          ipywidgets: 8.1.5
2025-03-25 19:50:54,668:INFO:                tqdm: 4.67.1
2025-03-25 19:50:54,668:INFO:               numpy: 1.26.4
2025-03-25 19:50:54,668:INFO:              pandas: 1.5.3
2025-03-25 19:50:54,668:INFO:              jinja2: 3.1.6
2025-03-25 19:50:54,668:INFO:               scipy: 1.11.4
2025-03-25 19:50:54,668:INFO:              joblib: 1.3.2
2025-03-25 19:50:54,674:INFO:             sklearn: 1.4.2
2025-03-25 19:50:54,674:INFO:                pyod: 2.0.3
2025-03-25 19:50:54,674:INFO:            imblearn: 0.12.4
2025-03-25 19:50:54,674:INFO:   category_encoders: 2.6.4
2025-03-25 19:50:54,674:INFO:            lightgbm: 4.6.0
2025-03-25 19:50:54,674:INFO:               numba: 0.60.0
2025-03-25 19:50:54,674:INFO:            requests: 2.32.3
2025-03-25 19:50:54,674:INFO:          matplotlib: 3.7.5
2025-03-25 19:50:54,674:INFO:          scikitplot: 0.3.7
2025-03-25 19:50:54,674:INFO:         yellowbrick: 1.5
2025-03-25 19:50:54,674:INFO:              plotly: 5.24.1
2025-03-25 19:50:54,674:INFO:    plotly-resampler: Not installed
2025-03-25 19:50:54,674:INFO:             kaleido: 0.2.1
2025-03-25 19:50:54,674:INFO:           schemdraw: 0.15
2025-03-25 19:50:54,674:INFO:         statsmodels: 0.14.4
2025-03-25 19:50:54,674:INFO:              sktime: 0.26.0
2025-03-25 19:50:54,674:INFO:               tbats: 1.1.3
2025-03-25 19:50:54,674:INFO:            pmdarima: 2.0.4
2025-03-25 19:50:54,674:INFO:              psutil: 7.0.0
2025-03-25 19:50:54,674:INFO:          markupsafe: 3.0.2
2025-03-25 19:50:54,674:INFO:             pickle5: Not installed
2025-03-25 19:50:54,674:INFO:         cloudpickle: 2.2.1
2025-03-25 19:50:54,674:INFO:         deprecation: 2.1.0
2025-03-25 19:50:54,674:INFO:              xxhash: 3.5.0
2025-03-25 19:50:54,674:INFO:           wurlitzer: Not installed
2025-03-25 19:50:54,674:INFO:PyCaret optional dependencies:
2025-03-25 19:50:55,059:INFO:                shap: Not installed
2025-03-25 19:50:55,059:INFO:           interpret: Not installed
2025-03-25 19:50:55,059:INFO:                umap: Not installed
2025-03-25 19:50:55,059:INFO:     ydata_profiling: Not installed
2025-03-25 19:50:55,059:INFO:  explainerdashboard: Not installed
2025-03-25 19:50:55,059:INFO:             autoviz: Not installed
2025-03-25 19:50:55,059:INFO:           fairlearn: Not installed
2025-03-25 19:50:55,059:INFO:          deepchecks: Not installed
2025-03-25 19:50:55,059:INFO:             xgboost: Not installed
2025-03-25 19:50:55,059:INFO:            catboost: Not installed
2025-03-25 19:50:55,059:INFO:              kmodes: Not installed
2025-03-25 19:50:55,059:INFO:             mlxtend: Not installed
2025-03-25 19:50:55,059:INFO:       statsforecast: Not installed
2025-03-25 19:50:55,059:INFO:        tune_sklearn: Not installed
2025-03-25 19:50:55,059:INFO:                 ray: Not installed
2025-03-25 19:50:55,059:INFO:            hyperopt: Not installed
2025-03-25 19:50:55,059:INFO:              optuna: Not installed
2025-03-25 19:50:55,059:INFO:               skopt: Not installed
2025-03-25 19:50:55,059:INFO:              mlflow: 2.21.0
2025-03-25 19:50:55,059:INFO:              gradio: Not installed
2025-03-25 19:50:55,059:INFO:             fastapi: 0.115.11
2025-03-25 19:50:55,059:INFO:             uvicorn: 0.34.0
2025-03-25 19:50:55,059:INFO:              m2cgen: Not installed
2025-03-25 19:50:55,059:INFO:           evidently: Not installed
2025-03-25 19:50:55,059:INFO:               fugue: Not installed
2025-03-25 19:50:55,059:INFO:           streamlit: 1.43.2
2025-03-25 19:50:55,059:INFO:             prophet: Not installed
2025-03-25 19:50:55,059:INFO:None
2025-03-25 19:50:55,059:INFO:Set up data.
2025-03-25 19:50:55,076:INFO:Set up folding strategy.
2025-03-25 19:50:55,076:INFO:Set up train/test split.
2025-03-25 19:50:55,090:INFO:Set up index.
2025-03-25 19:50:55,090:INFO:Assigning column types.
2025-03-25 19:50:55,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-25 19:50:55,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,173:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,189:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-25 19:50:55,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-25 19:50:55,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,299:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-25 19:50:55,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,393:INFO:Preparing preprocessing pipeline...
2025-03-25 19:50:55,393:INFO:Set up simple imputation.
2025-03-25 19:50:55,409:INFO:Finished creating preprocessing pipeline.
2025-03-25 19:50:55,425:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-25 19:50:55,425:INFO:Creating final display dataframe.
2025-03-25 19:50:55,457:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             8ccb
2025-03-25 19:50:55,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-25 19:50:55,588:INFO:Logging experiment in loggers
2025-03-25 19:50:55,898:INFO:SubProcess save_model() called ==================================
2025-03-25 19:50:55,900:INFO:Initializing save_model()
2025-03-25 19:50:55,900:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpvc4rlhip\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-25 19:50:55,902:INFO:Adding model into prep_pipe
2025-03-25 19:50:55,902:WARNING:Only Model saved as it was a pipeline.
2025-03-25 19:50:55,902:INFO:C:\Users\Ian\AppData\Local\Temp\tmpvc4rlhip\Transformation Pipeline.pkl saved in current working directory
2025-03-25 19:50:55,904:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-25 19:50:55,904:INFO:save_model() successfully completed......................................
2025-03-25 19:50:55,991:INFO:SubProcess save_model() end ==================================
2025-03-25 19:50:56,035:INFO:setup() successfully completed in 1.0s...............
2025-03-25 19:50:56,035:INFO:Initializing create_model()
2025-03-25 19:50:56,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AD96ACF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-25 19:50:56,035:INFO:Checking exceptions
2025-03-25 19:50:56,039:INFO:Importing libraries
2025-03-25 19:50:56,039:INFO:Copying training dataset
2025-03-25 19:50:56,043:INFO:Defining folds
2025-03-25 19:50:56,043:INFO:Declaring metric variables
2025-03-25 19:50:56,043:INFO:Importing untrained model
2025-03-25 19:50:56,043:INFO:Logistic Regression Imported successfully
2025-03-25 19:50:56,043:INFO:Starting cross validation
2025-03-25 19:50:56,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-25 19:50:59,785:INFO:Calculating mean and std
2025-03-25 19:50:59,788:INFO:Creating metrics dataframe
2025-03-25 19:50:59,791:INFO:Finalizing model
2025-03-25 19:50:59,841:INFO:Creating Dashboard logs
2025-03-25 19:50:59,841:INFO:Model: Logistic Regression
2025-03-25 19:50:59,887:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-25 19:51:00,010:INFO:Initializing predict_model()
2025-03-25 19:51:00,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AD96ACF70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A938F3160>)
2025-03-25 19:51:00,010:INFO:Checking exceptions
2025-03-25 19:51:00,010:INFO:Preloading libraries
2025-03-25 19:51:00,141:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-25 19:51:00,162:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-25 19:51:00,162:INFO:Uploading results into container
2025-03-25 19:51:00,162:INFO:Uploading model into container now
2025-03-25 19:51:00,174:INFO:_master_model_container: 1
2025-03-25 19:51:00,174:INFO:_display_container: 2
2025-03-25 19:51:00,174:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-25 19:51:00,174:INFO:create_model() successfully completed......................................
2025-03-25 19:51:00,258:INFO:Initializing create_model()
2025-03-25 19:51:00,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AD96ACF70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-25 19:51:00,258:INFO:Checking exceptions
2025-03-25 19:51:00,258:INFO:Importing libraries
2025-03-25 19:51:00,258:INFO:Copying training dataset
2025-03-25 19:51:00,258:INFO:Defining folds
2025-03-25 19:51:00,258:INFO:Declaring metric variables
2025-03-25 19:51:00,258:INFO:Importing untrained model
2025-03-25 19:51:00,258:INFO:Decision Tree Classifier Imported successfully
2025-03-25 19:51:00,258:INFO:Starting cross validation
2025-03-25 19:51:00,258:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-25 19:51:02,499:INFO:Calculating mean and std
2025-03-25 19:51:02,499:INFO:Creating metrics dataframe
2025-03-25 19:51:02,499:INFO:Finalizing model
2025-03-25 19:51:02,525:INFO:Creating Dashboard logs
2025-03-25 19:51:02,525:INFO:Model: Decision Tree Classifier
2025-03-25 19:51:02,575:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-25 19:51:02,702:INFO:Initializing predict_model()
2025-03-25 19:51:02,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AD96ACF70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A939EE670>)
2025-03-25 19:51:02,702:INFO:Checking exceptions
2025-03-25 19:51:02,702:INFO:Preloading libraries
2025-03-25 19:51:02,845:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-25 19:51:02,845:INFO:Uploading results into container
2025-03-25 19:51:02,845:INFO:Uploading model into container now
2025-03-25 19:51:02,862:INFO:_master_model_container: 2
2025-03-25 19:51:02,862:INFO:_display_container: 3
2025-03-25 19:51:02,863:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-25 19:51:02,863:INFO:create_model() successfully completed......................................
2025-03-25 19:51:02,954:INFO:Initializing save_model()
2025-03-25 19:51:02,954:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-25 19:51:02,954:INFO:Adding model into prep_pipe
2025-03-25 19:51:02,956:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-25 19:51:02,960:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-25 19:51:02,960:INFO:save_model() successfully completed......................................
2025-03-25 19:51:06,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:51:06,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:51:06,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:51:06,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 19:51:08,629:INFO:Initializing load_model()
2025-03-25 19:51:08,629:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:18:40,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:18:40,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:18:40,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:18:40,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:18:42,689:INFO:Initializing load_model()
2025-03-25 20:18:42,689:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:24:11,880:INFO:Initializing load_model()
2025-03-25 20:24:11,882:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:25:16,386:INFO:Initializing load_model()
2025-03-25 20:25:16,386:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:27:11,652:INFO:Initializing load_model()
2025-03-25 20:27:11,652:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:28:07,987:INFO:Initializing load_model()
2025-03-25 20:28:07,987:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:29:16,398:INFO:Initializing load_model()
2025-03-25 20:29:16,398:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:31:02,376:INFO:Initializing load_model()
2025-03-25 20:31:02,376:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:32:40,531:INFO:Initializing load_model()
2025-03-25 20:32:40,531:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:38:40,562:INFO:Initializing load_model()
2025-03-25 20:38:40,562:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:41:28,345:INFO:Initializing load_model()
2025-03-25 20:41:28,345:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:41:28,565:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:108: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.


2025-03-25 20:43:10,545:INFO:Initializing load_model()
2025-03-25 20:43:10,546:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:43:10,773:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:108: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.


2025-03-25 20:52:00,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:52:00,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:52:00,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:52:00,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-25 20:52:03,287:INFO:Initializing load_model()
2025-03-25 20:52:03,287:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:52:09,671:INFO:Initializing load_model()
2025-03-25 20:52:09,671:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:52:12,656:INFO:Initializing load_model()
2025-03-25 20:52:12,656:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:52:13,608:INFO:Initializing load_model()
2025-03-25 20:52:13,608:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-25 20:52:14,461:INFO:Initializing load_model()
2025-03-25 20:52:14,461:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:07:03,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:03,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:03,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:03,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:06,029:INFO:PyCaret ClassificationExperiment
2025-03-26 22:07:06,029:INFO:Logging name: Treinamento
2025-03-26 22:07:06,030:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:07:06,030:INFO:version 3.3.2
2025-03-26 22:07:06,030:INFO:Initializing setup()
2025-03-26 22:07:06,030:INFO:self.USI: c8d0
2025-03-26 22:07:06,030:INFO:self._variable_keys: {'fold_generator', 'y', 'fix_imbalance', 'seed', 'exp_name_log', 'idx', 'data', 'USI', 'X', 'n_jobs_param', 'y_test', 'memory', 'X_train', '_ml_usecase', 'html_param', 'fold_shuffle_param', 'target_param', 'fold_groups_param', 'gpu_n_jobs_param', 'logging_param', 'X_test', '_available_plots', 'y_train', 'pipeline', 'is_multiclass', 'exp_id', 'log_plots_param', 'gpu_param'}
2025-03-26 22:07:06,030:INFO:Checking environment
2025-03-26 22:07:06,030:INFO:python_version: 3.9.21
2025-03-26 22:07:06,030:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:07:06,030:INFO:machine: AMD64
2025-03-26 22:07:06,054:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:07:06,058:INFO:Memory: svmem(total=33685155840, available=17403965440, percent=48.3, used=16281190400, free=17403965440)
2025-03-26 22:07:06,058:INFO:Physical Core: 6
2025-03-26 22:07:06,058:INFO:Logical Core: 12
2025-03-26 22:07:06,059:INFO:Checking libraries
2025-03-26 22:07:06,059:INFO:System:
2025-03-26 22:07:06,059:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:07:06,059:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:07:06,059:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:07:06,059:INFO:PyCaret required dependencies:
2025-03-26 22:07:06,128:INFO:                 pip: 25.0
2025-03-26 22:07:06,128:INFO:          setuptools: 75.8.0
2025-03-26 22:07:06,128:INFO:             pycaret: 3.3.2
2025-03-26 22:07:06,128:INFO:             IPython: 8.18.1
2025-03-26 22:07:06,128:INFO:          ipywidgets: 8.1.5
2025-03-26 22:07:06,128:INFO:                tqdm: 4.67.1
2025-03-26 22:07:06,128:INFO:               numpy: 1.26.4
2025-03-26 22:07:06,128:INFO:              pandas: 1.5.3
2025-03-26 22:07:06,128:INFO:              jinja2: 3.1.6
2025-03-26 22:07:06,129:INFO:               scipy: 1.11.4
2025-03-26 22:07:06,129:INFO:              joblib: 1.3.2
2025-03-26 22:07:06,129:INFO:             sklearn: 1.4.2
2025-03-26 22:07:06,129:INFO:                pyod: 2.0.3
2025-03-26 22:07:06,129:INFO:            imblearn: 0.12.4
2025-03-26 22:07:06,129:INFO:   category_encoders: 2.6.4
2025-03-26 22:07:06,129:INFO:            lightgbm: 4.6.0
2025-03-26 22:07:06,129:INFO:               numba: 0.60.0
2025-03-26 22:07:06,129:INFO:            requests: 2.32.3
2025-03-26 22:07:06,129:INFO:          matplotlib: 3.7.5
2025-03-26 22:07:06,129:INFO:          scikitplot: 0.3.7
2025-03-26 22:07:06,129:INFO:         yellowbrick: 1.5
2025-03-26 22:07:06,129:INFO:              plotly: 5.24.1
2025-03-26 22:07:06,129:INFO:    plotly-resampler: Not installed
2025-03-26 22:07:06,129:INFO:             kaleido: 0.2.1
2025-03-26 22:07:06,129:INFO:           schemdraw: 0.15
2025-03-26 22:07:06,129:INFO:         statsmodels: 0.14.4
2025-03-26 22:07:06,129:INFO:              sktime: 0.26.0
2025-03-26 22:07:06,129:INFO:               tbats: 1.1.3
2025-03-26 22:07:06,129:INFO:            pmdarima: 2.0.4
2025-03-26 22:07:06,129:INFO:              psutil: 7.0.0
2025-03-26 22:07:06,129:INFO:          markupsafe: 3.0.2
2025-03-26 22:07:06,129:INFO:             pickle5: Not installed
2025-03-26 22:07:06,129:INFO:         cloudpickle: 2.2.1
2025-03-26 22:07:06,129:INFO:         deprecation: 2.1.0
2025-03-26 22:07:06,129:INFO:              xxhash: 3.5.0
2025-03-26 22:07:06,129:INFO:           wurlitzer: Not installed
2025-03-26 22:07:06,129:INFO:PyCaret optional dependencies:
2025-03-26 22:07:06,582:INFO:                shap: Not installed
2025-03-26 22:07:06,582:INFO:           interpret: Not installed
2025-03-26 22:07:06,582:INFO:                umap: Not installed
2025-03-26 22:07:06,582:INFO:     ydata_profiling: Not installed
2025-03-26 22:07:06,582:INFO:  explainerdashboard: Not installed
2025-03-26 22:07:06,582:INFO:             autoviz: Not installed
2025-03-26 22:07:06,582:INFO:           fairlearn: Not installed
2025-03-26 22:07:06,582:INFO:          deepchecks: Not installed
2025-03-26 22:07:06,582:INFO:             xgboost: Not installed
2025-03-26 22:07:06,582:INFO:            catboost: Not installed
2025-03-26 22:07:06,582:INFO:              kmodes: Not installed
2025-03-26 22:07:06,582:INFO:             mlxtend: Not installed
2025-03-26 22:07:06,582:INFO:       statsforecast: Not installed
2025-03-26 22:07:06,582:INFO:        tune_sklearn: Not installed
2025-03-26 22:07:06,582:INFO:                 ray: Not installed
2025-03-26 22:07:06,582:INFO:            hyperopt: Not installed
2025-03-26 22:07:06,582:INFO:              optuna: Not installed
2025-03-26 22:07:06,582:INFO:               skopt: Not installed
2025-03-26 22:07:06,582:INFO:              mlflow: 2.21.0
2025-03-26 22:07:06,583:INFO:              gradio: Not installed
2025-03-26 22:07:06,583:INFO:             fastapi: 0.115.11
2025-03-26 22:07:06,583:INFO:             uvicorn: 0.34.0
2025-03-26 22:07:06,583:INFO:              m2cgen: Not installed
2025-03-26 22:07:06,583:INFO:           evidently: Not installed
2025-03-26 22:07:06,583:INFO:               fugue: Not installed
2025-03-26 22:07:06,583:INFO:           streamlit: 1.43.2
2025-03-26 22:07:06,583:INFO:             prophet: Not installed
2025-03-26 22:07:06,583:INFO:None
2025-03-26 22:07:06,583:INFO:Set up data.
2025-03-26 22:07:06,599:INFO:Set up folding strategy.
2025-03-26 22:07:06,599:INFO:Set up train/test split.
2025-03-26 22:07:06,608:INFO:Set up index.
2025-03-26 22:07:06,608:INFO:Assigning column types.
2025-03-26 22:07:06,610:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:07:06,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,701:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,722:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:07:06,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,805:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:07:06,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,825:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:07:06,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:06,929:INFO:Preparing preprocessing pipeline...
2025-03-26 22:07:06,932:INFO:Set up simple imputation.
2025-03-26 22:07:06,963:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:07:06,966:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:07:06,966:INFO:Creating final display dataframe.
2025-03-26 22:07:07,019:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             c8d0
2025-03-26 22:07:07,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:07,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:07,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:07,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:07:07,133:INFO:Logging experiment in loggers
2025-03-26 22:07:07,464:INFO:SubProcess save_model() called ==================================
2025-03-26 22:07:07,468:INFO:Initializing save_model()
2025-03-26 22:07:07,468:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp3hmkgida\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:07:07,468:INFO:Adding model into prep_pipe
2025-03-26 22:07:07,468:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:07:07,469:INFO:C:\Users\Ian\AppData\Local\Temp\tmp3hmkgida\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:07:07,472:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:07:07,472:INFO:save_model() successfully completed......................................
2025-03-26 22:07:07,563:INFO:SubProcess save_model() end ==================================
2025-03-26 22:07:07,606:INFO:setup() successfully completed in 1.11s...............
2025-03-26 22:07:07,606:INFO:Initializing create_model()
2025-03-26 22:07:07,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5031BF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:07:07,606:INFO:Checking exceptions
2025-03-26 22:07:07,609:INFO:Importing libraries
2025-03-26 22:07:07,609:INFO:Copying training dataset
2025-03-26 22:07:07,613:INFO:Defining folds
2025-03-26 22:07:07,613:INFO:Declaring metric variables
2025-03-26 22:07:07,613:INFO:Importing untrained model
2025-03-26 22:07:07,614:INFO:Logistic Regression Imported successfully
2025-03-26 22:07:07,614:INFO:Starting cross validation
2025-03-26 22:07:07,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:07:11,701:INFO:Calculating mean and std
2025-03-26 22:07:11,702:INFO:Creating metrics dataframe
2025-03-26 22:07:11,705:INFO:Finalizing model
2025-03-26 22:07:11,760:INFO:Creating Dashboard logs
2025-03-26 22:07:11,760:INFO:Model: Logistic Regression
2025-03-26 22:07:11,813:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:07:11,954:INFO:Initializing predict_model()
2025-03-26 22:07:11,954:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5031BF70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E0A5660D0>)
2025-03-26 22:07:11,954:INFO:Checking exceptions
2025-03-26 22:07:11,954:INFO:Preloading libraries
2025-03-26 22:07:12,097:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:07:12,123:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:07:12,124:INFO:Uploading results into container
2025-03-26 22:07:12,124:INFO:Uploading model into container now
2025-03-26 22:07:12,131:INFO:_master_model_container: 1
2025-03-26 22:07:12,131:INFO:_display_container: 2
2025-03-26 22:07:12,132:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:07:12,132:INFO:create_model() successfully completed......................................
2025-03-26 22:07:12,223:INFO:Initializing create_model()
2025-03-26 22:07:12,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5031BF70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:07:12,223:INFO:Checking exceptions
2025-03-26 22:07:12,224:INFO:Importing libraries
2025-03-26 22:07:12,224:INFO:Copying training dataset
2025-03-26 22:07:12,226:INFO:Defining folds
2025-03-26 22:07:12,226:INFO:Declaring metric variables
2025-03-26 22:07:12,226:INFO:Importing untrained model
2025-03-26 22:07:12,226:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:07:12,226:INFO:Starting cross validation
2025-03-26 22:07:12,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:07:14,449:INFO:Calculating mean and std
2025-03-26 22:07:14,451:INFO:Creating metrics dataframe
2025-03-26 22:07:14,452:INFO:Finalizing model
2025-03-26 22:07:14,486:INFO:Creating Dashboard logs
2025-03-26 22:07:14,486:INFO:Model: Decision Tree Classifier
2025-03-26 22:07:14,530:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:07:14,673:INFO:Initializing predict_model()
2025-03-26 22:07:14,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5031BF70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E0A51E5E0>)
2025-03-26 22:07:14,673:INFO:Checking exceptions
2025-03-26 22:07:14,673:INFO:Preloading libraries
2025-03-26 22:07:14,827:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:07:14,827:INFO:Uploading results into container
2025-03-26 22:07:14,828:INFO:Uploading model into container now
2025-03-26 22:07:14,834:INFO:_master_model_container: 2
2025-03-26 22:07:14,834:INFO:_display_container: 3
2025-03-26 22:07:14,834:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:07:14,835:INFO:create_model() successfully completed......................................
2025-03-26 22:07:14,934:INFO:Initializing save_model()
2025-03-26 22:07:14,934:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:07:14,934:INFO:Adding model into prep_pipe
2025-03-26 22:07:14,936:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:07:14,939:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:07:14,939:INFO:save_model() successfully completed......................................
2025-03-26 22:07:19,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:19,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:19,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:19,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:07:20,989:INFO:Initializing load_model()
2025-03-26 22:07:20,989:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:22:21,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:21,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:21,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:21,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:23,389:INFO:PyCaret ClassificationExperiment
2025-03-26 22:22:23,389:INFO:Logging name: Treinamento
2025-03-26 22:22:23,389:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:22:23,389:INFO:version 3.3.2
2025-03-26 22:22:23,389:INFO:Initializing setup()
2025-03-26 22:22:23,389:INFO:self.USI: 24f3
2025-03-26 22:22:23,389:INFO:self._variable_keys: {'gpu_param', 'memory', 'exp_id', 'seed', '_ml_usecase', 'fold_shuffle_param', 'log_plots_param', 'y_train', 'is_multiclass', 'gpu_n_jobs_param', 'n_jobs_param', 'data', 'X', 'fix_imbalance', 'html_param', 'fold_generator', 'idx', 'y_test', 'fold_groups_param', 'X_test', 'X_train', 'target_param', 'y', 'pipeline', '_available_plots', 'logging_param', 'exp_name_log', 'USI'}
2025-03-26 22:22:23,389:INFO:Checking environment
2025-03-26 22:22:23,389:INFO:python_version: 3.9.21
2025-03-26 22:22:23,389:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:22:23,389:INFO:machine: AMD64
2025-03-26 22:22:23,414:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:22:23,414:INFO:Memory: svmem(total=33685155840, available=18681118720, percent=44.5, used=15004037120, free=18681118720)
2025-03-26 22:22:23,414:INFO:Physical Core: 6
2025-03-26 22:22:23,414:INFO:Logical Core: 12
2025-03-26 22:22:23,414:INFO:Checking libraries
2025-03-26 22:22:23,414:INFO:System:
2025-03-26 22:22:23,414:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:22:23,414:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:22:23,414:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:22:23,414:INFO:PyCaret required dependencies:
2025-03-26 22:22:23,477:INFO:                 pip: 25.0
2025-03-26 22:22:23,477:INFO:          setuptools: 75.8.0
2025-03-26 22:22:23,477:INFO:             pycaret: 3.3.2
2025-03-26 22:22:23,477:INFO:             IPython: 8.18.1
2025-03-26 22:22:23,477:INFO:          ipywidgets: 8.1.5
2025-03-26 22:22:23,477:INFO:                tqdm: 4.67.1
2025-03-26 22:22:23,477:INFO:               numpy: 1.26.4
2025-03-26 22:22:23,477:INFO:              pandas: 1.5.3
2025-03-26 22:22:23,477:INFO:              jinja2: 3.1.6
2025-03-26 22:22:23,477:INFO:               scipy: 1.11.4
2025-03-26 22:22:23,477:INFO:              joblib: 1.3.2
2025-03-26 22:22:23,477:INFO:             sklearn: 1.4.2
2025-03-26 22:22:23,477:INFO:                pyod: 2.0.3
2025-03-26 22:22:23,477:INFO:            imblearn: 0.12.4
2025-03-26 22:22:23,477:INFO:   category_encoders: 2.6.4
2025-03-26 22:22:23,477:INFO:            lightgbm: 4.6.0
2025-03-26 22:22:23,477:INFO:               numba: 0.60.0
2025-03-26 22:22:23,477:INFO:            requests: 2.32.3
2025-03-26 22:22:23,477:INFO:          matplotlib: 3.7.5
2025-03-26 22:22:23,477:INFO:          scikitplot: 0.3.7
2025-03-26 22:22:23,477:INFO:         yellowbrick: 1.5
2025-03-26 22:22:23,477:INFO:              plotly: 5.24.1
2025-03-26 22:22:23,477:INFO:    plotly-resampler: Not installed
2025-03-26 22:22:23,477:INFO:             kaleido: 0.2.1
2025-03-26 22:22:23,477:INFO:           schemdraw: 0.15
2025-03-26 22:22:23,477:INFO:         statsmodels: 0.14.4
2025-03-26 22:22:23,477:INFO:              sktime: 0.26.0
2025-03-26 22:22:23,477:INFO:               tbats: 1.1.3
2025-03-26 22:22:23,477:INFO:            pmdarima: 2.0.4
2025-03-26 22:22:23,477:INFO:              psutil: 7.0.0
2025-03-26 22:22:23,477:INFO:          markupsafe: 3.0.2
2025-03-26 22:22:23,477:INFO:             pickle5: Not installed
2025-03-26 22:22:23,477:INFO:         cloudpickle: 2.2.1
2025-03-26 22:22:23,477:INFO:         deprecation: 2.1.0
2025-03-26 22:22:23,477:INFO:              xxhash: 3.5.0
2025-03-26 22:22:23,477:INFO:           wurlitzer: Not installed
2025-03-26 22:22:23,477:INFO:PyCaret optional dependencies:
2025-03-26 22:22:23,862:INFO:                shap: Not installed
2025-03-26 22:22:23,862:INFO:           interpret: Not installed
2025-03-26 22:22:23,862:INFO:                umap: Not installed
2025-03-26 22:22:23,862:INFO:     ydata_profiling: Not installed
2025-03-26 22:22:23,862:INFO:  explainerdashboard: Not installed
2025-03-26 22:22:23,862:INFO:             autoviz: Not installed
2025-03-26 22:22:23,862:INFO:           fairlearn: Not installed
2025-03-26 22:22:23,862:INFO:          deepchecks: Not installed
2025-03-26 22:22:23,862:INFO:             xgboost: Not installed
2025-03-26 22:22:23,862:INFO:            catboost: Not installed
2025-03-26 22:22:23,862:INFO:              kmodes: Not installed
2025-03-26 22:22:23,862:INFO:             mlxtend: Not installed
2025-03-26 22:22:23,862:INFO:       statsforecast: Not installed
2025-03-26 22:22:23,862:INFO:        tune_sklearn: Not installed
2025-03-26 22:22:23,862:INFO:                 ray: Not installed
2025-03-26 22:22:23,862:INFO:            hyperopt: Not installed
2025-03-26 22:22:23,862:INFO:              optuna: Not installed
2025-03-26 22:22:23,862:INFO:               skopt: Not installed
2025-03-26 22:22:23,862:INFO:              mlflow: 2.21.0
2025-03-26 22:22:23,862:INFO:              gradio: Not installed
2025-03-26 22:22:23,862:INFO:             fastapi: 0.115.11
2025-03-26 22:22:23,862:INFO:             uvicorn: 0.34.0
2025-03-26 22:22:23,862:INFO:              m2cgen: Not installed
2025-03-26 22:22:23,862:INFO:           evidently: Not installed
2025-03-26 22:22:23,862:INFO:               fugue: Not installed
2025-03-26 22:22:23,862:INFO:           streamlit: 1.43.2
2025-03-26 22:22:23,862:INFO:             prophet: Not installed
2025-03-26 22:22:23,862:INFO:None
2025-03-26 22:22:23,862:INFO:Set up data.
2025-03-26 22:22:23,862:INFO:Set up folding strategy.
2025-03-26 22:22:23,862:INFO:Set up train/test split.
2025-03-26 22:22:23,862:INFO:Set up index.
2025-03-26 22:22:23,862:INFO:Assigning column types.
2025-03-26 22:22:23,878:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:22:23,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:22:23,913:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:22:23,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:23,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:23,970:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:22:23,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:22:23,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:23,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:23,978:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:22:24,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:22:24,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,061:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:22:24,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,094:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:22:24,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,197:INFO:Preparing preprocessing pipeline...
2025-03-26 22:22:24,200:INFO:Set up simple imputation.
2025-03-26 22:22:24,216:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:22:24,219:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:22:24,219:INFO:Creating final display dataframe.
2025-03-26 22:22:24,264:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             24f3
2025-03-26 22:22:24,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:22:24,377:INFO:Logging experiment in loggers
2025-03-26 22:22:24,693:INFO:SubProcess save_model() called ==================================
2025-03-26 22:22:24,699:INFO:Initializing save_model()
2025-03-26 22:22:24,699:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpmn0ovvbu\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:22:24,700:INFO:Adding model into prep_pipe
2025-03-26 22:22:24,700:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:22:24,702:INFO:C:\Users\Ian\AppData\Local\Temp\tmpmn0ovvbu\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:22:24,705:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:22:24,705:INFO:save_model() successfully completed......................................
2025-03-26 22:22:24,790:INFO:SubProcess save_model() end ==================================
2025-03-26 22:22:24,823:INFO:setup() successfully completed in 0.99s...............
2025-03-26 22:22:24,824:INFO:Initializing create_model()
2025-03-26 22:22:24,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2BBE5BF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:22:24,824:INFO:Checking exceptions
2025-03-26 22:22:24,826:INFO:Importing libraries
2025-03-26 22:22:24,826:INFO:Copying training dataset
2025-03-26 22:22:24,829:INFO:Defining folds
2025-03-26 22:22:24,829:INFO:Declaring metric variables
2025-03-26 22:22:24,829:INFO:Importing untrained model
2025-03-26 22:22:24,830:INFO:Logistic Regression Imported successfully
2025-03-26 22:22:24,830:INFO:Starting cross validation
2025-03-26 22:22:24,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:22:28,697:INFO:Calculating mean and std
2025-03-26 22:22:28,700:INFO:Creating metrics dataframe
2025-03-26 22:22:28,706:INFO:Finalizing model
2025-03-26 22:22:28,796:INFO:Creating Dashboard logs
2025-03-26 22:22:28,796:INFO:Model: Logistic Regression
2025-03-26 22:22:28,843:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:22:28,991:INFO:Initializing predict_model()
2025-03-26 22:22:28,991:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2BBE5BF70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C2F5E470D0>)
2025-03-26 22:22:28,991:INFO:Checking exceptions
2025-03-26 22:22:28,992:INFO:Preloading libraries
2025-03-26 22:22:29,124:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:22:29,153:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:22:29,153:INFO:Uploading results into container
2025-03-26 22:22:29,154:INFO:Uploading model into container now
2025-03-26 22:22:29,160:INFO:_master_model_container: 1
2025-03-26 22:22:29,160:INFO:_display_container: 2
2025-03-26 22:22:29,161:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:22:29,161:INFO:create_model() successfully completed......................................
2025-03-26 22:22:29,251:INFO:Initializing create_model()
2025-03-26 22:22:29,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2BBE5BF70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:22:29,251:INFO:Checking exceptions
2025-03-26 22:22:29,252:INFO:Importing libraries
2025-03-26 22:22:29,252:INFO:Copying training dataset
2025-03-26 22:22:29,255:INFO:Defining folds
2025-03-26 22:22:29,256:INFO:Declaring metric variables
2025-03-26 22:22:29,256:INFO:Importing untrained model
2025-03-26 22:22:29,256:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:22:29,256:INFO:Starting cross validation
2025-03-26 22:22:29,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:22:31,479:INFO:Calculating mean and std
2025-03-26 22:22:31,480:INFO:Creating metrics dataframe
2025-03-26 22:22:31,481:INFO:Finalizing model
2025-03-26 22:22:31,516:INFO:Creating Dashboard logs
2025-03-26 22:22:31,516:INFO:Model: Decision Tree Classifier
2025-03-26 22:22:31,560:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:22:31,689:INFO:Initializing predict_model()
2025-03-26 22:22:31,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2BBE5BF70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C2F5F3D5E0>)
2025-03-26 22:22:31,689:INFO:Checking exceptions
2025-03-26 22:22:31,689:INFO:Preloading libraries
2025-03-26 22:22:31,834:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:22:31,835:INFO:Uploading results into container
2025-03-26 22:22:31,836:INFO:Uploading model into container now
2025-03-26 22:22:31,849:INFO:_master_model_container: 2
2025-03-26 22:22:31,849:INFO:_display_container: 3
2025-03-26 22:22:31,851:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:22:31,851:INFO:create_model() successfully completed......................................
2025-03-26 22:22:31,950:INFO:Initializing save_model()
2025-03-26 22:22:31,950:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:22:31,952:INFO:Adding model into prep_pipe
2025-03-26 22:22:31,954:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:22:31,957:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:22:31,957:INFO:save_model() successfully completed......................................
2025-03-26 22:22:35,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:35,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:35,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:35,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:22:37,259:INFO:Initializing load_model()
2025-03-26 22:22:37,259:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:30:19,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:19,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:19,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:19,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:21,939:INFO:PyCaret ClassificationExperiment
2025-03-26 22:30:21,939:INFO:Logging name: Treinamento
2025-03-26 22:30:21,939:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:30:21,939:INFO:version 3.3.2
2025-03-26 22:30:21,939:INFO:Initializing setup()
2025-03-26 22:30:21,939:INFO:self.USI: 43fd
2025-03-26 22:30:21,939:INFO:self._variable_keys: {'fix_imbalance', 'idx', 'USI', 'y', 'is_multiclass', 'pipeline', 'fold_groups_param', 'data', 'X', 'exp_name_log', 'target_param', 'gpu_param', 'seed', 'fold_shuffle_param', 'X_test', 'exp_id', '_ml_usecase', 'y_train', 'log_plots_param', 'memory', 'X_train', 'n_jobs_param', 'gpu_n_jobs_param', '_available_plots', 'html_param', 'fold_generator', 'logging_param', 'y_test'}
2025-03-26 22:30:21,939:INFO:Checking environment
2025-03-26 22:30:21,939:INFO:python_version: 3.9.21
2025-03-26 22:30:21,939:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:30:21,939:INFO:machine: AMD64
2025-03-26 22:30:21,985:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:30:21,989:INFO:Memory: svmem(total=33685155840, available=18453950464, percent=45.2, used=15231205376, free=18453950464)
2025-03-26 22:30:21,989:INFO:Physical Core: 6
2025-03-26 22:30:21,989:INFO:Logical Core: 12
2025-03-26 22:30:21,989:INFO:Checking libraries
2025-03-26 22:30:21,989:INFO:System:
2025-03-26 22:30:21,989:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:30:21,989:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:30:21,990:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:30:21,990:INFO:PyCaret required dependencies:
2025-03-26 22:30:22,074:INFO:                 pip: 25.0
2025-03-26 22:30:22,074:INFO:          setuptools: 75.8.0
2025-03-26 22:30:22,074:INFO:             pycaret: 3.3.2
2025-03-26 22:30:22,074:INFO:             IPython: 8.18.1
2025-03-26 22:30:22,074:INFO:          ipywidgets: 8.1.5
2025-03-26 22:30:22,074:INFO:                tqdm: 4.67.1
2025-03-26 22:30:22,074:INFO:               numpy: 1.26.4
2025-03-26 22:30:22,074:INFO:              pandas: 1.5.3
2025-03-26 22:30:22,074:INFO:              jinja2: 3.1.6
2025-03-26 22:30:22,074:INFO:               scipy: 1.11.4
2025-03-26 22:30:22,074:INFO:              joblib: 1.3.2
2025-03-26 22:30:22,074:INFO:             sklearn: 1.4.2
2025-03-26 22:30:22,074:INFO:                pyod: 2.0.3
2025-03-26 22:30:22,074:INFO:            imblearn: 0.12.4
2025-03-26 22:30:22,074:INFO:   category_encoders: 2.6.4
2025-03-26 22:30:22,074:INFO:            lightgbm: 4.6.0
2025-03-26 22:30:22,074:INFO:               numba: 0.60.0
2025-03-26 22:30:22,074:INFO:            requests: 2.32.3
2025-03-26 22:30:22,074:INFO:          matplotlib: 3.7.5
2025-03-26 22:30:22,074:INFO:          scikitplot: 0.3.7
2025-03-26 22:30:22,074:INFO:         yellowbrick: 1.5
2025-03-26 22:30:22,074:INFO:              plotly: 5.24.1
2025-03-26 22:30:22,074:INFO:    plotly-resampler: Not installed
2025-03-26 22:30:22,074:INFO:             kaleido: 0.2.1
2025-03-26 22:30:22,074:INFO:           schemdraw: 0.15
2025-03-26 22:30:22,074:INFO:         statsmodels: 0.14.4
2025-03-26 22:30:22,074:INFO:              sktime: 0.26.0
2025-03-26 22:30:22,074:INFO:               tbats: 1.1.3
2025-03-26 22:30:22,074:INFO:            pmdarima: 2.0.4
2025-03-26 22:30:22,074:INFO:              psutil: 7.0.0
2025-03-26 22:30:22,074:INFO:          markupsafe: 3.0.2
2025-03-26 22:30:22,074:INFO:             pickle5: Not installed
2025-03-26 22:30:22,074:INFO:         cloudpickle: 2.2.1
2025-03-26 22:30:22,074:INFO:         deprecation: 2.1.0
2025-03-26 22:30:22,074:INFO:              xxhash: 3.5.0
2025-03-26 22:30:22,074:INFO:           wurlitzer: Not installed
2025-03-26 22:30:22,074:INFO:PyCaret optional dependencies:
2025-03-26 22:30:22,589:INFO:                shap: 0.47.1
2025-03-26 22:30:22,591:INFO:           interpret: Not installed
2025-03-26 22:30:22,591:INFO:                umap: Not installed
2025-03-26 22:30:22,591:INFO:     ydata_profiling: Not installed
2025-03-26 22:30:22,591:INFO:  explainerdashboard: Not installed
2025-03-26 22:30:22,591:INFO:             autoviz: Not installed
2025-03-26 22:30:22,591:INFO:           fairlearn: Not installed
2025-03-26 22:30:22,591:INFO:          deepchecks: Not installed
2025-03-26 22:30:22,591:INFO:             xgboost: Not installed
2025-03-26 22:30:22,591:INFO:            catboost: Not installed
2025-03-26 22:30:22,591:INFO:              kmodes: Not installed
2025-03-26 22:30:22,591:INFO:             mlxtend: Not installed
2025-03-26 22:30:22,591:INFO:       statsforecast: Not installed
2025-03-26 22:30:22,591:INFO:        tune_sklearn: Not installed
2025-03-26 22:30:22,591:INFO:                 ray: Not installed
2025-03-26 22:30:22,591:INFO:            hyperopt: Not installed
2025-03-26 22:30:22,591:INFO:              optuna: Not installed
2025-03-26 22:30:22,591:INFO:               skopt: Not installed
2025-03-26 22:30:22,591:INFO:              mlflow: 2.21.0
2025-03-26 22:30:22,591:INFO:              gradio: Not installed
2025-03-26 22:30:22,591:INFO:             fastapi: 0.115.11
2025-03-26 22:30:22,591:INFO:             uvicorn: 0.34.0
2025-03-26 22:30:22,591:INFO:              m2cgen: Not installed
2025-03-26 22:30:22,591:INFO:           evidently: Not installed
2025-03-26 22:30:22,591:INFO:               fugue: Not installed
2025-03-26 22:30:22,591:INFO:           streamlit: 1.43.2
2025-03-26 22:30:22,591:INFO:             prophet: Not installed
2025-03-26 22:30:22,591:INFO:None
2025-03-26 22:30:22,591:INFO:Set up data.
2025-03-26 22:30:22,594:INFO:Set up folding strategy.
2025-03-26 22:30:22,594:INFO:Set up train/test split.
2025-03-26 22:30:22,594:INFO:Set up index.
2025-03-26 22:30:22,609:INFO:Assigning column types.
2025-03-26 22:30:22,610:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:30:22,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,660:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,747:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:30:22,796:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:30:22,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,879:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:30:22,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:22,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,007:INFO:Preparing preprocessing pipeline...
2025-03-26 22:30:23,010:INFO:Set up simple imputation.
2025-03-26 22:30:23,028:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:30:23,028:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:30:23,028:INFO:Creating final display dataframe.
2025-03-26 22:30:23,077:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             43fd
2025-03-26 22:30:23,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:30:23,217:INFO:Logging experiment in loggers
2025-03-26 22:30:23,665:INFO:SubProcess save_model() called ==================================
2025-03-26 22:30:23,665:INFO:Initializing save_model()
2025-03-26 22:30:23,665:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp67nkt4ta\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:30:23,665:INFO:Adding model into prep_pipe
2025-03-26 22:30:23,665:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:30:23,677:INFO:C:\Users\Ian\AppData\Local\Temp\tmp67nkt4ta\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:30:23,677:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:30:23,677:INFO:save_model() successfully completed......................................
2025-03-26 22:30:23,760:INFO:SubProcess save_model() end ==================================
2025-03-26 22:30:23,792:INFO:setup() successfully completed in 1.28s...............
2025-03-26 22:30:23,793:INFO:Initializing create_model()
2025-03-26 22:30:23,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AF3498CF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:30:23,793:INFO:Checking exceptions
2025-03-26 22:30:23,794:INFO:Importing libraries
2025-03-26 22:30:23,794:INFO:Copying training dataset
2025-03-26 22:30:23,797:INFO:Defining folds
2025-03-26 22:30:23,797:INFO:Declaring metric variables
2025-03-26 22:30:23,797:INFO:Importing untrained model
2025-03-26 22:30:23,799:INFO:Logistic Regression Imported successfully
2025-03-26 22:30:23,799:INFO:Starting cross validation
2025-03-26 22:30:23,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:30:28,379:INFO:Calculating mean and std
2025-03-26 22:30:28,398:INFO:Creating metrics dataframe
2025-03-26 22:30:28,402:INFO:Finalizing model
2025-03-26 22:30:28,465:INFO:Creating Dashboard logs
2025-03-26 22:30:28,465:INFO:Model: Logistic Regression
2025-03-26 22:30:28,511:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:30:28,641:INFO:Initializing predict_model()
2025-03-26 22:30:28,641:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AF3498CF70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AF6E632C10>)
2025-03-26 22:30:28,641:INFO:Checking exceptions
2025-03-26 22:30:28,641:INFO:Preloading libraries
2025-03-26 22:30:28,770:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:30:28,786:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:30:28,786:INFO:Uploading results into container
2025-03-26 22:30:28,786:INFO:Uploading model into container now
2025-03-26 22:30:28,804:INFO:_master_model_container: 1
2025-03-26 22:30:28,804:INFO:_display_container: 2
2025-03-26 22:30:28,804:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:30:28,804:INFO:create_model() successfully completed......................................
2025-03-26 22:30:28,891:INFO:Initializing create_model()
2025-03-26 22:30:28,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AF3498CF70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:30:28,891:INFO:Checking exceptions
2025-03-26 22:30:28,891:INFO:Importing libraries
2025-03-26 22:30:28,891:INFO:Copying training dataset
2025-03-26 22:30:28,896:INFO:Defining folds
2025-03-26 22:30:28,896:INFO:Declaring metric variables
2025-03-26 22:30:28,896:INFO:Importing untrained model
2025-03-26 22:30:28,896:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:30:28,896:INFO:Starting cross validation
2025-03-26 22:30:28,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:30:31,526:INFO:Calculating mean and std
2025-03-26 22:30:31,527:INFO:Creating metrics dataframe
2025-03-26 22:30:31,528:INFO:Finalizing model
2025-03-26 22:30:31,563:INFO:Creating Dashboard logs
2025-03-26 22:30:31,564:INFO:Model: Decision Tree Classifier
2025-03-26 22:30:31,605:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:30:31,727:INFO:Initializing predict_model()
2025-03-26 22:30:31,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AF3498CF70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AF6D119940>)
2025-03-26 22:30:31,727:INFO:Checking exceptions
2025-03-26 22:30:31,727:INFO:Preloading libraries
2025-03-26 22:30:31,877:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:30:31,877:INFO:Uploading results into container
2025-03-26 22:30:31,877:INFO:Uploading model into container now
2025-03-26 22:30:31,877:INFO:_master_model_container: 2
2025-03-26 22:30:31,877:INFO:_display_container: 3
2025-03-26 22:30:31,877:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:30:31,877:INFO:create_model() successfully completed......................................
2025-03-26 22:30:31,989:INFO:Initializing save_model()
2025-03-26 22:30:31,989:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:30:31,989:INFO:Adding model into prep_pipe
2025-03-26 22:30:31,991:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:30:31,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:30:31,995:INFO:save_model() successfully completed......................................
2025-03-26 22:30:36,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:36,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:36,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:36,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:30:38,342:INFO:Initializing load_model()
2025-03-26 22:30:38,342:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:38:04,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:04,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:04,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:04,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:06,377:INFO:PyCaret ClassificationExperiment
2025-03-26 22:38:06,377:INFO:Logging name: Treinamento
2025-03-26 22:38:06,377:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:38:06,377:INFO:version 3.3.2
2025-03-26 22:38:06,377:INFO:Initializing setup()
2025-03-26 22:38:06,377:INFO:self.USI: aece
2025-03-26 22:38:06,377:INFO:self._variable_keys: {'exp_id', 'USI', 'log_plots_param', 'n_jobs_param', 'is_multiclass', 'logging_param', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'fold_shuffle_param', 'gpu_n_jobs_param', 'idx', 'X_train', 'seed', 'html_param', 'exp_name_log', 'y_train', 'target_param', '_available_plots', 'fix_imbalance', 'data', 'y', 'X_test', 'gpu_param', 'memory', 'pipeline', 'y_test', 'X'}
2025-03-26 22:38:06,377:INFO:Checking environment
2025-03-26 22:38:06,377:INFO:python_version: 3.9.21
2025-03-26 22:38:06,377:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:38:06,377:INFO:machine: AMD64
2025-03-26 22:38:06,402:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:38:06,407:INFO:Memory: svmem(total=33685155840, available=17942851584, percent=46.7, used=15742304256, free=17942851584)
2025-03-26 22:38:06,407:INFO:Physical Core: 6
2025-03-26 22:38:06,407:INFO:Logical Core: 12
2025-03-26 22:38:06,407:INFO:Checking libraries
2025-03-26 22:38:06,407:INFO:System:
2025-03-26 22:38:06,407:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:38:06,407:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:38:06,407:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:38:06,407:INFO:PyCaret required dependencies:
2025-03-26 22:38:06,483:INFO:                 pip: 25.0
2025-03-26 22:38:06,483:INFO:          setuptools: 75.8.0
2025-03-26 22:38:06,483:INFO:             pycaret: 3.3.2
2025-03-26 22:38:06,483:INFO:             IPython: 8.18.1
2025-03-26 22:38:06,483:INFO:          ipywidgets: 8.1.5
2025-03-26 22:38:06,483:INFO:                tqdm: 4.67.1
2025-03-26 22:38:06,483:INFO:               numpy: 1.26.4
2025-03-26 22:38:06,483:INFO:              pandas: 1.5.3
2025-03-26 22:38:06,483:INFO:              jinja2: 3.1.6
2025-03-26 22:38:06,483:INFO:               scipy: 1.11.4
2025-03-26 22:38:06,483:INFO:              joblib: 1.3.2
2025-03-26 22:38:06,483:INFO:             sklearn: 1.4.2
2025-03-26 22:38:06,483:INFO:                pyod: 2.0.3
2025-03-26 22:38:06,483:INFO:            imblearn: 0.12.4
2025-03-26 22:38:06,483:INFO:   category_encoders: 2.6.4
2025-03-26 22:38:06,483:INFO:            lightgbm: 4.6.0
2025-03-26 22:38:06,483:INFO:               numba: 0.60.0
2025-03-26 22:38:06,483:INFO:            requests: 2.32.3
2025-03-26 22:38:06,483:INFO:          matplotlib: 3.7.5
2025-03-26 22:38:06,483:INFO:          scikitplot: 0.3.7
2025-03-26 22:38:06,483:INFO:         yellowbrick: 1.5
2025-03-26 22:38:06,484:INFO:              plotly: 5.24.1
2025-03-26 22:38:06,484:INFO:    plotly-resampler: Not installed
2025-03-26 22:38:06,484:INFO:             kaleido: 0.2.1
2025-03-26 22:38:06,484:INFO:           schemdraw: 0.15
2025-03-26 22:38:06,484:INFO:         statsmodels: 0.14.4
2025-03-26 22:38:06,484:INFO:              sktime: 0.26.0
2025-03-26 22:38:06,484:INFO:               tbats: 1.1.3
2025-03-26 22:38:06,484:INFO:            pmdarima: 2.0.4
2025-03-26 22:38:06,484:INFO:              psutil: 7.0.0
2025-03-26 22:38:06,484:INFO:          markupsafe: 3.0.2
2025-03-26 22:38:06,484:INFO:             pickle5: Not installed
2025-03-26 22:38:06,484:INFO:         cloudpickle: 2.2.1
2025-03-26 22:38:06,484:INFO:         deprecation: 2.1.0
2025-03-26 22:38:06,484:INFO:              xxhash: 3.5.0
2025-03-26 22:38:06,484:INFO:           wurlitzer: Not installed
2025-03-26 22:38:06,484:INFO:PyCaret optional dependencies:
2025-03-26 22:38:06,942:INFO:                shap: 0.47.1
2025-03-26 22:38:06,942:INFO:           interpret: Not installed
2025-03-26 22:38:06,942:INFO:                umap: Not installed
2025-03-26 22:38:06,942:INFO:     ydata_profiling: Not installed
2025-03-26 22:38:06,942:INFO:  explainerdashboard: Not installed
2025-03-26 22:38:06,942:INFO:             autoviz: Not installed
2025-03-26 22:38:06,942:INFO:           fairlearn: Not installed
2025-03-26 22:38:06,942:INFO:          deepchecks: Not installed
2025-03-26 22:38:06,942:INFO:             xgboost: Not installed
2025-03-26 22:38:06,943:INFO:            catboost: Not installed
2025-03-26 22:38:06,943:INFO:              kmodes: Not installed
2025-03-26 22:38:06,943:INFO:             mlxtend: Not installed
2025-03-26 22:38:06,943:INFO:       statsforecast: Not installed
2025-03-26 22:38:06,943:INFO:        tune_sklearn: Not installed
2025-03-26 22:38:06,943:INFO:                 ray: Not installed
2025-03-26 22:38:06,943:INFO:            hyperopt: Not installed
2025-03-26 22:38:06,943:INFO:              optuna: Not installed
2025-03-26 22:38:06,943:INFO:               skopt: Not installed
2025-03-26 22:38:06,943:INFO:              mlflow: 2.21.0
2025-03-26 22:38:06,943:INFO:              gradio: Not installed
2025-03-26 22:38:06,943:INFO:             fastapi: 0.115.11
2025-03-26 22:38:06,943:INFO:             uvicorn: 0.34.0
2025-03-26 22:38:06,943:INFO:              m2cgen: Not installed
2025-03-26 22:38:06,943:INFO:           evidently: Not installed
2025-03-26 22:38:06,943:INFO:               fugue: Not installed
2025-03-26 22:38:06,943:INFO:           streamlit: 1.43.2
2025-03-26 22:38:06,943:INFO:             prophet: Not installed
2025-03-26 22:38:06,943:INFO:None
2025-03-26 22:38:06,943:INFO:Set up data.
2025-03-26 22:38:06,949:INFO:Set up folding strategy.
2025-03-26 22:38:06,949:INFO:Set up train/test split.
2025-03-26 22:38:06,956:INFO:Set up index.
2025-03-26 22:38:06,956:INFO:Assigning column types.
2025-03-26 22:38:06,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:38:06,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:38:06,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:38:07,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:38:07,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:38:07,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,074:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:38:07,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:38:07,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:38:07,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,176:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:38:07,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,282:INFO:Preparing preprocessing pipeline...
2025-03-26 22:38:07,285:INFO:Set up simple imputation.
2025-03-26 22:38:07,302:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:38:07,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:38:07,305:INFO:Creating final display dataframe.
2025-03-26 22:38:07,351:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             aece
2025-03-26 22:38:07,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:38:07,467:INFO:Logging experiment in loggers
2025-03-26 22:38:07,827:INFO:SubProcess save_model() called ==================================
2025-03-26 22:38:07,830:INFO:Initializing save_model()
2025-03-26 22:38:07,830:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp54cvngsa\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:38:07,830:INFO:Adding model into prep_pipe
2025-03-26 22:38:07,830:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:38:07,834:INFO:C:\Users\Ian\AppData\Local\Temp\tmp54cvngsa\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:38:07,836:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:38:07,836:INFO:save_model() successfully completed......................................
2025-03-26 22:38:07,925:INFO:SubProcess save_model() end ==================================
2025-03-26 22:38:07,958:INFO:setup() successfully completed in 1.09s...............
2025-03-26 22:38:07,958:INFO:Initializing create_model()
2025-03-26 22:38:07,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000229886ECF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:38:07,959:INFO:Checking exceptions
2025-03-26 22:38:07,961:INFO:Importing libraries
2025-03-26 22:38:07,961:INFO:Copying training dataset
2025-03-26 22:38:07,966:INFO:Defining folds
2025-03-26 22:38:07,966:INFO:Declaring metric variables
2025-03-26 22:38:07,966:INFO:Importing untrained model
2025-03-26 22:38:07,966:INFO:Logistic Regression Imported successfully
2025-03-26 22:38:07,966:INFO:Starting cross validation
2025-03-26 22:38:07,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:38:12,501:INFO:Calculating mean and std
2025-03-26 22:38:12,502:INFO:Creating metrics dataframe
2025-03-26 22:38:12,506:INFO:Finalizing model
2025-03-26 22:38:12,556:INFO:Creating Dashboard logs
2025-03-26 22:38:12,556:INFO:Model: Logistic Regression
2025-03-26 22:38:12,604:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:38:12,732:INFO:Initializing predict_model()
2025-03-26 22:38:12,732:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000229886ECF70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000229C2374AF0>)
2025-03-26 22:38:12,732:INFO:Checking exceptions
2025-03-26 22:38:12,732:INFO:Preloading libraries
2025-03-26 22:38:12,863:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:38:12,887:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:38:12,887:INFO:Uploading results into container
2025-03-26 22:38:12,888:INFO:Uploading model into container now
2025-03-26 22:38:12,894:INFO:_master_model_container: 1
2025-03-26 22:38:12,895:INFO:_display_container: 2
2025-03-26 22:38:12,895:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:38:12,895:INFO:create_model() successfully completed......................................
2025-03-26 22:38:12,982:INFO:Initializing create_model()
2025-03-26 22:38:12,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000229886ECF70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:38:12,982:INFO:Checking exceptions
2025-03-26 22:38:12,984:INFO:Importing libraries
2025-03-26 22:38:12,984:INFO:Copying training dataset
2025-03-26 22:38:12,988:INFO:Defining folds
2025-03-26 22:38:12,988:INFO:Declaring metric variables
2025-03-26 22:38:12,989:INFO:Importing untrained model
2025-03-26 22:38:12,989:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:38:12,989:INFO:Starting cross validation
2025-03-26 22:38:12,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:38:15,208:INFO:Calculating mean and std
2025-03-26 22:38:15,208:INFO:Creating metrics dataframe
2025-03-26 22:38:15,210:INFO:Finalizing model
2025-03-26 22:38:15,244:INFO:Creating Dashboard logs
2025-03-26 22:38:15,245:INFO:Model: Decision Tree Classifier
2025-03-26 22:38:15,291:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:38:15,428:INFO:Initializing predict_model()
2025-03-26 22:38:15,428:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000229886ECF70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000229C0E58940>)
2025-03-26 22:38:15,428:INFO:Checking exceptions
2025-03-26 22:38:15,428:INFO:Preloading libraries
2025-03-26 22:38:15,571:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:38:15,571:INFO:Uploading results into container
2025-03-26 22:38:15,572:INFO:Uploading model into container now
2025-03-26 22:38:15,581:INFO:_master_model_container: 2
2025-03-26 22:38:15,581:INFO:_display_container: 3
2025-03-26 22:38:15,581:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:38:15,582:INFO:create_model() successfully completed......................................
2025-03-26 22:38:15,697:INFO:Initializing save_model()
2025-03-26 22:38:15,697:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:38:15,697:INFO:Adding model into prep_pipe
2025-03-26 22:38:15,700:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:38:15,703:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:38:15,703:INFO:save_model() successfully completed......................................
2025-03-26 22:38:19,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:19,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:19,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:19,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:38:21,189:INFO:Initializing load_model()
2025-03-26 22:38:21,190:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:41:15,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:15,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:15,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:15,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:17,777:INFO:PyCaret ClassificationExperiment
2025-03-26 22:41:17,777:INFO:Logging name: Treinamento
2025-03-26 22:41:17,777:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:41:17,777:INFO:version 3.3.2
2025-03-26 22:41:17,777:INFO:Initializing setup()
2025-03-26 22:41:17,777:INFO:self.USI: 2309
2025-03-26 22:41:17,777:INFO:self._variable_keys: {'fold_groups_param', 'y', 'seed', 'memory', 'y_test', 'gpu_param', 'X', 'idx', 'y_train', 'logging_param', 'fold_generator', 'log_plots_param', 'n_jobs_param', 'X_train', 'fold_shuffle_param', 'target_param', 'fix_imbalance', 'USI', 'exp_id', 'X_test', 'exp_name_log', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'html_param', 'pipeline', '_available_plots'}
2025-03-26 22:41:17,777:INFO:Checking environment
2025-03-26 22:41:17,777:INFO:python_version: 3.9.21
2025-03-26 22:41:17,777:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:41:17,777:INFO:machine: AMD64
2025-03-26 22:41:17,814:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:41:17,816:INFO:Memory: svmem(total=33685155840, available=17961439232, percent=46.7, used=15723716608, free=17961439232)
2025-03-26 22:41:17,816:INFO:Physical Core: 6
2025-03-26 22:41:17,816:INFO:Logical Core: 12
2025-03-26 22:41:17,816:INFO:Checking libraries
2025-03-26 22:41:17,816:INFO:System:
2025-03-26 22:41:17,816:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:41:17,816:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:41:17,816:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:41:17,816:INFO:PyCaret required dependencies:
2025-03-26 22:41:17,870:INFO:                 pip: 25.0
2025-03-26 22:41:17,870:INFO:          setuptools: 75.8.0
2025-03-26 22:41:17,870:INFO:             pycaret: 3.3.2
2025-03-26 22:41:17,870:INFO:             IPython: 8.18.1
2025-03-26 22:41:17,870:INFO:          ipywidgets: 8.1.5
2025-03-26 22:41:17,870:INFO:                tqdm: 4.67.1
2025-03-26 22:41:17,870:INFO:               numpy: 1.26.4
2025-03-26 22:41:17,870:INFO:              pandas: 1.5.3
2025-03-26 22:41:17,870:INFO:              jinja2: 3.1.6
2025-03-26 22:41:17,870:INFO:               scipy: 1.11.4
2025-03-26 22:41:17,870:INFO:              joblib: 1.3.2
2025-03-26 22:41:17,870:INFO:             sklearn: 1.4.2
2025-03-26 22:41:17,871:INFO:                pyod: 2.0.3
2025-03-26 22:41:17,871:INFO:            imblearn: 0.12.4
2025-03-26 22:41:17,871:INFO:   category_encoders: 2.6.4
2025-03-26 22:41:17,871:INFO:            lightgbm: 4.6.0
2025-03-26 22:41:17,871:INFO:               numba: 0.60.0
2025-03-26 22:41:17,871:INFO:            requests: 2.32.3
2025-03-26 22:41:17,871:INFO:          matplotlib: 3.7.5
2025-03-26 22:41:17,871:INFO:          scikitplot: 0.3.7
2025-03-26 22:41:17,871:INFO:         yellowbrick: 1.5
2025-03-26 22:41:17,871:INFO:              plotly: 5.24.1
2025-03-26 22:41:17,871:INFO:    plotly-resampler: Not installed
2025-03-26 22:41:17,871:INFO:             kaleido: 0.2.1
2025-03-26 22:41:17,871:INFO:           schemdraw: 0.15
2025-03-26 22:41:17,871:INFO:         statsmodels: 0.14.4
2025-03-26 22:41:17,871:INFO:              sktime: 0.26.0
2025-03-26 22:41:17,871:INFO:               tbats: 1.1.3
2025-03-26 22:41:17,871:INFO:            pmdarima: 2.0.4
2025-03-26 22:41:17,871:INFO:              psutil: 7.0.0
2025-03-26 22:41:17,871:INFO:          markupsafe: 3.0.2
2025-03-26 22:41:17,871:INFO:             pickle5: Not installed
2025-03-26 22:41:17,871:INFO:         cloudpickle: 2.2.1
2025-03-26 22:41:17,871:INFO:         deprecation: 2.1.0
2025-03-26 22:41:17,871:INFO:              xxhash: 3.5.0
2025-03-26 22:41:17,871:INFO:           wurlitzer: Not installed
2025-03-26 22:41:17,871:INFO:PyCaret optional dependencies:
2025-03-26 22:41:18,258:INFO:                shap: 0.47.1
2025-03-26 22:41:18,258:INFO:           interpret: Not installed
2025-03-26 22:41:18,258:INFO:                umap: Not installed
2025-03-26 22:41:18,258:INFO:     ydata_profiling: Not installed
2025-03-26 22:41:18,258:INFO:  explainerdashboard: Not installed
2025-03-26 22:41:18,258:INFO:             autoviz: Not installed
2025-03-26 22:41:18,258:INFO:           fairlearn: Not installed
2025-03-26 22:41:18,258:INFO:          deepchecks: Not installed
2025-03-26 22:41:18,258:INFO:             xgboost: Not installed
2025-03-26 22:41:18,258:INFO:            catboost: Not installed
2025-03-26 22:41:18,258:INFO:              kmodes: Not installed
2025-03-26 22:41:18,258:INFO:             mlxtend: Not installed
2025-03-26 22:41:18,258:INFO:       statsforecast: Not installed
2025-03-26 22:41:18,258:INFO:        tune_sklearn: Not installed
2025-03-26 22:41:18,258:INFO:                 ray: Not installed
2025-03-26 22:41:18,258:INFO:            hyperopt: Not installed
2025-03-26 22:41:18,258:INFO:              optuna: Not installed
2025-03-26 22:41:18,258:INFO:               skopt: Not installed
2025-03-26 22:41:18,258:INFO:              mlflow: 2.21.0
2025-03-26 22:41:18,258:INFO:              gradio: Not installed
2025-03-26 22:41:18,258:INFO:             fastapi: 0.115.11
2025-03-26 22:41:18,258:INFO:             uvicorn: 0.34.0
2025-03-26 22:41:18,258:INFO:              m2cgen: Not installed
2025-03-26 22:41:18,258:INFO:           evidently: Not installed
2025-03-26 22:41:18,258:INFO:               fugue: Not installed
2025-03-26 22:41:18,258:INFO:           streamlit: 1.43.2
2025-03-26 22:41:18,258:INFO:             prophet: Not installed
2025-03-26 22:41:18,258:INFO:None
2025-03-26 22:41:18,258:INFO:Set up data.
2025-03-26 22:41:18,274:INFO:Set up folding strategy.
2025-03-26 22:41:18,274:INFO:Set up train/test split.
2025-03-26 22:41:18,274:INFO:Set up index.
2025-03-26 22:41:18,274:INFO:Assigning column types.
2025-03-26 22:41:18,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:41:18,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,385:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:41:18,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:41:18,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,489:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:41:18,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,585:INFO:Preparing preprocessing pipeline...
2025-03-26 22:41:18,585:INFO:Set up simple imputation.
2025-03-26 22:41:18,601:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:41:18,601:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:41:18,601:INFO:Creating final display dataframe.
2025-03-26 22:41:18,649:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             2309
2025-03-26 22:41:18,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:41:18,743:INFO:Logging experiment in loggers
2025-03-26 22:41:18,823:INFO:SubProcess save_model() called ==================================
2025-03-26 22:41:18,823:INFO:Initializing save_model()
2025-03-26 22:41:18,823:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp_3ri_qwn\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:41:18,823:INFO:Adding model into prep_pipe
2025-03-26 22:41:18,823:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:41:18,823:INFO:C:\Users\Ian\AppData\Local\Temp\tmp_3ri_qwn\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:41:18,823:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:41:18,823:INFO:save_model() successfully completed......................................
2025-03-26 22:41:18,903:INFO:SubProcess save_model() end ==================================
2025-03-26 22:41:18,936:INFO:setup() successfully completed in 0.97s...............
2025-03-26 22:41:18,936:INFO:Initializing create_model()
2025-03-26 22:41:18,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D22E44F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:41:18,936:INFO:Checking exceptions
2025-03-26 22:41:18,944:INFO:Importing libraries
2025-03-26 22:41:18,944:INFO:Copying training dataset
2025-03-26 22:41:18,947:INFO:Defining folds
2025-03-26 22:41:18,947:INFO:Declaring metric variables
2025-03-26 22:41:18,947:INFO:Importing untrained model
2025-03-26 22:41:18,947:INFO:Logistic Regression Imported successfully
2025-03-26 22:41:18,947:INFO:Starting cross validation
2025-03-26 22:41:18,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:41:22,792:INFO:Calculating mean and std
2025-03-26 22:41:22,796:INFO:Creating metrics dataframe
2025-03-26 22:41:22,800:INFO:Finalizing model
2025-03-26 22:41:22,847:INFO:Creating Dashboard logs
2025-03-26 22:41:22,847:INFO:Model: Logistic Regression
2025-03-26 22:41:22,893:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:41:23,003:INFO:Initializing predict_model()
2025-03-26 22:41:23,003:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D22E44F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D42D73AF0>)
2025-03-26 22:41:23,003:INFO:Checking exceptions
2025-03-26 22:41:23,003:INFO:Preloading libraries
2025-03-26 22:41:23,131:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:41:23,147:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:41:23,147:INFO:Uploading results into container
2025-03-26 22:41:23,147:INFO:Uploading model into container now
2025-03-26 22:41:23,163:INFO:_master_model_container: 1
2025-03-26 22:41:23,163:INFO:_display_container: 2
2025-03-26 22:41:23,163:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:41:23,163:INFO:create_model() successfully completed......................................
2025-03-26 22:41:23,253:INFO:Initializing create_model()
2025-03-26 22:41:23,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D22E44F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:41:23,253:INFO:Checking exceptions
2025-03-26 22:41:23,254:INFO:Importing libraries
2025-03-26 22:41:23,254:INFO:Copying training dataset
2025-03-26 22:41:23,257:INFO:Defining folds
2025-03-26 22:41:23,257:INFO:Declaring metric variables
2025-03-26 22:41:23,257:INFO:Importing untrained model
2025-03-26 22:41:23,257:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:41:23,258:INFO:Starting cross validation
2025-03-26 22:41:23,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:41:25,411:INFO:Calculating mean and std
2025-03-26 22:41:25,411:INFO:Creating metrics dataframe
2025-03-26 22:41:25,411:INFO:Finalizing model
2025-03-26 22:41:25,451:INFO:Creating Dashboard logs
2025-03-26 22:41:25,451:INFO:Model: Decision Tree Classifier
2025-03-26 22:41:25,494:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:41:25,627:INFO:Initializing predict_model()
2025-03-26 22:41:25,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D22E44F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D417AC8B0>)
2025-03-26 22:41:25,627:INFO:Checking exceptions
2025-03-26 22:41:25,627:INFO:Preloading libraries
2025-03-26 22:41:25,774:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:41:25,774:INFO:Uploading results into container
2025-03-26 22:41:25,774:INFO:Uploading model into container now
2025-03-26 22:41:25,784:INFO:_master_model_container: 2
2025-03-26 22:41:25,784:INFO:_display_container: 3
2025-03-26 22:41:25,784:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:41:25,784:INFO:create_model() successfully completed......................................
2025-03-26 22:41:25,877:INFO:Initializing save_model()
2025-03-26 22:41:25,877:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:41:25,877:INFO:Adding model into prep_pipe
2025-03-26 22:41:25,880:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:41:25,883:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:41:25,883:INFO:save_model() successfully completed......................................
2025-03-26 22:41:29,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:29,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:29,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:29,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:41:31,139:INFO:Initializing load_model()
2025-03-26 22:41:31,139:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:43:37,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:37,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:37,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:37,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:39,654:INFO:PyCaret ClassificationExperiment
2025-03-26 22:43:39,654:INFO:Logging name: Treinamento
2025-03-26 22:43:39,654:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 22:43:39,654:INFO:version 3.3.2
2025-03-26 22:43:39,654:INFO:Initializing setup()
2025-03-26 22:43:39,654:INFO:self.USI: 442f
2025-03-26 22:43:39,654:INFO:self._variable_keys: {'data', 'pipeline', 'X_test', 'X_train', 'USI', 'gpu_param', 'seed', 'fold_generator', 'fold_groups_param', 'html_param', 'logging_param', 'X', 'fix_imbalance', 'y_test', 'memory', 'gpu_n_jobs_param', '_available_plots', '_ml_usecase', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'log_plots_param', 'y_train', 'y', 'idx', 'exp_name_log', 'exp_id', 'is_multiclass'}
2025-03-26 22:43:39,654:INFO:Checking environment
2025-03-26 22:43:39,654:INFO:python_version: 3.9.21
2025-03-26 22:43:39,654:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 22:43:39,654:INFO:machine: AMD64
2025-03-26 22:43:39,678:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 22:43:39,682:INFO:Memory: svmem(total=33685155840, available=17855082496, percent=47.0, used=15830073344, free=17855082496)
2025-03-26 22:43:39,682:INFO:Physical Core: 6
2025-03-26 22:43:39,682:INFO:Logical Core: 12
2025-03-26 22:43:39,683:INFO:Checking libraries
2025-03-26 22:43:39,683:INFO:System:
2025-03-26 22:43:39,683:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 22:43:39,683:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 22:43:39,683:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 22:43:39,683:INFO:PyCaret required dependencies:
2025-03-26 22:43:39,733:INFO:                 pip: 25.0
2025-03-26 22:43:39,733:INFO:          setuptools: 75.8.0
2025-03-26 22:43:39,733:INFO:             pycaret: 3.3.2
2025-03-26 22:43:39,733:INFO:             IPython: 8.18.1
2025-03-26 22:43:39,733:INFO:          ipywidgets: 8.1.5
2025-03-26 22:43:39,733:INFO:                tqdm: 4.67.1
2025-03-26 22:43:39,733:INFO:               numpy: 1.26.4
2025-03-26 22:43:39,733:INFO:              pandas: 1.5.3
2025-03-26 22:43:39,733:INFO:              jinja2: 3.1.6
2025-03-26 22:43:39,733:INFO:               scipy: 1.11.4
2025-03-26 22:43:39,733:INFO:              joblib: 1.3.2
2025-03-26 22:43:39,733:INFO:             sklearn: 1.4.2
2025-03-26 22:43:39,733:INFO:                pyod: 2.0.3
2025-03-26 22:43:39,733:INFO:            imblearn: 0.12.4
2025-03-26 22:43:39,733:INFO:   category_encoders: 2.6.4
2025-03-26 22:43:39,733:INFO:            lightgbm: 4.6.0
2025-03-26 22:43:39,733:INFO:               numba: 0.60.0
2025-03-26 22:43:39,733:INFO:            requests: 2.32.3
2025-03-26 22:43:39,733:INFO:          matplotlib: 3.7.5
2025-03-26 22:43:39,733:INFO:          scikitplot: 0.3.7
2025-03-26 22:43:39,733:INFO:         yellowbrick: 1.5
2025-03-26 22:43:39,733:INFO:              plotly: 5.24.1
2025-03-26 22:43:39,733:INFO:    plotly-resampler: Not installed
2025-03-26 22:43:39,733:INFO:             kaleido: 0.2.1
2025-03-26 22:43:39,734:INFO:           schemdraw: 0.15
2025-03-26 22:43:39,734:INFO:         statsmodels: 0.14.4
2025-03-26 22:43:39,734:INFO:              sktime: 0.26.0
2025-03-26 22:43:39,734:INFO:               tbats: 1.1.3
2025-03-26 22:43:39,734:INFO:            pmdarima: 2.0.4
2025-03-26 22:43:39,734:INFO:              psutil: 7.0.0
2025-03-26 22:43:39,734:INFO:          markupsafe: 3.0.2
2025-03-26 22:43:39,734:INFO:             pickle5: Not installed
2025-03-26 22:43:39,734:INFO:         cloudpickle: 2.2.1
2025-03-26 22:43:39,734:INFO:         deprecation: 2.1.0
2025-03-26 22:43:39,734:INFO:              xxhash: 3.5.0
2025-03-26 22:43:39,734:INFO:           wurlitzer: Not installed
2025-03-26 22:43:39,734:INFO:PyCaret optional dependencies:
2025-03-26 22:43:40,151:INFO:                shap: 0.47.1
2025-03-26 22:43:40,152:INFO:           interpret: Not installed
2025-03-26 22:43:40,152:INFO:                umap: Not installed
2025-03-26 22:43:40,152:INFO:     ydata_profiling: Not installed
2025-03-26 22:43:40,152:INFO:  explainerdashboard: Not installed
2025-03-26 22:43:40,152:INFO:             autoviz: Not installed
2025-03-26 22:43:40,152:INFO:           fairlearn: Not installed
2025-03-26 22:43:40,152:INFO:          deepchecks: Not installed
2025-03-26 22:43:40,152:INFO:             xgboost: Not installed
2025-03-26 22:43:40,152:INFO:            catboost: Not installed
2025-03-26 22:43:40,152:INFO:              kmodes: Not installed
2025-03-26 22:43:40,152:INFO:             mlxtend: Not installed
2025-03-26 22:43:40,152:INFO:       statsforecast: Not installed
2025-03-26 22:43:40,152:INFO:        tune_sklearn: Not installed
2025-03-26 22:43:40,152:INFO:                 ray: Not installed
2025-03-26 22:43:40,152:INFO:            hyperopt: Not installed
2025-03-26 22:43:40,152:INFO:              optuna: Not installed
2025-03-26 22:43:40,152:INFO:               skopt: Not installed
2025-03-26 22:43:40,152:INFO:              mlflow: 2.21.0
2025-03-26 22:43:40,152:INFO:              gradio: Not installed
2025-03-26 22:43:40,152:INFO:             fastapi: 0.115.11
2025-03-26 22:43:40,152:INFO:             uvicorn: 0.34.0
2025-03-26 22:43:40,152:INFO:              m2cgen: Not installed
2025-03-26 22:43:40,152:INFO:           evidently: Not installed
2025-03-26 22:43:40,152:INFO:               fugue: Not installed
2025-03-26 22:43:40,152:INFO:           streamlit: 1.43.2
2025-03-26 22:43:40,152:INFO:             prophet: Not installed
2025-03-26 22:43:40,152:INFO:None
2025-03-26 22:43:40,152:INFO:Set up data.
2025-03-26 22:43:40,157:INFO:Set up folding strategy.
2025-03-26 22:43:40,157:INFO:Set up train/test split.
2025-03-26 22:43:40,164:INFO:Set up index.
2025-03-26 22:43:40,164:INFO:Assigning column types.
2025-03-26 22:43:40,167:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 22:43:40,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,202:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,280:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 22:43:40,312:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,365:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 22:43:40,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,386:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 22:43:40,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,493:INFO:Preparing preprocessing pipeline...
2025-03-26 22:43:40,494:INFO:Set up simple imputation.
2025-03-26 22:43:40,510:INFO:Finished creating preprocessing pipeline.
2025-03-26 22:43:40,513:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:43:40,513:INFO:Creating final display dataframe.
2025-03-26 22:43:40,555:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             442f
2025-03-26 22:43:40,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 22:43:40,666:INFO:Logging experiment in loggers
2025-03-26 22:43:40,734:INFO:SubProcess save_model() called ==================================
2025-03-26 22:43:40,737:INFO:Initializing save_model()
2025-03-26 22:43:40,737:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpieuomeme\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:43:40,737:INFO:Adding model into prep_pipe
2025-03-26 22:43:40,738:WARNING:Only Model saved as it was a pipeline.
2025-03-26 22:43:40,739:INFO:C:\Users\Ian\AppData\Local\Temp\tmpieuomeme\Transformation Pipeline.pkl saved in current working directory
2025-03-26 22:43:40,742:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 22:43:40,742:INFO:save_model() successfully completed......................................
2025-03-26 22:43:40,826:INFO:SubProcess save_model() end ==================================
2025-03-26 22:43:40,849:INFO:setup() successfully completed in 1.01s...............
2025-03-26 22:43:40,850:INFO:Initializing create_model()
2025-03-26 22:43:40,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D5D25A4F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:43:40,850:INFO:Checking exceptions
2025-03-26 22:43:40,851:INFO:Importing libraries
2025-03-26 22:43:40,851:INFO:Copying training dataset
2025-03-26 22:43:40,854:INFO:Defining folds
2025-03-26 22:43:40,854:INFO:Declaring metric variables
2025-03-26 22:43:40,855:INFO:Importing untrained model
2025-03-26 22:43:40,855:INFO:Logistic Regression Imported successfully
2025-03-26 22:43:40,855:INFO:Starting cross validation
2025-03-26 22:43:40,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:43:45,009:INFO:Calculating mean and std
2025-03-26 22:43:45,014:INFO:Creating metrics dataframe
2025-03-26 22:43:45,017:INFO:Finalizing model
2025-03-26 22:43:45,075:INFO:Creating Dashboard logs
2025-03-26 22:43:45,075:INFO:Model: Logistic Regression
2025-03-26 22:43:45,129:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 22:43:45,254:INFO:Initializing predict_model()
2025-03-26 22:43:45,254:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D5D25A4F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D5ECEF0940>)
2025-03-26 22:43:45,254:INFO:Checking exceptions
2025-03-26 22:43:45,254:INFO:Preloading libraries
2025-03-26 22:43:45,395:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 22:43:45,422:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:43:45,422:INFO:Uploading results into container
2025-03-26 22:43:45,423:INFO:Uploading model into container now
2025-03-26 22:43:45,430:INFO:_master_model_container: 1
2025-03-26 22:43:45,430:INFO:_display_container: 2
2025-03-26 22:43:45,431:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 22:43:45,431:INFO:create_model() successfully completed......................................
2025-03-26 22:43:45,519:INFO:Initializing create_model()
2025-03-26 22:43:45,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D5D25A4F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 22:43:45,519:INFO:Checking exceptions
2025-03-26 22:43:45,520:INFO:Importing libraries
2025-03-26 22:43:45,520:INFO:Copying training dataset
2025-03-26 22:43:45,524:INFO:Defining folds
2025-03-26 22:43:45,524:INFO:Declaring metric variables
2025-03-26 22:43:45,524:INFO:Importing untrained model
2025-03-26 22:43:45,524:INFO:Decision Tree Classifier Imported successfully
2025-03-26 22:43:45,524:INFO:Starting cross validation
2025-03-26 22:43:45,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 22:43:47,772:INFO:Calculating mean and std
2025-03-26 22:43:47,773:INFO:Creating metrics dataframe
2025-03-26 22:43:47,774:INFO:Finalizing model
2025-03-26 22:43:47,810:INFO:Creating Dashboard logs
2025-03-26 22:43:47,811:INFO:Model: Decision Tree Classifier
2025-03-26 22:43:47,854:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 22:43:47,992:INFO:Initializing predict_model()
2025-03-26 22:43:47,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D5D25A4F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D5F0ECF940>)
2025-03-26 22:43:47,992:INFO:Checking exceptions
2025-03-26 22:43:47,992:INFO:Preloading libraries
2025-03-26 22:43:48,134:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 22:43:48,134:INFO:Uploading results into container
2025-03-26 22:43:48,135:INFO:Uploading model into container now
2025-03-26 22:43:48,141:INFO:_master_model_container: 2
2025-03-26 22:43:48,141:INFO:_display_container: 3
2025-03-26 22:43:48,141:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 22:43:48,141:INFO:create_model() successfully completed......................................
2025-03-26 22:43:48,233:INFO:Initializing save_model()
2025-03-26 22:43:48,233:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 22:43:48,234:INFO:Adding model into prep_pipe
2025-03-26 22:43:48,236:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 22:43:48,240:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 22:43:48,241:INFO:save_model() successfully completed......................................
2025-03-26 22:43:52,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:52,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:52,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:52,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:43:54,001:INFO:Initializing load_model()
2025-03-26 22:43:54,001:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:51:57,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:51:57,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:51:57,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:51:57,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:51:58,616:INFO:Initializing load_model()
2025-03-26 22:51:58,616:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:52:01,492:INFO:Initializing load_model()
2025-03-26 22:52:01,492:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:54:02,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:54:02,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:54:02,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:54:02,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:54:03,941:INFO:Initializing load_model()
2025-03-26 22:54:03,942:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:54:38,047:INFO:Initializing load_model()
2025-03-26 22:54:38,047:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:54:56,680:INFO:Initializing load_model()
2025-03-26 22:54:56,680:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:56:34,819:INFO:Initializing load_model()
2025-03-26 22:56:34,819:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:59:01,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:59:01,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:59:01,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:59:01,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 22:59:03,005:INFO:Initializing load_model()
2025-03-26 22:59:03,005:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 22:59:05,021:INFO:Initializing load_model()
2025-03-26 22:59:05,022:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:00:43,888:INFO:Initializing load_model()
2025-03-26 23:00:43,889:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:00:45,995:INFO:Initializing load_model()
2025-03-26 23:00:45,996:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:00:50,462:INFO:Initializing load_model()
2025-03-26 23:00:50,462:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:00:51,079:INFO:Initializing load_model()
2025-03-26 23:00:51,079:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:00:51,912:INFO:Initializing load_model()
2025-03-26 23:00:51,912:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-26 23:02:06,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:06,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:06,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:06,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:08,583:INFO:PyCaret ClassificationExperiment
2025-03-26 23:02:08,583:INFO:Logging name: Treinamento
2025-03-26 23:02:08,583:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-26 23:02:08,583:INFO:version 3.3.2
2025-03-26 23:02:08,583:INFO:Initializing setup()
2025-03-26 23:02:08,583:INFO:self.USI: b3a2
2025-03-26 23:02:08,583:INFO:self._variable_keys: {'memory', 'seed', 'gpu_param', 'X_train', 'pipeline', 'logging_param', 'data', 'n_jobs_param', 'exp_id', 'fold_generator', 'X', '_ml_usecase', 'fold_shuffle_param', 'idx', 'y_train', '_available_plots', 'log_plots_param', 'is_multiclass', 'html_param', 'exp_name_log', 'y', 'y_test', 'X_test', 'USI', 'target_param', 'fold_groups_param', 'gpu_n_jobs_param', 'fix_imbalance'}
2025-03-26 23:02:08,583:INFO:Checking environment
2025-03-26 23:02:08,583:INFO:python_version: 3.9.21
2025-03-26 23:02:08,583:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-26 23:02:08,583:INFO:machine: AMD64
2025-03-26 23:02:08,611:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-26 23:02:08,618:INFO:Memory: svmem(total=33685155840, available=17507483648, percent=48.0, used=16177672192, free=17507483648)
2025-03-26 23:02:08,618:INFO:Physical Core: 6
2025-03-26 23:02:08,618:INFO:Logical Core: 12
2025-03-26 23:02:08,618:INFO:Checking libraries
2025-03-26 23:02:08,618:INFO:System:
2025-03-26 23:02:08,618:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-26 23:02:08,618:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-26 23:02:08,618:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-26 23:02:08,618:INFO:PyCaret required dependencies:
2025-03-26 23:02:08,659:INFO:                 pip: 25.0
2025-03-26 23:02:08,659:INFO:          setuptools: 75.8.0
2025-03-26 23:02:08,659:INFO:             pycaret: 3.3.2
2025-03-26 23:02:08,659:INFO:             IPython: 8.18.1
2025-03-26 23:02:08,659:INFO:          ipywidgets: 8.1.5
2025-03-26 23:02:08,659:INFO:                tqdm: 4.67.1
2025-03-26 23:02:08,659:INFO:               numpy: 1.26.4
2025-03-26 23:02:08,659:INFO:              pandas: 1.5.3
2025-03-26 23:02:08,659:INFO:              jinja2: 3.1.6
2025-03-26 23:02:08,659:INFO:               scipy: 1.11.4
2025-03-26 23:02:08,659:INFO:              joblib: 1.3.2
2025-03-26 23:02:08,659:INFO:             sklearn: 1.4.2
2025-03-26 23:02:08,659:INFO:                pyod: 2.0.3
2025-03-26 23:02:08,659:INFO:            imblearn: 0.12.4
2025-03-26 23:02:08,659:INFO:   category_encoders: 2.6.4
2025-03-26 23:02:08,659:INFO:            lightgbm: 4.6.0
2025-03-26 23:02:08,659:INFO:               numba: 0.60.0
2025-03-26 23:02:08,659:INFO:            requests: 2.32.3
2025-03-26 23:02:08,659:INFO:          matplotlib: 3.7.5
2025-03-26 23:02:08,659:INFO:          scikitplot: 0.3.7
2025-03-26 23:02:08,659:INFO:         yellowbrick: 1.5
2025-03-26 23:02:08,659:INFO:              plotly: 5.24.1
2025-03-26 23:02:08,659:INFO:    plotly-resampler: Not installed
2025-03-26 23:02:08,659:INFO:             kaleido: 0.2.1
2025-03-26 23:02:08,659:INFO:           schemdraw: 0.15
2025-03-26 23:02:08,659:INFO:         statsmodels: 0.14.4
2025-03-26 23:02:08,659:INFO:              sktime: 0.26.0
2025-03-26 23:02:08,659:INFO:               tbats: 1.1.3
2025-03-26 23:02:08,659:INFO:            pmdarima: 2.0.4
2025-03-26 23:02:08,659:INFO:              psutil: 7.0.0
2025-03-26 23:02:08,659:INFO:          markupsafe: 3.0.2
2025-03-26 23:02:08,659:INFO:             pickle5: Not installed
2025-03-26 23:02:08,659:INFO:         cloudpickle: 2.2.1
2025-03-26 23:02:08,659:INFO:         deprecation: 2.1.0
2025-03-26 23:02:08,659:INFO:              xxhash: 3.5.0
2025-03-26 23:02:08,659:INFO:           wurlitzer: Not installed
2025-03-26 23:02:08,659:INFO:PyCaret optional dependencies:
2025-03-26 23:02:09,070:INFO:                shap: 0.47.1
2025-03-26 23:02:09,070:INFO:           interpret: Not installed
2025-03-26 23:02:09,070:INFO:                umap: Not installed
2025-03-26 23:02:09,070:INFO:     ydata_profiling: Not installed
2025-03-26 23:02:09,070:INFO:  explainerdashboard: Not installed
2025-03-26 23:02:09,070:INFO:             autoviz: Not installed
2025-03-26 23:02:09,070:INFO:           fairlearn: Not installed
2025-03-26 23:02:09,070:INFO:          deepchecks: Not installed
2025-03-26 23:02:09,070:INFO:             xgboost: Not installed
2025-03-26 23:02:09,070:INFO:            catboost: Not installed
2025-03-26 23:02:09,070:INFO:              kmodes: Not installed
2025-03-26 23:02:09,070:INFO:             mlxtend: Not installed
2025-03-26 23:02:09,070:INFO:       statsforecast: Not installed
2025-03-26 23:02:09,070:INFO:        tune_sklearn: Not installed
2025-03-26 23:02:09,070:INFO:                 ray: Not installed
2025-03-26 23:02:09,070:INFO:            hyperopt: Not installed
2025-03-26 23:02:09,070:INFO:              optuna: Not installed
2025-03-26 23:02:09,070:INFO:               skopt: Not installed
2025-03-26 23:02:09,070:INFO:              mlflow: 2.21.0
2025-03-26 23:02:09,070:INFO:              gradio: Not installed
2025-03-26 23:02:09,070:INFO:             fastapi: 0.115.11
2025-03-26 23:02:09,070:INFO:             uvicorn: 0.34.0
2025-03-26 23:02:09,070:INFO:              m2cgen: Not installed
2025-03-26 23:02:09,070:INFO:           evidently: Not installed
2025-03-26 23:02:09,070:INFO:               fugue: Not installed
2025-03-26 23:02:09,070:INFO:           streamlit: 1.43.2
2025-03-26 23:02:09,070:INFO:             prophet: Not installed
2025-03-26 23:02:09,070:INFO:None
2025-03-26 23:02:09,070:INFO:Set up data.
2025-03-26 23:02:09,086:INFO:Set up folding strategy.
2025-03-26 23:02:09,086:INFO:Set up train/test split.
2025-03-26 23:02:09,086:INFO:Set up index.
2025-03-26 23:02:09,086:INFO:Assigning column types.
2025-03-26 23:02:09,086:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-26 23:02:09,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,197:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-26 23:02:09,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-26 23:02:09,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,308:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-26 23:02:09,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,404:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,404:INFO:Preparing preprocessing pipeline...
2025-03-26 23:02:09,404:INFO:Set up simple imputation.
2025-03-26 23:02:09,419:INFO:Finished creating preprocessing pipeline.
2025-03-26 23:02:09,419:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 23:02:09,419:INFO:Creating final display dataframe.
2025-03-26 23:02:09,468:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             b3a2
2025-03-26 23:02:09,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-26 23:02:09,576:INFO:Logging experiment in loggers
2025-03-26 23:02:09,640:INFO:SubProcess save_model() called ==================================
2025-03-26 23:02:09,656:INFO:Initializing save_model()
2025-03-26 23:02:09,656:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpxtoayzea\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 23:02:09,656:INFO:Adding model into prep_pipe
2025-03-26 23:02:09,656:WARNING:Only Model saved as it was a pipeline.
2025-03-26 23:02:09,656:INFO:C:\Users\Ian\AppData\Local\Temp\tmpxtoayzea\Transformation Pipeline.pkl saved in current working directory
2025-03-26 23:02:09,656:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-26 23:02:09,656:INFO:save_model() successfully completed......................................
2025-03-26 23:02:09,735:INFO:SubProcess save_model() end ==================================
2025-03-26 23:02:09,767:INFO:setup() successfully completed in 0.99s...............
2025-03-26 23:02:09,767:INFO:Initializing create_model()
2025-03-26 23:02:09,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016723994F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 23:02:09,767:INFO:Checking exceptions
2025-03-26 23:02:09,767:INFO:Importing libraries
2025-03-26 23:02:09,767:INFO:Copying training dataset
2025-03-26 23:02:09,767:INFO:Defining folds
2025-03-26 23:02:09,767:INFO:Declaring metric variables
2025-03-26 23:02:09,767:INFO:Importing untrained model
2025-03-26 23:02:09,767:INFO:Logistic Regression Imported successfully
2025-03-26 23:02:09,767:INFO:Starting cross validation
2025-03-26 23:02:09,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 23:02:13,591:INFO:Calculating mean and std
2025-03-26 23:02:13,594:INFO:Creating metrics dataframe
2025-03-26 23:02:13,596:INFO:Finalizing model
2025-03-26 23:02:13,647:INFO:Creating Dashboard logs
2025-03-26 23:02:13,647:INFO:Model: Logistic Regression
2025-03-26 23:02:13,696:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-26 23:02:13,805:INFO:Initializing predict_model()
2025-03-26 23:02:13,805:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016723994F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000167438B3940>)
2025-03-26 23:02:13,805:INFO:Checking exceptions
2025-03-26 23:02:13,805:INFO:Preloading libraries
2025-03-26 23:02:13,940:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-26 23:02:13,964:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 23:02:13,964:INFO:Uploading results into container
2025-03-26 23:02:13,964:INFO:Uploading model into container now
2025-03-26 23:02:13,974:INFO:_master_model_container: 1
2025-03-26 23:02:13,974:INFO:_display_container: 2
2025-03-26 23:02:13,974:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-26 23:02:13,974:INFO:create_model() successfully completed......................................
2025-03-26 23:02:14,059:INFO:Initializing create_model()
2025-03-26 23:02:14,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016723994F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-26 23:02:14,059:INFO:Checking exceptions
2025-03-26 23:02:14,059:INFO:Importing libraries
2025-03-26 23:02:14,059:INFO:Copying training dataset
2025-03-26 23:02:14,059:INFO:Defining folds
2025-03-26 23:02:14,059:INFO:Declaring metric variables
2025-03-26 23:02:14,059:INFO:Importing untrained model
2025-03-26 23:02:14,059:INFO:Decision Tree Classifier Imported successfully
2025-03-26 23:02:14,059:INFO:Starting cross validation
2025-03-26 23:02:14,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-26 23:02:16,220:INFO:Calculating mean and std
2025-03-26 23:02:16,220:INFO:Creating metrics dataframe
2025-03-26 23:02:16,220:INFO:Finalizing model
2025-03-26 23:02:16,243:INFO:Creating Dashboard logs
2025-03-26 23:02:16,243:INFO:Model: Decision Tree Classifier
2025-03-26 23:02:16,293:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-26 23:02:16,472:INFO:Initializing predict_model()
2025-03-26 23:02:16,472:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016723994F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000167422EC8B0>)
2025-03-26 23:02:16,472:INFO:Checking exceptions
2025-03-26 23:02:16,472:INFO:Preloading libraries
2025-03-26 23:02:16,617:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-26 23:02:16,617:INFO:Uploading results into container
2025-03-26 23:02:16,618:INFO:Uploading model into container now
2025-03-26 23:02:16,623:INFO:_master_model_container: 2
2025-03-26 23:02:16,623:INFO:_display_container: 3
2025-03-26 23:02:16,623:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-26 23:02:16,623:INFO:create_model() successfully completed......................................
2025-03-26 23:02:16,730:INFO:Initializing save_model()
2025-03-26 23:02:16,730:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-26 23:02:16,730:INFO:Adding model into prep_pipe
2025-03-26 23:02:16,735:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-26 23:02:16,739:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-26 23:02:16,739:INFO:save_model() successfully completed......................................
2025-03-26 23:02:19,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:19,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:19,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:19,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-26 23:02:21,395:INFO:Initializing load_model()
2025-03-26 23:02:21,395:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:25:42,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:42,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:42,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:42,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:44,140:INFO:PyCaret ClassificationExperiment
2025-03-28 19:25:44,140:INFO:Logging name: Treinamento
2025-03-28 19:25:44,140:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-28 19:25:44,140:INFO:version 3.3.2
2025-03-28 19:25:44,140:INFO:Initializing setup()
2025-03-28 19:25:44,140:INFO:self.USI: b11f
2025-03-28 19:25:44,140:INFO:self._variable_keys: {'y', 'X', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'y_test', 'X_test', 'fold_shuffle_param', 'y_train', 'n_jobs_param', 'data', 'gpu_param', 'idx', 'memory', 'exp_name_log', '_available_plots', 'fold_groups_param', 'USI', 'fold_generator', 'is_multiclass', 'logging_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'pipeline', '_ml_usecase', 'target_param', 'seed'}
2025-03-28 19:25:44,140:INFO:Checking environment
2025-03-28 19:25:44,140:INFO:python_version: 3.9.21
2025-03-28 19:25:44,140:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-28 19:25:44,140:INFO:machine: AMD64
2025-03-28 19:25:44,201:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-28 19:25:44,205:INFO:Memory: svmem(total=33685155840, available=22634790912, percent=32.8, used=11050364928, free=22634790912)
2025-03-28 19:25:44,205:INFO:Physical Core: 6
2025-03-28 19:25:44,205:INFO:Logical Core: 12
2025-03-28 19:25:44,205:INFO:Checking libraries
2025-03-28 19:25:44,205:INFO:System:
2025-03-28 19:25:44,205:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-28 19:25:44,205:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-28 19:25:44,205:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-28 19:25:44,205:INFO:PyCaret required dependencies:
2025-03-28 19:25:44,245:INFO:                 pip: 25.0
2025-03-28 19:25:44,245:INFO:          setuptools: 75.8.0
2025-03-28 19:25:44,245:INFO:             pycaret: 3.3.2
2025-03-28 19:25:44,245:INFO:             IPython: 8.18.1
2025-03-28 19:25:44,245:INFO:          ipywidgets: 8.1.5
2025-03-28 19:25:44,245:INFO:                tqdm: 4.67.1
2025-03-28 19:25:44,245:INFO:               numpy: 1.26.4
2025-03-28 19:25:44,245:INFO:              pandas: 1.5.3
2025-03-28 19:25:44,245:INFO:              jinja2: 3.1.6
2025-03-28 19:25:44,245:INFO:               scipy: 1.11.4
2025-03-28 19:25:44,245:INFO:              joblib: 1.3.2
2025-03-28 19:25:44,245:INFO:             sklearn: 1.4.2
2025-03-28 19:25:44,245:INFO:                pyod: 2.0.3
2025-03-28 19:25:44,245:INFO:            imblearn: 0.12.4
2025-03-28 19:25:44,245:INFO:   category_encoders: 2.6.4
2025-03-28 19:25:44,245:INFO:            lightgbm: 4.6.0
2025-03-28 19:25:44,245:INFO:               numba: 0.60.0
2025-03-28 19:25:44,245:INFO:            requests: 2.32.3
2025-03-28 19:25:44,245:INFO:          matplotlib: 3.7.5
2025-03-28 19:25:44,245:INFO:          scikitplot: 0.3.7
2025-03-28 19:25:44,245:INFO:         yellowbrick: 1.5
2025-03-28 19:25:44,245:INFO:              plotly: 5.24.1
2025-03-28 19:25:44,245:INFO:    plotly-resampler: Not installed
2025-03-28 19:25:44,245:INFO:             kaleido: 0.2.1
2025-03-28 19:25:44,245:INFO:           schemdraw: 0.15
2025-03-28 19:25:44,245:INFO:         statsmodels: 0.14.4
2025-03-28 19:25:44,245:INFO:              sktime: 0.26.0
2025-03-28 19:25:44,245:INFO:               tbats: 1.1.3
2025-03-28 19:25:44,245:INFO:            pmdarima: 2.0.4
2025-03-28 19:25:44,245:INFO:              psutil: 7.0.0
2025-03-28 19:25:44,245:INFO:          markupsafe: 3.0.2
2025-03-28 19:25:44,245:INFO:             pickle5: Not installed
2025-03-28 19:25:44,245:INFO:         cloudpickle: 2.2.1
2025-03-28 19:25:44,245:INFO:         deprecation: 2.1.0
2025-03-28 19:25:44,245:INFO:              xxhash: 3.5.0
2025-03-28 19:25:44,245:INFO:           wurlitzer: Not installed
2025-03-28 19:25:44,245:INFO:PyCaret optional dependencies:
2025-03-28 19:25:44,673:INFO:                shap: 0.47.1
2025-03-28 19:25:44,673:INFO:           interpret: Not installed
2025-03-28 19:25:44,673:INFO:                umap: Not installed
2025-03-28 19:25:44,673:INFO:     ydata_profiling: Not installed
2025-03-28 19:25:44,673:INFO:  explainerdashboard: Not installed
2025-03-28 19:25:44,673:INFO:             autoviz: Not installed
2025-03-28 19:25:44,673:INFO:           fairlearn: Not installed
2025-03-28 19:25:44,673:INFO:          deepchecks: Not installed
2025-03-28 19:25:44,673:INFO:             xgboost: Not installed
2025-03-28 19:25:44,673:INFO:            catboost: Not installed
2025-03-28 19:25:44,673:INFO:              kmodes: Not installed
2025-03-28 19:25:44,673:INFO:             mlxtend: Not installed
2025-03-28 19:25:44,673:INFO:       statsforecast: Not installed
2025-03-28 19:25:44,673:INFO:        tune_sklearn: Not installed
2025-03-28 19:25:44,673:INFO:                 ray: Not installed
2025-03-28 19:25:44,673:INFO:            hyperopt: Not installed
2025-03-28 19:25:44,673:INFO:              optuna: Not installed
2025-03-28 19:25:44,673:INFO:               skopt: Not installed
2025-03-28 19:25:44,673:INFO:              mlflow: 2.21.0
2025-03-28 19:25:44,673:INFO:              gradio: Not installed
2025-03-28 19:25:44,673:INFO:             fastapi: 0.115.11
2025-03-28 19:25:44,673:INFO:             uvicorn: 0.34.0
2025-03-28 19:25:44,673:INFO:              m2cgen: Not installed
2025-03-28 19:25:44,673:INFO:           evidently: Not installed
2025-03-28 19:25:44,673:INFO:               fugue: Not installed
2025-03-28 19:25:44,673:INFO:           streamlit: 1.43.2
2025-03-28 19:25:44,673:INFO:             prophet: Not installed
2025-03-28 19:25:44,673:INFO:None
2025-03-28 19:25:44,673:INFO:Set up data.
2025-03-28 19:25:44,673:INFO:Set up folding strategy.
2025-03-28 19:25:44,673:INFO:Set up train/test split.
2025-03-28 19:25:44,691:INFO:Set up index.
2025-03-28 19:25:44,691:INFO:Assigning column types.
2025-03-28 19:25:44,691:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-28 19:25:44,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,719:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,783:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,783:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,799:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-28 19:25:44,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,879:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:25:44,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,894:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-28 19:25:44,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:44,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,005:INFO:Preparing preprocessing pipeline...
2025-03-28 19:25:45,005:INFO:Set up simple imputation.
2025-03-28 19:25:45,036:INFO:Finished creating preprocessing pipeline.
2025-03-28 19:25:45,036:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:25:45,036:INFO:Creating final display dataframe.
2025-03-28 19:25:45,092:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             b11f
2025-03-28 19:25:45,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:25:45,196:INFO:Logging experiment in loggers
2025-03-28 19:25:45,262:INFO:SubProcess save_model() called ==================================
2025-03-28 19:25:45,275:INFO:Initializing save_model()
2025-03-28 19:25:45,275:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp8hyzefso\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:25:45,275:INFO:Adding model into prep_pipe
2025-03-28 19:25:45,275:WARNING:Only Model saved as it was a pipeline.
2025-03-28 19:25:45,275:INFO:C:\Users\Ian\AppData\Local\Temp\tmp8hyzefso\Transformation Pipeline.pkl saved in current working directory
2025-03-28 19:25:45,279:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:25:45,279:INFO:save_model() successfully completed......................................
2025-03-28 19:25:45,362:INFO:SubProcess save_model() end ==================================
2025-03-28 19:25:45,420:INFO:setup() successfully completed in 1.06s...............
2025-03-28 19:25:45,420:INFO:Initializing create_model()
2025-03-28 19:25:45,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D038854F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:25:45,420:INFO:Checking exceptions
2025-03-28 19:25:45,420:INFO:Importing libraries
2025-03-28 19:25:45,420:INFO:Copying training dataset
2025-03-28 19:25:45,420:INFO:Defining folds
2025-03-28 19:25:45,420:INFO:Declaring metric variables
2025-03-28 19:25:45,420:INFO:Importing untrained model
2025-03-28 19:25:45,420:INFO:Logistic Regression Imported successfully
2025-03-28 19:25:45,420:INFO:Starting cross validation
2025-03-28 19:25:45,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:25:49,394:INFO:Calculating mean and std
2025-03-28 19:25:49,396:INFO:Creating metrics dataframe
2025-03-28 19:25:49,399:INFO:Finalizing model
2025-03-28 19:25:49,460:INFO:Creating Dashboard logs
2025-03-28 19:25:49,460:INFO:Model: Logistic Regression
2025-03-28 19:25:49,525:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-28 19:25:49,672:INFO:Initializing predict_model()
2025-03-28 19:25:49,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D038854F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D058774940>)
2025-03-28 19:25:49,672:INFO:Checking exceptions
2025-03-28 19:25:49,672:INFO:Preloading libraries
2025-03-28 19:25:49,805:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-28 19:25:49,829:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:25:49,829:INFO:Uploading results into container
2025-03-28 19:25:49,829:INFO:Uploading model into container now
2025-03-28 19:25:49,836:INFO:_master_model_container: 1
2025-03-28 19:25:49,836:INFO:_display_container: 2
2025-03-28 19:25:49,836:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-28 19:25:49,836:INFO:create_model() successfully completed......................................
2025-03-28 19:25:49,925:INFO:Initializing create_model()
2025-03-28 19:25:49,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D038854F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:25:49,925:INFO:Checking exceptions
2025-03-28 19:25:49,927:INFO:Importing libraries
2025-03-28 19:25:49,927:INFO:Copying training dataset
2025-03-28 19:25:49,931:INFO:Defining folds
2025-03-28 19:25:49,931:INFO:Declaring metric variables
2025-03-28 19:25:49,931:INFO:Importing untrained model
2025-03-28 19:25:49,931:INFO:Decision Tree Classifier Imported successfully
2025-03-28 19:25:49,931:INFO:Starting cross validation
2025-03-28 19:25:49,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:25:52,208:INFO:Calculating mean and std
2025-03-28 19:25:52,208:INFO:Creating metrics dataframe
2025-03-28 19:25:52,211:INFO:Finalizing model
2025-03-28 19:25:52,245:INFO:Creating Dashboard logs
2025-03-28 19:25:52,245:INFO:Model: Decision Tree Classifier
2025-03-28 19:25:52,295:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-28 19:25:52,422:INFO:Initializing predict_model()
2025-03-28 19:25:52,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D038854F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D0571AC8B0>)
2025-03-28 19:25:52,422:INFO:Checking exceptions
2025-03-28 19:25:52,422:INFO:Preloading libraries
2025-03-28 19:25:52,577:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:25:52,577:INFO:Uploading results into container
2025-03-28 19:25:52,577:INFO:Uploading model into container now
2025-03-28 19:25:52,593:INFO:_master_model_container: 2
2025-03-28 19:25:52,593:INFO:_display_container: 3
2025-03-28 19:25:52,593:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-28 19:25:52,593:INFO:create_model() successfully completed......................................
2025-03-28 19:25:52,685:INFO:Initializing save_model()
2025-03-28 19:25:52,685:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:25:52,685:INFO:Adding model into prep_pipe
2025-03-28 19:25:52,687:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-28 19:25:52,691:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-28 19:25:52,691:INFO:save_model() successfully completed......................................
2025-03-28 19:25:56,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:56,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:56,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:56,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:25:57,856:INFO:Initializing load_model()
2025-03-28 19:25:57,856:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:40,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:27:40,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:27:40,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:27:40,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:27:41,304:INFO:Initializing load_model()
2025-03-28 19:27:41,304:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:43,582:INFO:Initializing load_model()
2025-03-28 19:27:43,582:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:46,110:INFO:Initializing load_model()
2025-03-28 19:27:46,112:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:47,030:INFO:Initializing load_model()
2025-03-28 19:27:47,030:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:47,764:INFO:Initializing load_model()
2025-03-28 19:27:47,764:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:50,339:INFO:Initializing load_model()
2025-03-28 19:27:50,339:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:50,948:INFO:Initializing load_model()
2025-03-28 19:27:50,948:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:53,314:INFO:Initializing load_model()
2025-03-28 19:27:53,314:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:27:54,149:INFO:Initializing load_model()
2025-03-28 19:27:54,149:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:29:15,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:15,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:15,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:15,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:17,441:INFO:PyCaret ClassificationExperiment
2025-03-28 19:29:17,441:INFO:Logging name: Treinamento
2025-03-28 19:29:17,441:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-28 19:29:17,441:INFO:version 3.3.2
2025-03-28 19:29:17,441:INFO:Initializing setup()
2025-03-28 19:29:17,441:INFO:self.USI: a257
2025-03-28 19:29:17,441:INFO:self._variable_keys: {'data', 'fold_generator', 'X', 'logging_param', 'y', 'log_plots_param', 'fix_imbalance', 'y_test', 'fold_shuffle_param', 'USI', 'is_multiclass', 'X_test', 'X_train', 'idx', 'gpu_n_jobs_param', 'seed', 'y_train', 'exp_name_log', 'html_param', 'fold_groups_param', '_ml_usecase', 'exp_id', 'n_jobs_param', 'target_param', 'memory', 'pipeline', '_available_plots', 'gpu_param'}
2025-03-28 19:29:17,441:INFO:Checking environment
2025-03-28 19:29:17,441:INFO:python_version: 3.9.21
2025-03-28 19:29:17,441:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-28 19:29:17,441:INFO:machine: AMD64
2025-03-28 19:29:17,509:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-28 19:29:17,512:INFO:Memory: svmem(total=33685155840, available=22681169920, percent=32.7, used=11003985920, free=22681169920)
2025-03-28 19:29:17,512:INFO:Physical Core: 6
2025-03-28 19:29:17,513:INFO:Logical Core: 12
2025-03-28 19:29:17,513:INFO:Checking libraries
2025-03-28 19:29:17,513:INFO:System:
2025-03-28 19:29:17,513:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-28 19:29:17,513:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-28 19:29:17,513:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-28 19:29:17,513:INFO:PyCaret required dependencies:
2025-03-28 19:29:17,562:INFO:                 pip: 25.0
2025-03-28 19:29:17,562:INFO:          setuptools: 75.8.0
2025-03-28 19:29:17,562:INFO:             pycaret: 3.3.2
2025-03-28 19:29:17,562:INFO:             IPython: 8.18.1
2025-03-28 19:29:17,562:INFO:          ipywidgets: 8.1.5
2025-03-28 19:29:17,562:INFO:                tqdm: 4.67.1
2025-03-28 19:29:17,562:INFO:               numpy: 1.26.4
2025-03-28 19:29:17,562:INFO:              pandas: 1.5.3
2025-03-28 19:29:17,562:INFO:              jinja2: 3.1.6
2025-03-28 19:29:17,562:INFO:               scipy: 1.11.4
2025-03-28 19:29:17,562:INFO:              joblib: 1.3.2
2025-03-28 19:29:17,562:INFO:             sklearn: 1.4.2
2025-03-28 19:29:17,562:INFO:                pyod: 2.0.3
2025-03-28 19:29:17,562:INFO:            imblearn: 0.12.4
2025-03-28 19:29:17,562:INFO:   category_encoders: 2.6.4
2025-03-28 19:29:17,562:INFO:            lightgbm: 4.6.0
2025-03-28 19:29:17,562:INFO:               numba: 0.60.0
2025-03-28 19:29:17,562:INFO:            requests: 2.32.3
2025-03-28 19:29:17,562:INFO:          matplotlib: 3.7.5
2025-03-28 19:29:17,562:INFO:          scikitplot: 0.3.7
2025-03-28 19:29:17,562:INFO:         yellowbrick: 1.5
2025-03-28 19:29:17,562:INFO:              plotly: 5.24.1
2025-03-28 19:29:17,562:INFO:    plotly-resampler: Not installed
2025-03-28 19:29:17,562:INFO:             kaleido: 0.2.1
2025-03-28 19:29:17,562:INFO:           schemdraw: 0.15
2025-03-28 19:29:17,562:INFO:         statsmodels: 0.14.4
2025-03-28 19:29:17,562:INFO:              sktime: 0.26.0
2025-03-28 19:29:17,562:INFO:               tbats: 1.1.3
2025-03-28 19:29:17,562:INFO:            pmdarima: 2.0.4
2025-03-28 19:29:17,562:INFO:              psutil: 7.0.0
2025-03-28 19:29:17,562:INFO:          markupsafe: 3.0.2
2025-03-28 19:29:17,562:INFO:             pickle5: Not installed
2025-03-28 19:29:17,562:INFO:         cloudpickle: 2.2.1
2025-03-28 19:29:17,562:INFO:         deprecation: 2.1.0
2025-03-28 19:29:17,562:INFO:              xxhash: 3.5.0
2025-03-28 19:29:17,562:INFO:           wurlitzer: Not installed
2025-03-28 19:29:17,562:INFO:PyCaret optional dependencies:
2025-03-28 19:29:17,945:INFO:                shap: 0.47.1
2025-03-28 19:29:17,945:INFO:           interpret: Not installed
2025-03-28 19:29:17,945:INFO:                umap: Not installed
2025-03-28 19:29:17,945:INFO:     ydata_profiling: Not installed
2025-03-28 19:29:17,945:INFO:  explainerdashboard: Not installed
2025-03-28 19:29:17,945:INFO:             autoviz: Not installed
2025-03-28 19:29:17,945:INFO:           fairlearn: Not installed
2025-03-28 19:29:17,945:INFO:          deepchecks: Not installed
2025-03-28 19:29:17,945:INFO:             xgboost: Not installed
2025-03-28 19:29:17,945:INFO:            catboost: Not installed
2025-03-28 19:29:17,945:INFO:              kmodes: Not installed
2025-03-28 19:29:17,945:INFO:             mlxtend: Not installed
2025-03-28 19:29:17,945:INFO:       statsforecast: Not installed
2025-03-28 19:29:17,945:INFO:        tune_sklearn: Not installed
2025-03-28 19:29:17,945:INFO:                 ray: Not installed
2025-03-28 19:29:17,945:INFO:            hyperopt: Not installed
2025-03-28 19:29:17,945:INFO:              optuna: Not installed
2025-03-28 19:29:17,945:INFO:               skopt: Not installed
2025-03-28 19:29:17,945:INFO:              mlflow: 2.21.0
2025-03-28 19:29:17,945:INFO:              gradio: Not installed
2025-03-28 19:29:17,945:INFO:             fastapi: 0.115.11
2025-03-28 19:29:17,945:INFO:             uvicorn: 0.34.0
2025-03-28 19:29:17,945:INFO:              m2cgen: Not installed
2025-03-28 19:29:17,945:INFO:           evidently: Not installed
2025-03-28 19:29:17,945:INFO:               fugue: Not installed
2025-03-28 19:29:17,945:INFO:           streamlit: 1.43.2
2025-03-28 19:29:17,945:INFO:             prophet: Not installed
2025-03-28 19:29:17,945:INFO:None
2025-03-28 19:29:17,945:INFO:Set up data.
2025-03-28 19:29:17,961:INFO:Set up folding strategy.
2025-03-28 19:29:17,961:INFO:Set up train/test split.
2025-03-28 19:29:17,961:INFO:Set up index.
2025-03-28 19:29:17,961:INFO:Assigning column types.
2025-03-28 19:29:17,961:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-28 19:29:17,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,070:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-28 19:29:18,102:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:29:18,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,181:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-28 19:29:18,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,276:INFO:Preparing preprocessing pipeline...
2025-03-28 19:29:18,276:INFO:Set up simple imputation.
2025-03-28 19:29:18,292:INFO:Finished creating preprocessing pipeline.
2025-03-28 19:29:18,292:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:29:18,292:INFO:Creating final display dataframe.
2025-03-28 19:29:18,340:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             a257
2025-03-28 19:29:18,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:29:18,446:INFO:Logging experiment in loggers
2025-03-28 19:29:18,525:INFO:SubProcess save_model() called ==================================
2025-03-28 19:29:18,529:INFO:Initializing save_model()
2025-03-28 19:29:18,529:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp25jpa2_l\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:29:18,529:INFO:Adding model into prep_pipe
2025-03-28 19:29:18,529:WARNING:Only Model saved as it was a pipeline.
2025-03-28 19:29:18,531:INFO:C:\Users\Ian\AppData\Local\Temp\tmp25jpa2_l\Transformation Pipeline.pkl saved in current working directory
2025-03-28 19:29:18,533:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:29:18,533:INFO:save_model() successfully completed......................................
2025-03-28 19:29:18,609:INFO:SubProcess save_model() end ==================================
2025-03-28 19:29:18,640:INFO:setup() successfully completed in 1.01s...............
2025-03-28 19:29:18,640:INFO:Initializing create_model()
2025-03-28 19:29:18,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4D1864F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:29:18,640:INFO:Checking exceptions
2025-03-28 19:29:18,640:INFO:Importing libraries
2025-03-28 19:29:18,640:INFO:Copying training dataset
2025-03-28 19:29:18,640:INFO:Defining folds
2025-03-28 19:29:18,640:INFO:Declaring metric variables
2025-03-28 19:29:18,640:INFO:Importing untrained model
2025-03-28 19:29:18,640:INFO:Logistic Regression Imported successfully
2025-03-28 19:29:18,640:INFO:Starting cross validation
2025-03-28 19:29:18,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:29:22,513:INFO:Calculating mean and std
2025-03-28 19:29:22,515:INFO:Creating metrics dataframe
2025-03-28 19:29:22,519:INFO:Finalizing model
2025-03-28 19:29:22,564:INFO:Creating Dashboard logs
2025-03-28 19:29:22,564:INFO:Model: Logistic Regression
2025-03-28 19:29:22,613:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-28 19:29:22,748:INFO:Initializing predict_model()
2025-03-28 19:29:22,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4D1864F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4F1793940>)
2025-03-28 19:29:22,748:INFO:Checking exceptions
2025-03-28 19:29:22,748:INFO:Preloading libraries
2025-03-28 19:29:22,884:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-28 19:29:22,907:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:29:22,907:INFO:Uploading results into container
2025-03-28 19:29:22,907:INFO:Uploading model into container now
2025-03-28 19:29:22,913:INFO:_master_model_container: 1
2025-03-28 19:29:22,913:INFO:_display_container: 2
2025-03-28 19:29:22,914:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-28 19:29:22,914:INFO:create_model() successfully completed......................................
2025-03-28 19:29:22,996:INFO:Initializing create_model()
2025-03-28 19:29:22,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4D1864F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:29:22,996:INFO:Checking exceptions
2025-03-28 19:29:22,996:INFO:Importing libraries
2025-03-28 19:29:22,996:INFO:Copying training dataset
2025-03-28 19:29:22,996:INFO:Defining folds
2025-03-28 19:29:22,996:INFO:Declaring metric variables
2025-03-28 19:29:22,996:INFO:Importing untrained model
2025-03-28 19:29:22,996:INFO:Decision Tree Classifier Imported successfully
2025-03-28 19:29:22,996:INFO:Starting cross validation
2025-03-28 19:29:22,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:29:25,179:INFO:Calculating mean and std
2025-03-28 19:29:25,179:INFO:Creating metrics dataframe
2025-03-28 19:29:25,179:INFO:Finalizing model
2025-03-28 19:29:25,213:INFO:Creating Dashboard logs
2025-03-28 19:29:25,213:INFO:Model: Decision Tree Classifier
2025-03-28 19:29:25,279:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-28 19:29:25,424:INFO:Initializing predict_model()
2025-03-28 19:29:25,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4D1864F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4F01CC8B0>)
2025-03-28 19:29:25,425:INFO:Checking exceptions
2025-03-28 19:29:25,425:INFO:Preloading libraries
2025-03-28 19:29:25,585:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:29:25,585:INFO:Uploading results into container
2025-03-28 19:29:25,586:INFO:Uploading model into container now
2025-03-28 19:29:25,591:INFO:_master_model_container: 2
2025-03-28 19:29:25,591:INFO:_display_container: 3
2025-03-28 19:29:25,592:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-28 19:29:25,592:INFO:create_model() successfully completed......................................
2025-03-28 19:29:25,686:INFO:Initializing save_model()
2025-03-28 19:29:25,686:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:29:25,686:INFO:Adding model into prep_pipe
2025-03-28 19:29:25,688:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-28 19:29:25,691:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-28 19:29:25,691:INFO:save_model() successfully completed......................................
2025-03-28 19:29:29,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:29,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:29,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:29,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:29:31,379:INFO:Initializing load_model()
2025-03-28 19:29:31,379:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:31:20,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:20,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:20,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:20,397:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:23,545:INFO:PyCaret ClassificationExperiment
2025-03-28 19:31:23,545:INFO:Logging name: Treinamento
2025-03-28 19:31:23,545:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-28 19:31:23,545:INFO:version 3.3.2
2025-03-28 19:31:23,545:INFO:Initializing setup()
2025-03-28 19:31:23,545:INFO:self.USI: 072b
2025-03-28 19:31:23,545:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'html_param', '_available_plots', 'fold_shuffle_param', 'X_test', 'gpu_param', 'fold_generator', '_ml_usecase', 'exp_name_log', 'data', 'y_train', 'logging_param', 'memory', 'n_jobs_param', 'X', 'target_param', 'seed', 'idx', 'y_test', 'exp_id', 'fold_groups_param', 'is_multiclass', 'gpu_n_jobs_param', 'USI', 'y', 'log_plots_param', 'pipeline'}
2025-03-28 19:31:23,545:INFO:Checking environment
2025-03-28 19:31:23,545:INFO:python_version: 3.9.21
2025-03-28 19:31:23,545:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-28 19:31:23,545:INFO:machine: AMD64
2025-03-28 19:31:23,606:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-28 19:31:23,612:INFO:Memory: svmem(total=33685155840, available=22414155776, percent=33.5, used=11271000064, free=22414155776)
2025-03-28 19:31:23,612:INFO:Physical Core: 6
2025-03-28 19:31:23,613:INFO:Logical Core: 12
2025-03-28 19:31:23,613:INFO:Checking libraries
2025-03-28 19:31:23,613:INFO:System:
2025-03-28 19:31:23,613:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-28 19:31:23,613:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-28 19:31:23,613:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-28 19:31:23,613:INFO:PyCaret required dependencies:
2025-03-28 19:31:23,663:INFO:                 pip: 25.0
2025-03-28 19:31:23,663:INFO:          setuptools: 75.8.0
2025-03-28 19:31:23,663:INFO:             pycaret: 3.3.2
2025-03-28 19:31:23,663:INFO:             IPython: 8.18.1
2025-03-28 19:31:23,663:INFO:          ipywidgets: 8.1.5
2025-03-28 19:31:23,663:INFO:                tqdm: 4.67.1
2025-03-28 19:31:23,663:INFO:               numpy: 1.26.4
2025-03-28 19:31:23,663:INFO:              pandas: 1.5.3
2025-03-28 19:31:23,663:INFO:              jinja2: 3.1.6
2025-03-28 19:31:23,663:INFO:               scipy: 1.11.4
2025-03-28 19:31:23,663:INFO:              joblib: 1.3.2
2025-03-28 19:31:23,663:INFO:             sklearn: 1.4.2
2025-03-28 19:31:23,663:INFO:                pyod: 2.0.3
2025-03-28 19:31:23,663:INFO:            imblearn: 0.12.4
2025-03-28 19:31:23,663:INFO:   category_encoders: 2.6.4
2025-03-28 19:31:23,663:INFO:            lightgbm: 4.6.0
2025-03-28 19:31:23,663:INFO:               numba: 0.60.0
2025-03-28 19:31:23,663:INFO:            requests: 2.32.3
2025-03-28 19:31:23,663:INFO:          matplotlib: 3.7.5
2025-03-28 19:31:23,663:INFO:          scikitplot: 0.3.7
2025-03-28 19:31:23,663:INFO:         yellowbrick: 1.5
2025-03-28 19:31:23,663:INFO:              plotly: 5.24.1
2025-03-28 19:31:23,663:INFO:    plotly-resampler: Not installed
2025-03-28 19:31:23,663:INFO:             kaleido: 0.2.1
2025-03-28 19:31:23,663:INFO:           schemdraw: 0.15
2025-03-28 19:31:23,663:INFO:         statsmodels: 0.14.4
2025-03-28 19:31:23,663:INFO:              sktime: 0.26.0
2025-03-28 19:31:23,663:INFO:               tbats: 1.1.3
2025-03-28 19:31:23,663:INFO:            pmdarima: 2.0.4
2025-03-28 19:31:23,663:INFO:              psutil: 7.0.0
2025-03-28 19:31:23,663:INFO:          markupsafe: 3.0.2
2025-03-28 19:31:23,663:INFO:             pickle5: Not installed
2025-03-28 19:31:23,663:INFO:         cloudpickle: 2.2.1
2025-03-28 19:31:23,663:INFO:         deprecation: 2.1.0
2025-03-28 19:31:23,663:INFO:              xxhash: 3.5.0
2025-03-28 19:31:23,663:INFO:           wurlitzer: Not installed
2025-03-28 19:31:23,663:INFO:PyCaret optional dependencies:
2025-03-28 19:31:24,091:INFO:                shap: 0.47.1
2025-03-28 19:31:24,091:INFO:           interpret: Not installed
2025-03-28 19:31:24,091:INFO:                umap: Not installed
2025-03-28 19:31:24,091:INFO:     ydata_profiling: Not installed
2025-03-28 19:31:24,091:INFO:  explainerdashboard: Not installed
2025-03-28 19:31:24,091:INFO:             autoviz: Not installed
2025-03-28 19:31:24,091:INFO:           fairlearn: Not installed
2025-03-28 19:31:24,091:INFO:          deepchecks: Not installed
2025-03-28 19:31:24,091:INFO:             xgboost: Not installed
2025-03-28 19:31:24,091:INFO:            catboost: Not installed
2025-03-28 19:31:24,091:INFO:              kmodes: Not installed
2025-03-28 19:31:24,091:INFO:             mlxtend: Not installed
2025-03-28 19:31:24,091:INFO:       statsforecast: Not installed
2025-03-28 19:31:24,091:INFO:        tune_sklearn: Not installed
2025-03-28 19:31:24,091:INFO:                 ray: Not installed
2025-03-28 19:31:24,091:INFO:            hyperopt: Not installed
2025-03-28 19:31:24,091:INFO:              optuna: Not installed
2025-03-28 19:31:24,091:INFO:               skopt: Not installed
2025-03-28 19:31:24,092:INFO:              mlflow: 2.21.0
2025-03-28 19:31:24,092:INFO:              gradio: Not installed
2025-03-28 19:31:24,092:INFO:             fastapi: 0.115.11
2025-03-28 19:31:24,092:INFO:             uvicorn: 0.34.0
2025-03-28 19:31:24,092:INFO:              m2cgen: Not installed
2025-03-28 19:31:24,092:INFO:           evidently: Not installed
2025-03-28 19:31:24,092:INFO:               fugue: Not installed
2025-03-28 19:31:24,092:INFO:           streamlit: 1.43.2
2025-03-28 19:31:24,092:INFO:             prophet: Not installed
2025-03-28 19:31:24,092:INFO:None
2025-03-28 19:31:24,092:INFO:Set up data.
2025-03-28 19:31:24,096:INFO:Set up folding strategy.
2025-03-28 19:31:24,096:INFO:Set up train/test split.
2025-03-28 19:31:24,103:INFO:Set up index.
2025-03-28 19:31:24,103:INFO:Assigning column types.
2025-03-28 19:31:24,105:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-28 19:31:24,136:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,140:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,213:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-28 19:31:24,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:31:24,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,312:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-28 19:31:24,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,429:INFO:Preparing preprocessing pipeline...
2025-03-28 19:31:24,430:INFO:Set up simple imputation.
2025-03-28 19:31:24,446:INFO:Finished creating preprocessing pipeline.
2025-03-28 19:31:24,448:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:31:24,448:INFO:Creating final display dataframe.
2025-03-28 19:31:24,480:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             072b
2025-03-28 19:31:24,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:31:24,596:INFO:Logging experiment in loggers
2025-03-28 19:31:24,663:INFO:SubProcess save_model() called ==================================
2025-03-28 19:31:24,663:INFO:Initializing save_model()
2025-03-28 19:31:24,663:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpzqnfrfw4\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:31:24,663:INFO:Adding model into prep_pipe
2025-03-28 19:31:24,663:WARNING:Only Model saved as it was a pipeline.
2025-03-28 19:31:24,663:INFO:C:\Users\Ian\AppData\Local\Temp\tmpzqnfrfw4\Transformation Pipeline.pkl saved in current working directory
2025-03-28 19:31:24,679:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:31:24,679:INFO:save_model() successfully completed......................................
2025-03-28 19:31:24,764:INFO:SubProcess save_model() end ==================================
2025-03-28 19:31:24,805:INFO:setup() successfully completed in 1.05s...............
2025-03-28 19:31:24,807:INFO:Initializing create_model()
2025-03-28 19:31:24,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018869EE4F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:31:24,807:INFO:Checking exceptions
2025-03-28 19:31:24,809:INFO:Importing libraries
2025-03-28 19:31:24,809:INFO:Copying training dataset
2025-03-28 19:31:24,813:INFO:Defining folds
2025-03-28 19:31:24,813:INFO:Declaring metric variables
2025-03-28 19:31:24,814:INFO:Importing untrained model
2025-03-28 19:31:24,814:INFO:Logistic Regression Imported successfully
2025-03-28 19:31:24,814:INFO:Starting cross validation
2025-03-28 19:31:24,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:31:28,928:INFO:Calculating mean and std
2025-03-28 19:31:28,930:INFO:Creating metrics dataframe
2025-03-28 19:31:28,933:INFO:Finalizing model
2025-03-28 19:31:28,985:INFO:Creating Dashboard logs
2025-03-28 19:31:28,987:INFO:Model: Logistic Regression
2025-03-28 19:31:29,035:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-28 19:31:29,160:INFO:Initializing predict_model()
2025-03-28 19:31:29,160:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018869EE4F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018809DF5940>)
2025-03-28 19:31:29,160:INFO:Checking exceptions
2025-03-28 19:31:29,160:INFO:Preloading libraries
2025-03-28 19:31:29,297:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-28 19:31:29,319:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:31:29,319:INFO:Uploading results into container
2025-03-28 19:31:29,319:INFO:Uploading model into container now
2025-03-28 19:31:29,328:INFO:_master_model_container: 1
2025-03-28 19:31:29,328:INFO:_display_container: 2
2025-03-28 19:31:29,328:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-28 19:31:29,328:INFO:create_model() successfully completed......................................
2025-03-28 19:31:29,414:INFO:Initializing create_model()
2025-03-28 19:31:29,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018869EE4F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:31:29,414:INFO:Checking exceptions
2025-03-28 19:31:29,415:INFO:Importing libraries
2025-03-28 19:31:29,415:INFO:Copying training dataset
2025-03-28 19:31:29,418:INFO:Defining folds
2025-03-28 19:31:29,418:INFO:Declaring metric variables
2025-03-28 19:31:29,418:INFO:Importing untrained model
2025-03-28 19:31:29,418:INFO:Decision Tree Classifier Imported successfully
2025-03-28 19:31:29,420:INFO:Starting cross validation
2025-03-28 19:31:29,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:31:31,704:INFO:Calculating mean and std
2025-03-28 19:31:31,704:INFO:Creating metrics dataframe
2025-03-28 19:31:31,706:INFO:Finalizing model
2025-03-28 19:31:31,726:INFO:Creating Dashboard logs
2025-03-28 19:31:31,726:INFO:Model: Decision Tree Classifier
2025-03-28 19:31:31,784:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-28 19:31:31,902:INFO:Initializing predict_model()
2025-03-28 19:31:31,902:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018869EE4F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001880882C8B0>)
2025-03-28 19:31:31,902:INFO:Checking exceptions
2025-03-28 19:31:31,902:INFO:Preloading libraries
2025-03-28 19:31:32,047:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:31:32,047:INFO:Uploading results into container
2025-03-28 19:31:32,047:INFO:Uploading model into container now
2025-03-28 19:31:32,047:INFO:_master_model_container: 2
2025-03-28 19:31:32,047:INFO:_display_container: 3
2025-03-28 19:31:32,047:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-28 19:31:32,047:INFO:create_model() successfully completed......................................
2025-03-28 19:31:32,147:INFO:Initializing save_model()
2025-03-28 19:31:32,147:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:31:32,147:INFO:Adding model into prep_pipe
2025-03-28 19:31:32,147:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-28 19:31:32,147:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-28 19:31:32,147:INFO:save_model() successfully completed......................................
2025-03-28 19:31:36,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:36,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:36,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:36,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:31:37,649:INFO:Initializing load_model()
2025-03-28 19:31:37,649:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:20,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:20,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:20,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:20,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:21,672:INFO:Initializing load_model()
2025-03-28 19:33:21,672:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:38,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:38,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:38,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:38,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:33:39,812:INFO:Initializing load_model()
2025-03-28 19:33:39,812:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:50,676:INFO:Initializing load_model()
2025-03-28 19:33:50,676:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:53,327:INFO:Initializing load_model()
2025-03-28 19:33:53,327:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:54,252:INFO:Initializing load_model()
2025-03-28 19:33:54,252:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:55,005:INFO:Initializing load_model()
2025-03-28 19:33:55,005:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:57,477:INFO:Initializing load_model()
2025-03-28 19:33:57,477:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:58,101:INFO:Initializing load_model()
2025-03-28 19:33:58,102:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:33:59,992:INFO:Initializing load_model()
2025-03-28 19:33:59,992:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:01,315:INFO:Initializing load_model()
2025-03-28 19:34:01,315:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:03,292:INFO:Initializing load_model()
2025-03-28 19:34:03,292:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:03,580:INFO:Initializing load_model()
2025-03-28 19:34:03,580:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:04,346:INFO:Initializing load_model()
2025-03-28 19:34:04,346:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:06,232:INFO:Initializing load_model()
2025-03-28 19:34:06,232:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:34:06,723:INFO:Initializing load_model()
2025-03-28 19:34:06,723:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:40:01,705:INFO:Initializing load_model()
2025-03-28 19:40:01,705:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:40:01,738:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 19:45:24,128:INFO:Initializing load_model()
2025-03-28 19:45:24,128:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:46:10,017:INFO:Initializing load_model()
2025-03-28 19:46:10,017:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:46:12,782:INFO:Initializing load_model()
2025-03-28 19:46:12,782:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:46:12,819:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 19:47:53,502:INFO:Initializing load_model()
2025-03-28 19:47:53,502:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:47:54,210:INFO:Initializing load_model()
2025-03-28 19:47:54,210:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:47:54,248:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 19:49:04,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:04,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:04,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:04,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:06,538:INFO:PyCaret ClassificationExperiment
2025-03-28 19:49:06,538:INFO:Logging name: Treinamento
2025-03-28 19:49:06,538:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-28 19:49:06,538:INFO:version 3.3.2
2025-03-28 19:49:06,538:INFO:Initializing setup()
2025-03-28 19:49:06,538:INFO:self.USI: 7655
2025-03-28 19:49:06,538:INFO:self._variable_keys: {'seed', 'y', 'data', 'X_test', 'X_train', 'y_train', 'exp_name_log', 'pipeline', 'USI', 'html_param', 'y_test', 'memory', 'idx', 'target_param', 'is_multiclass', 'exp_id', 'n_jobs_param', '_available_plots', 'X', 'fold_generator', 'fold_shuffle_param', 'logging_param', 'fix_imbalance', 'log_plots_param', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param'}
2025-03-28 19:49:06,538:INFO:Checking environment
2025-03-28 19:49:06,538:INFO:python_version: 3.9.21
2025-03-28 19:49:06,538:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-28 19:49:06,538:INFO:machine: AMD64
2025-03-28 19:49:06,600:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-28 19:49:06,603:INFO:Memory: svmem(total=33685155840, available=20106002432, percent=40.3, used=13579153408, free=20106002432)
2025-03-28 19:49:06,603:INFO:Physical Core: 6
2025-03-28 19:49:06,603:INFO:Logical Core: 12
2025-03-28 19:49:06,603:INFO:Checking libraries
2025-03-28 19:49:06,603:INFO:System:
2025-03-28 19:49:06,603:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-28 19:49:06,603:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-28 19:49:06,603:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-28 19:49:06,603:INFO:PyCaret required dependencies:
2025-03-28 19:49:06,644:INFO:                 pip: 25.0
2025-03-28 19:49:06,644:INFO:          setuptools: 75.8.0
2025-03-28 19:49:06,644:INFO:             pycaret: 3.3.2
2025-03-28 19:49:06,644:INFO:             IPython: 8.18.1
2025-03-28 19:49:06,644:INFO:          ipywidgets: 8.1.5
2025-03-28 19:49:06,644:INFO:                tqdm: 4.67.1
2025-03-28 19:49:06,644:INFO:               numpy: 1.26.4
2025-03-28 19:49:06,644:INFO:              pandas: 1.5.3
2025-03-28 19:49:06,644:INFO:              jinja2: 3.1.6
2025-03-28 19:49:06,644:INFO:               scipy: 1.11.4
2025-03-28 19:49:06,644:INFO:              joblib: 1.3.2
2025-03-28 19:49:06,644:INFO:             sklearn: 1.4.2
2025-03-28 19:49:06,644:INFO:                pyod: 2.0.3
2025-03-28 19:49:06,644:INFO:            imblearn: 0.12.4
2025-03-28 19:49:06,644:INFO:   category_encoders: 2.6.4
2025-03-28 19:49:06,644:INFO:            lightgbm: 4.6.0
2025-03-28 19:49:06,644:INFO:               numba: 0.60.0
2025-03-28 19:49:06,644:INFO:            requests: 2.32.3
2025-03-28 19:49:06,644:INFO:          matplotlib: 3.7.5
2025-03-28 19:49:06,644:INFO:          scikitplot: 0.3.7
2025-03-28 19:49:06,644:INFO:         yellowbrick: 1.5
2025-03-28 19:49:06,644:INFO:              plotly: 5.24.1
2025-03-28 19:49:06,644:INFO:    plotly-resampler: Not installed
2025-03-28 19:49:06,644:INFO:             kaleido: 0.2.1
2025-03-28 19:49:06,644:INFO:           schemdraw: 0.15
2025-03-28 19:49:06,644:INFO:         statsmodels: 0.14.4
2025-03-28 19:49:06,644:INFO:              sktime: 0.26.0
2025-03-28 19:49:06,644:INFO:               tbats: 1.1.3
2025-03-28 19:49:06,644:INFO:            pmdarima: 2.0.4
2025-03-28 19:49:06,644:INFO:              psutil: 7.0.0
2025-03-28 19:49:06,644:INFO:          markupsafe: 3.0.2
2025-03-28 19:49:06,644:INFO:             pickle5: Not installed
2025-03-28 19:49:06,644:INFO:         cloudpickle: 2.2.1
2025-03-28 19:49:06,644:INFO:         deprecation: 2.1.0
2025-03-28 19:49:06,644:INFO:              xxhash: 3.5.0
2025-03-28 19:49:06,644:INFO:           wurlitzer: Not installed
2025-03-28 19:49:06,644:INFO:PyCaret optional dependencies:
2025-03-28 19:49:07,073:INFO:                shap: 0.47.1
2025-03-28 19:49:07,073:INFO:           interpret: Not installed
2025-03-28 19:49:07,073:INFO:                umap: Not installed
2025-03-28 19:49:07,073:INFO:     ydata_profiling: Not installed
2025-03-28 19:49:07,073:INFO:  explainerdashboard: Not installed
2025-03-28 19:49:07,073:INFO:             autoviz: Not installed
2025-03-28 19:49:07,073:INFO:           fairlearn: Not installed
2025-03-28 19:49:07,073:INFO:          deepchecks: Not installed
2025-03-28 19:49:07,073:INFO:             xgboost: Not installed
2025-03-28 19:49:07,073:INFO:            catboost: Not installed
2025-03-28 19:49:07,073:INFO:              kmodes: Not installed
2025-03-28 19:49:07,073:INFO:             mlxtend: Not installed
2025-03-28 19:49:07,073:INFO:       statsforecast: Not installed
2025-03-28 19:49:07,073:INFO:        tune_sklearn: Not installed
2025-03-28 19:49:07,073:INFO:                 ray: Not installed
2025-03-28 19:49:07,073:INFO:            hyperopt: Not installed
2025-03-28 19:49:07,073:INFO:              optuna: Not installed
2025-03-28 19:49:07,073:INFO:               skopt: Not installed
2025-03-28 19:49:07,073:INFO:              mlflow: 2.21.0
2025-03-28 19:49:07,073:INFO:              gradio: Not installed
2025-03-28 19:49:07,073:INFO:             fastapi: 0.115.11
2025-03-28 19:49:07,073:INFO:             uvicorn: 0.34.0
2025-03-28 19:49:07,073:INFO:              m2cgen: Not installed
2025-03-28 19:49:07,073:INFO:           evidently: Not installed
2025-03-28 19:49:07,073:INFO:               fugue: Not installed
2025-03-28 19:49:07,073:INFO:           streamlit: 1.43.2
2025-03-28 19:49:07,073:INFO:             prophet: Not installed
2025-03-28 19:49:07,073:INFO:None
2025-03-28 19:49:07,073:INFO:Set up data.
2025-03-28 19:49:07,079:INFO:Set up folding strategy.
2025-03-28 19:49:07,079:INFO:Set up train/test split.
2025-03-28 19:49:07,079:INFO:Set up index.
2025-03-28 19:49:07,079:INFO:Assigning column types.
2025-03-28 19:49:07,079:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-28 19:49:07,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,179:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,196:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-28 19:49:07,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:49:07,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,296:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-28 19:49:07,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,396:INFO:Preparing preprocessing pipeline...
2025-03-28 19:49:07,396:INFO:Set up simple imputation.
2025-03-28 19:49:07,412:INFO:Finished creating preprocessing pipeline.
2025-03-28 19:49:07,412:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:49:07,412:INFO:Creating final display dataframe.
2025-03-28 19:49:07,462:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             7655
2025-03-28 19:49:07,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:49:07,585:INFO:Logging experiment in loggers
2025-03-28 19:49:07,658:INFO:SubProcess save_model() called ==================================
2025-03-28 19:49:07,665:INFO:Initializing save_model()
2025-03-28 19:49:07,665:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp872g220g\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:49:07,665:INFO:Adding model into prep_pipe
2025-03-28 19:49:07,665:WARNING:Only Model saved as it was a pipeline.
2025-03-28 19:49:07,667:INFO:C:\Users\Ian\AppData\Local\Temp\tmp872g220g\Transformation Pipeline.pkl saved in current working directory
2025-03-28 19:49:07,669:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:49:07,669:INFO:save_model() successfully completed......................................
2025-03-28 19:49:07,737:INFO:SubProcess save_model() end ==================================
2025-03-28 19:49:07,769:INFO:setup() successfully completed in 1.05s...............
2025-03-28 19:49:07,769:INFO:Initializing create_model()
2025-03-28 19:49:07,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC95D64F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:49:07,769:INFO:Checking exceptions
2025-03-28 19:49:07,769:INFO:Importing libraries
2025-03-28 19:49:07,769:INFO:Copying training dataset
2025-03-28 19:49:07,785:INFO:Defining folds
2025-03-28 19:49:07,785:INFO:Declaring metric variables
2025-03-28 19:49:07,787:INFO:Importing untrained model
2025-03-28 19:49:07,787:INFO:Logistic Regression Imported successfully
2025-03-28 19:49:07,787:INFO:Starting cross validation
2025-03-28 19:49:07,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:49:11,712:INFO:Calculating mean and std
2025-03-28 19:49:11,713:INFO:Creating metrics dataframe
2025-03-28 19:49:11,715:INFO:Finalizing model
2025-03-28 19:49:11,763:INFO:Creating Dashboard logs
2025-03-28 19:49:11,763:INFO:Model: Logistic Regression
2025-03-28 19:49:11,815:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-28 19:49:11,955:INFO:Initializing predict_model()
2025-03-28 19:49:11,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC95D64F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FCB5C84940>)
2025-03-28 19:49:11,956:INFO:Checking exceptions
2025-03-28 19:49:11,956:INFO:Preloading libraries
2025-03-28 19:49:12,082:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-28 19:49:12,115:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:49:12,116:INFO:Uploading results into container
2025-03-28 19:49:12,116:INFO:Uploading model into container now
2025-03-28 19:49:12,123:INFO:_master_model_container: 1
2025-03-28 19:49:12,123:INFO:_display_container: 2
2025-03-28 19:49:12,123:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-28 19:49:12,123:INFO:create_model() successfully completed......................................
2025-03-28 19:49:12,217:INFO:Initializing create_model()
2025-03-28 19:49:12,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC95D64F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:49:12,217:INFO:Checking exceptions
2025-03-28 19:49:12,218:INFO:Importing libraries
2025-03-28 19:49:12,218:INFO:Copying training dataset
2025-03-28 19:49:12,221:INFO:Defining folds
2025-03-28 19:49:12,221:INFO:Declaring metric variables
2025-03-28 19:49:12,221:INFO:Importing untrained model
2025-03-28 19:49:12,222:INFO:Decision Tree Classifier Imported successfully
2025-03-28 19:49:12,222:INFO:Starting cross validation
2025-03-28 19:49:12,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:49:14,491:INFO:Calculating mean and std
2025-03-28 19:49:14,491:INFO:Creating metrics dataframe
2025-03-28 19:49:14,493:INFO:Finalizing model
2025-03-28 19:49:14,533:INFO:Creating Dashboard logs
2025-03-28 19:49:14,533:INFO:Model: Decision Tree Classifier
2025-03-28 19:49:14,583:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-28 19:49:14,730:INFO:Initializing predict_model()
2025-03-28 19:49:14,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC95D64F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FCB46BD8B0>)
2025-03-28 19:49:14,730:INFO:Checking exceptions
2025-03-28 19:49:14,730:INFO:Preloading libraries
2025-03-28 19:49:14,873:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:49:14,873:INFO:Uploading results into container
2025-03-28 19:49:14,873:INFO:Uploading model into container now
2025-03-28 19:49:14,881:INFO:_master_model_container: 2
2025-03-28 19:49:14,881:INFO:_display_container: 3
2025-03-28 19:49:14,881:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-28 19:49:14,881:INFO:create_model() successfully completed......................................
2025-03-28 19:49:14,976:INFO:Initializing save_model()
2025-03-28 19:49:14,976:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:49:14,978:INFO:Adding model into prep_pipe
2025-03-28 19:49:14,981:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-28 19:49:14,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-28 19:49:14,985:INFO:save_model() successfully completed......................................
2025-03-28 19:49:18,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:18,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:18,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:18,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:49:19,912:INFO:Initializing load_model()
2025-03-28 19:49:19,912:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:50:21,293:INFO:Initializing load_model()
2025-03-28 19:50:21,293:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:50:22,113:INFO:Initializing load_model()
2025-03-28 19:50:22,113:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:50:22,147:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 19:50:33,637:INFO:Initializing load_model()
2025-03-28 19:50:33,637:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:50:33,673:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 19:51:15,739:INFO:Initializing load_model()
2025-03-28 19:51:15,739:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:51:17,187:INFO:Initializing load_model()
2025-03-28 19:51:17,187:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 19:52:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:05,587:INFO:PyCaret ClassificationExperiment
2025-03-28 19:52:05,587:INFO:Logging name: Treinamento
2025-03-28 19:52:05,587:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-28 19:52:05,587:INFO:version 3.3.2
2025-03-28 19:52:05,587:INFO:Initializing setup()
2025-03-28 19:52:05,587:INFO:self.USI: d9de
2025-03-28 19:52:05,587:INFO:self._variable_keys: {'html_param', 'y_test', 'logging_param', 'fold_groups_param', 'X_test', 'log_plots_param', 'X_train', 'fix_imbalance', 'pipeline', 'y_train', '_available_plots', 'is_multiclass', 'idx', 'fold_shuffle_param', 'memory', 'gpu_param', 'target_param', 'seed', 'y', 'X', 'exp_id', '_ml_usecase', 'n_jobs_param', 'data', 'exp_name_log', 'gpu_n_jobs_param', 'fold_generator', 'USI'}
2025-03-28 19:52:05,587:INFO:Checking environment
2025-03-28 19:52:05,587:INFO:python_version: 3.9.21
2025-03-28 19:52:05,587:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-28 19:52:05,587:INFO:machine: AMD64
2025-03-28 19:52:05,649:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-28 19:52:05,654:INFO:Memory: svmem(total=33685155840, available=20020092928, percent=40.6, used=13665062912, free=20020092928)
2025-03-28 19:52:05,654:INFO:Physical Core: 6
2025-03-28 19:52:05,654:INFO:Logical Core: 12
2025-03-28 19:52:05,654:INFO:Checking libraries
2025-03-28 19:52:05,654:INFO:System:
2025-03-28 19:52:05,654:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-28 19:52:05,654:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-28 19:52:05,654:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-28 19:52:05,654:INFO:PyCaret required dependencies:
2025-03-28 19:52:05,697:INFO:                 pip: 25.0
2025-03-28 19:52:05,697:INFO:          setuptools: 75.8.0
2025-03-28 19:52:05,697:INFO:             pycaret: 3.3.2
2025-03-28 19:52:05,697:INFO:             IPython: 8.18.1
2025-03-28 19:52:05,697:INFO:          ipywidgets: 8.1.5
2025-03-28 19:52:05,697:INFO:                tqdm: 4.67.1
2025-03-28 19:52:05,697:INFO:               numpy: 1.26.4
2025-03-28 19:52:05,697:INFO:              pandas: 1.5.3
2025-03-28 19:52:05,697:INFO:              jinja2: 3.1.6
2025-03-28 19:52:05,697:INFO:               scipy: 1.11.4
2025-03-28 19:52:05,697:INFO:              joblib: 1.3.2
2025-03-28 19:52:05,697:INFO:             sklearn: 1.4.2
2025-03-28 19:52:05,697:INFO:                pyod: 2.0.3
2025-03-28 19:52:05,697:INFO:            imblearn: 0.12.4
2025-03-28 19:52:05,697:INFO:   category_encoders: 2.6.4
2025-03-28 19:52:05,697:INFO:            lightgbm: 4.6.0
2025-03-28 19:52:05,697:INFO:               numba: 0.60.0
2025-03-28 19:52:05,697:INFO:            requests: 2.32.3
2025-03-28 19:52:05,697:INFO:          matplotlib: 3.7.5
2025-03-28 19:52:05,697:INFO:          scikitplot: 0.3.7
2025-03-28 19:52:05,697:INFO:         yellowbrick: 1.5
2025-03-28 19:52:05,697:INFO:              plotly: 5.24.1
2025-03-28 19:52:05,697:INFO:    plotly-resampler: Not installed
2025-03-28 19:52:05,697:INFO:             kaleido: 0.2.1
2025-03-28 19:52:05,697:INFO:           schemdraw: 0.15
2025-03-28 19:52:05,697:INFO:         statsmodels: 0.14.4
2025-03-28 19:52:05,697:INFO:              sktime: 0.26.0
2025-03-28 19:52:05,697:INFO:               tbats: 1.1.3
2025-03-28 19:52:05,697:INFO:            pmdarima: 2.0.4
2025-03-28 19:52:05,697:INFO:              psutil: 7.0.0
2025-03-28 19:52:05,697:INFO:          markupsafe: 3.0.2
2025-03-28 19:52:05,697:INFO:             pickle5: Not installed
2025-03-28 19:52:05,697:INFO:         cloudpickle: 2.2.1
2025-03-28 19:52:05,697:INFO:         deprecation: 2.1.0
2025-03-28 19:52:05,697:INFO:              xxhash: 3.5.0
2025-03-28 19:52:05,697:INFO:           wurlitzer: Not installed
2025-03-28 19:52:05,697:INFO:PyCaret optional dependencies:
2025-03-28 19:52:06,145:INFO:                shap: 0.47.1
2025-03-28 19:52:06,145:INFO:           interpret: Not installed
2025-03-28 19:52:06,145:INFO:                umap: Not installed
2025-03-28 19:52:06,145:INFO:     ydata_profiling: Not installed
2025-03-28 19:52:06,145:INFO:  explainerdashboard: Not installed
2025-03-28 19:52:06,145:INFO:             autoviz: Not installed
2025-03-28 19:52:06,145:INFO:           fairlearn: Not installed
2025-03-28 19:52:06,145:INFO:          deepchecks: Not installed
2025-03-28 19:52:06,145:INFO:             xgboost: Not installed
2025-03-28 19:52:06,145:INFO:            catboost: Not installed
2025-03-28 19:52:06,145:INFO:              kmodes: Not installed
2025-03-28 19:52:06,145:INFO:             mlxtend: Not installed
2025-03-28 19:52:06,145:INFO:       statsforecast: Not installed
2025-03-28 19:52:06,145:INFO:        tune_sklearn: Not installed
2025-03-28 19:52:06,145:INFO:                 ray: Not installed
2025-03-28 19:52:06,145:INFO:            hyperopt: Not installed
2025-03-28 19:52:06,145:INFO:              optuna: Not installed
2025-03-28 19:52:06,145:INFO:               skopt: Not installed
2025-03-28 19:52:06,145:INFO:              mlflow: 2.21.0
2025-03-28 19:52:06,145:INFO:              gradio: Not installed
2025-03-28 19:52:06,145:INFO:             fastapi: 0.115.11
2025-03-28 19:52:06,145:INFO:             uvicorn: 0.34.0
2025-03-28 19:52:06,145:INFO:              m2cgen: Not installed
2025-03-28 19:52:06,145:INFO:           evidently: Not installed
2025-03-28 19:52:06,145:INFO:               fugue: Not installed
2025-03-28 19:52:06,145:INFO:           streamlit: 1.43.2
2025-03-28 19:52:06,145:INFO:             prophet: Not installed
2025-03-28 19:52:06,145:INFO:None
2025-03-28 19:52:06,145:INFO:Set up data.
2025-03-28 19:52:06,145:INFO:Set up folding strategy.
2025-03-28 19:52:06,145:INFO:Set up train/test split.
2025-03-28 19:52:06,145:INFO:Set up index.
2025-03-28 19:52:06,145:INFO:Assigning column types.
2025-03-28 19:52:06,162:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-28 19:52:06,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,299:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-28 19:52:06,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-28 19:52:06,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,413:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-28 19:52:06,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,529:INFO:Preparing preprocessing pipeline...
2025-03-28 19:52:06,529:INFO:Set up simple imputation.
2025-03-28 19:52:06,546:INFO:Finished creating preprocessing pipeline.
2025-03-28 19:52:06,546:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:52:06,546:INFO:Creating final display dataframe.
2025-03-28 19:52:06,599:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             d9de
2025-03-28 19:52:06,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-28 19:52:06,710:INFO:Logging experiment in loggers
2025-03-28 19:52:06,792:INFO:SubProcess save_model() called ==================================
2025-03-28 19:52:06,792:INFO:Initializing save_model()
2025-03-28 19:52:06,792:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp4n_l4_a7\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:52:06,792:INFO:Adding model into prep_pipe
2025-03-28 19:52:06,792:WARNING:Only Model saved as it was a pipeline.
2025-03-28 19:52:06,792:INFO:C:\Users\Ian\AppData\Local\Temp\tmp4n_l4_a7\Transformation Pipeline.pkl saved in current working directory
2025-03-28 19:52:06,792:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-28 19:52:06,792:INFO:save_model() successfully completed......................................
2025-03-28 19:52:06,872:INFO:SubProcess save_model() end ==================================
2025-03-28 19:52:06,915:INFO:setup() successfully completed in 1.12s...............
2025-03-28 19:52:06,915:INFO:Initializing create_model()
2025-03-28 19:52:06,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC504F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:52:06,915:INFO:Checking exceptions
2025-03-28 19:52:06,919:INFO:Importing libraries
2025-03-28 19:52:06,919:INFO:Copying training dataset
2025-03-28 19:52:06,919:INFO:Defining folds
2025-03-28 19:52:06,919:INFO:Declaring metric variables
2025-03-28 19:52:06,919:INFO:Importing untrained model
2025-03-28 19:52:06,919:INFO:Logistic Regression Imported successfully
2025-03-28 19:52:06,919:INFO:Starting cross validation
2025-03-28 19:52:06,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:52:10,887:INFO:Calculating mean and std
2025-03-28 19:52:10,889:INFO:Creating metrics dataframe
2025-03-28 19:52:10,895:INFO:Finalizing model
2025-03-28 19:52:10,949:INFO:Creating Dashboard logs
2025-03-28 19:52:10,949:INFO:Model: Logistic Regression
2025-03-28 19:52:10,994:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-28 19:52:11,132:INFO:Initializing predict_model()
2025-03-28 19:52:11,132:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC504F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DC8C6B3940>)
2025-03-28 19:52:11,132:INFO:Checking exceptions
2025-03-28 19:52:11,132:INFO:Preloading libraries
2025-03-28 19:52:11,263:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-28 19:52:11,279:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:52:11,279:INFO:Uploading results into container
2025-03-28 19:52:11,279:INFO:Uploading model into container now
2025-03-28 19:52:11,279:INFO:_master_model_container: 1
2025-03-28 19:52:11,279:INFO:_display_container: 2
2025-03-28 19:52:11,295:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-28 19:52:11,295:INFO:create_model() successfully completed......................................
2025-03-28 19:52:11,385:INFO:Initializing create_model()
2025-03-28 19:52:11,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC504F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-28 19:52:11,385:INFO:Checking exceptions
2025-03-28 19:52:11,385:INFO:Importing libraries
2025-03-28 19:52:11,385:INFO:Copying training dataset
2025-03-28 19:52:11,389:INFO:Defining folds
2025-03-28 19:52:11,389:INFO:Declaring metric variables
2025-03-28 19:52:11,389:INFO:Importing untrained model
2025-03-28 19:52:11,389:INFO:Decision Tree Classifier Imported successfully
2025-03-28 19:52:11,389:INFO:Starting cross validation
2025-03-28 19:52:11,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-28 19:52:13,642:INFO:Calculating mean and std
2025-03-28 19:52:13,642:INFO:Creating metrics dataframe
2025-03-28 19:52:13,642:INFO:Finalizing model
2025-03-28 19:52:13,679:INFO:Creating Dashboard logs
2025-03-28 19:52:13,679:INFO:Model: Decision Tree Classifier
2025-03-28 19:52:13,722:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-28 19:52:13,868:INFO:Initializing predict_model()
2025-03-28 19:52:13,868:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC504F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DC8B0EC8B0>)
2025-03-28 19:52:13,868:INFO:Checking exceptions
2025-03-28 19:52:13,868:INFO:Preloading libraries
2025-03-28 19:52:14,007:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-28 19:52:14,007:INFO:Uploading results into container
2025-03-28 19:52:14,007:INFO:Uploading model into container now
2025-03-28 19:52:14,007:INFO:_master_model_container: 2
2025-03-28 19:52:14,007:INFO:_display_container: 3
2025-03-28 19:52:14,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-28 19:52:14,007:INFO:create_model() successfully completed......................................
2025-03-28 19:52:14,110:INFO:Initializing save_model()
2025-03-28 19:52:14,110:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-28 19:52:14,110:INFO:Adding model into prep_pipe
2025-03-28 19:52:14,110:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-28 19:52:14,110:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-28 19:52:14,110:INFO:save_model() successfully completed......................................
2025-03-28 19:52:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 19:52:18,912:INFO:Initializing load_model()
2025-03-28 19:52:18,912:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:37:45,167:INFO:Initializing load_model()
2025-03-28 20:37:45,167:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:37:45,937:INFO:Initializing load_model()
2025-03-28 20:37:45,937:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:37:46,699:INFO:Initializing load_model()
2025-03-28 20:37:46,699:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:37:48,593:INFO:Initializing load_model()
2025-03-28 20:37:48,594:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:37:49,172:INFO:Initializing load_model()
2025-03-28 20:37:49,172:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:50:15,731:INFO:Initializing load_model()
2025-03-28 20:50:15,731:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:50:19,361:INFO:Initializing load_model()
2025-03-28 20:50:19,361:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:50:19,397:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  

2025-03-28 20:55:15,783:INFO:Initializing load_model()
2025-03-28 20:55:15,783:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:55:18,494:INFO:Initializing load_model()
2025-03-28 20:55:18,494:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:55:20,250:INFO:Initializing load_model()
2025-03-28 20:55:20,250:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 20:55:20,970:INFO:Initializing load_model()
2025-03-28 20:55:20,970:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 21:09:43,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 21:09:43,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 21:09:43,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 21:09:43,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-28 21:09:45,326:INFO:Initializing load_model()
2025-03-28 21:09:45,326:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 21:10:01,547:INFO:Initializing load_model()
2025-03-28 21:10:01,547:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-28 21:10:07,713:INFO:Initializing load_model()
2025-03-28 21:10:07,713:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:33:03,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:03,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:03,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:03,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:05,564:INFO:PyCaret ClassificationExperiment
2025-03-30 16:33:05,564:INFO:Logging name: Treinamento
2025-03-30 16:33:05,564:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 16:33:05,564:INFO:version 3.3.2
2025-03-30 16:33:05,564:INFO:Initializing setup()
2025-03-30 16:33:05,564:INFO:self.USI: 1bcf
2025-03-30 16:33:05,564:INFO:self._variable_keys: {'X_train', 'n_jobs_param', 'target_param', 'seed', 'exp_name_log', 'gpu_param', 'y_test', 'memory', 'html_param', 'fold_shuffle_param', 'y', 'X_test', 'exp_id', '_available_plots', '_ml_usecase', 'X', 'is_multiclass', 'fold_generator', 'pipeline', 'y_train', 'data', 'logging_param', 'idx', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'gpu_n_jobs_param', 'USI'}
2025-03-30 16:33:05,564:INFO:Checking environment
2025-03-30 16:33:05,564:INFO:python_version: 3.9.21
2025-03-30 16:33:05,564:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 16:33:05,564:INFO:machine: AMD64
2025-03-30 16:33:05,580:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 16:33:05,599:INFO:Memory: svmem(total=33685155840, available=24137777152, percent=28.3, used=9547378688, free=24137777152)
2025-03-30 16:33:05,599:INFO:Physical Core: 6
2025-03-30 16:33:05,599:INFO:Logical Core: 12
2025-03-30 16:33:05,599:INFO:Checking libraries
2025-03-30 16:33:05,599:INFO:System:
2025-03-30 16:33:05,599:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 16:33:05,599:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 16:33:05,599:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 16:33:05,599:INFO:PyCaret required dependencies:
2025-03-30 16:33:05,658:INFO:                 pip: 25.0
2025-03-30 16:33:05,658:INFO:          setuptools: 75.8.0
2025-03-30 16:33:05,659:INFO:             pycaret: 3.3.2
2025-03-30 16:33:05,659:INFO:             IPython: 8.18.1
2025-03-30 16:33:05,659:INFO:          ipywidgets: 8.1.5
2025-03-30 16:33:05,659:INFO:                tqdm: 4.67.1
2025-03-30 16:33:05,659:INFO:               numpy: 1.26.4
2025-03-30 16:33:05,659:INFO:              pandas: 1.5.3
2025-03-30 16:33:05,659:INFO:              jinja2: 3.1.6
2025-03-30 16:33:05,659:INFO:               scipy: 1.11.4
2025-03-30 16:33:05,659:INFO:              joblib: 1.3.2
2025-03-30 16:33:05,659:INFO:             sklearn: 1.4.2
2025-03-30 16:33:05,659:INFO:                pyod: 2.0.3
2025-03-30 16:33:05,659:INFO:            imblearn: 0.12.4
2025-03-30 16:33:05,659:INFO:   category_encoders: 2.6.4
2025-03-30 16:33:05,659:INFO:            lightgbm: 4.6.0
2025-03-30 16:33:05,659:INFO:               numba: 0.60.0
2025-03-30 16:33:05,659:INFO:            requests: 2.32.3
2025-03-30 16:33:05,659:INFO:          matplotlib: 3.7.5
2025-03-30 16:33:05,659:INFO:          scikitplot: 0.3.7
2025-03-30 16:33:05,659:INFO:         yellowbrick: 1.5
2025-03-30 16:33:05,659:INFO:              plotly: 5.24.1
2025-03-30 16:33:05,659:INFO:    plotly-resampler: Not installed
2025-03-30 16:33:05,659:INFO:             kaleido: 0.2.1
2025-03-30 16:33:05,659:INFO:           schemdraw: 0.15
2025-03-30 16:33:05,659:INFO:         statsmodels: 0.14.4
2025-03-30 16:33:05,659:INFO:              sktime: 0.26.0
2025-03-30 16:33:05,659:INFO:               tbats: 1.1.3
2025-03-30 16:33:05,659:INFO:            pmdarima: 2.0.4
2025-03-30 16:33:05,659:INFO:              psutil: 7.0.0
2025-03-30 16:33:05,659:INFO:          markupsafe: 3.0.2
2025-03-30 16:33:05,659:INFO:             pickle5: Not installed
2025-03-30 16:33:05,659:INFO:         cloudpickle: 2.2.1
2025-03-30 16:33:05,659:INFO:         deprecation: 2.1.0
2025-03-30 16:33:05,659:INFO:              xxhash: 3.5.0
2025-03-30 16:33:05,659:INFO:           wurlitzer: Not installed
2025-03-30 16:33:05,659:INFO:PyCaret optional dependencies:
2025-03-30 16:33:06,074:INFO:                shap: 0.47.1
2025-03-30 16:33:06,074:INFO:           interpret: Not installed
2025-03-30 16:33:06,074:INFO:                umap: Not installed
2025-03-30 16:33:06,074:INFO:     ydata_profiling: Not installed
2025-03-30 16:33:06,074:INFO:  explainerdashboard: Not installed
2025-03-30 16:33:06,074:INFO:             autoviz: Not installed
2025-03-30 16:33:06,074:INFO:           fairlearn: Not installed
2025-03-30 16:33:06,074:INFO:          deepchecks: Not installed
2025-03-30 16:33:06,074:INFO:             xgboost: Not installed
2025-03-30 16:33:06,074:INFO:            catboost: Not installed
2025-03-30 16:33:06,074:INFO:              kmodes: Not installed
2025-03-30 16:33:06,074:INFO:             mlxtend: Not installed
2025-03-30 16:33:06,074:INFO:       statsforecast: Not installed
2025-03-30 16:33:06,074:INFO:        tune_sklearn: Not installed
2025-03-30 16:33:06,074:INFO:                 ray: Not installed
2025-03-30 16:33:06,074:INFO:            hyperopt: Not installed
2025-03-30 16:33:06,074:INFO:              optuna: Not installed
2025-03-30 16:33:06,074:INFO:               skopt: Not installed
2025-03-30 16:33:06,074:INFO:              mlflow: 2.21.0
2025-03-30 16:33:06,074:INFO:              gradio: Not installed
2025-03-30 16:33:06,074:INFO:             fastapi: 0.115.11
2025-03-30 16:33:06,074:INFO:             uvicorn: 0.34.0
2025-03-30 16:33:06,074:INFO:              m2cgen: Not installed
2025-03-30 16:33:06,074:INFO:           evidently: Not installed
2025-03-30 16:33:06,074:INFO:               fugue: Not installed
2025-03-30 16:33:06,074:INFO:           streamlit: 1.43.2
2025-03-30 16:33:06,074:INFO:             prophet: Not installed
2025-03-30 16:33:06,074:INFO:None
2025-03-30 16:33:06,074:INFO:Set up data.
2025-03-30 16:33:06,082:INFO:Set up folding strategy.
2025-03-30 16:33:06,082:INFO:Set up train/test split.
2025-03-30 16:33:06,087:INFO:Set up index.
2025-03-30 16:33:06,087:INFO:Assigning column types.
2025-03-30 16:33:06,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 16:33:06,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,201:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 16:33:06,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,272:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:33:06,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,304:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 16:33:06,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,399:INFO:Preparing preprocessing pipeline...
2025-03-30 16:33:06,399:INFO:Set up simple imputation.
2025-03-30 16:33:06,431:INFO:Finished creating preprocessing pipeline.
2025-03-30 16:33:06,431:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:33:06,431:INFO:Creating final display dataframe.
2025-03-30 16:33:06,479:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             1bcf
2025-03-30 16:33:06,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:33:06,592:INFO:Logging experiment in loggers
2025-03-30 16:33:06,671:INFO:SubProcess save_model() called ==================================
2025-03-30 16:33:06,675:INFO:Initializing save_model()
2025-03-30 16:33:06,675:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpvxg1xy7k\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:33:06,675:INFO:Adding model into prep_pipe
2025-03-30 16:33:06,675:WARNING:Only Model saved as it was a pipeline.
2025-03-30 16:33:06,675:INFO:C:\Users\Ian\AppData\Local\Temp\tmpvxg1xy7k\Transformation Pipeline.pkl saved in current working directory
2025-03-30 16:33:06,675:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:33:06,675:INFO:save_model() successfully completed......................................
2025-03-30 16:33:06,758:INFO:SubProcess save_model() end ==================================
2025-03-30 16:33:06,773:INFO:setup() successfully completed in 1.03s...............
2025-03-30 16:33:06,773:INFO:Initializing create_model()
2025-03-30 16:33:06,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025AA4034F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:33:06,773:INFO:Checking exceptions
2025-03-30 16:33:06,773:INFO:Importing libraries
2025-03-30 16:33:06,773:INFO:Copying training dataset
2025-03-30 16:33:06,773:INFO:Defining folds
2025-03-30 16:33:06,773:INFO:Declaring metric variables
2025-03-30 16:33:06,773:INFO:Importing untrained model
2025-03-30 16:33:06,773:INFO:Logistic Regression Imported successfully
2025-03-30 16:33:06,789:INFO:Starting cross validation
2025-03-30 16:33:06,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:33:10,174:INFO:Calculating mean and std
2025-03-30 16:33:10,175:INFO:Creating metrics dataframe
2025-03-30 16:33:10,175:INFO:Finalizing model
2025-03-30 16:33:10,209:INFO:Creating Dashboard logs
2025-03-30 16:33:10,209:INFO:Model: Logistic Regression
2025-03-30 16:33:10,258:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 16:33:10,375:INFO:Initializing predict_model()
2025-03-30 16:33:10,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025AA4034F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025AC3F44940>)
2025-03-30 16:33:10,375:INFO:Checking exceptions
2025-03-30 16:33:10,375:INFO:Preloading libraries
2025-03-30 16:33:10,509:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 16:33:10,525:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:33:10,525:INFO:Uploading results into container
2025-03-30 16:33:10,525:INFO:Uploading model into container now
2025-03-30 16:33:10,536:INFO:_master_model_container: 1
2025-03-30 16:33:10,536:INFO:_display_container: 2
2025-03-30 16:33:10,536:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 16:33:10,536:INFO:create_model() successfully completed......................................
2025-03-30 16:33:10,609:INFO:Initializing create_model()
2025-03-30 16:33:10,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025AA4034F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:33:10,609:INFO:Checking exceptions
2025-03-30 16:33:10,624:INFO:Importing libraries
2025-03-30 16:33:10,624:INFO:Copying training dataset
2025-03-30 16:33:10,625:INFO:Defining folds
2025-03-30 16:33:10,625:INFO:Declaring metric variables
2025-03-30 16:33:10,625:INFO:Importing untrained model
2025-03-30 16:33:10,625:INFO:Decision Tree Classifier Imported successfully
2025-03-30 16:33:10,625:INFO:Starting cross validation
2025-03-30 16:33:10,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:33:12,340:INFO:Calculating mean and std
2025-03-30 16:33:12,340:INFO:Creating metrics dataframe
2025-03-30 16:33:12,342:INFO:Finalizing model
2025-03-30 16:33:12,375:INFO:Creating Dashboard logs
2025-03-30 16:33:12,375:INFO:Model: Decision Tree Classifier
2025-03-30 16:33:12,422:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 16:33:12,547:INFO:Initializing predict_model()
2025-03-30 16:33:12,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025AA4034F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025AC297D8B0>)
2025-03-30 16:33:12,547:INFO:Checking exceptions
2025-03-30 16:33:12,547:INFO:Preloading libraries
2025-03-30 16:33:12,692:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:33:12,692:INFO:Uploading results into container
2025-03-30 16:33:12,692:INFO:Uploading model into container now
2025-03-30 16:33:12,699:INFO:_master_model_container: 2
2025-03-30 16:33:12,699:INFO:_display_container: 3
2025-03-30 16:33:12,699:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 16:33:12,699:INFO:create_model() successfully completed......................................
2025-03-30 16:33:12,794:INFO:Initializing save_model()
2025-03-30 16:33:12,795:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:33:12,795:INFO:Adding model into prep_pipe
2025-03-30 16:33:12,797:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 16:33:12,800:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 16:33:12,800:INFO:save_model() successfully completed......................................
2025-03-30 16:33:31,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:31,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:31,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:31,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:32,820:INFO:Initializing load_model()
2025-03-30 16:33:32,820:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:33:49,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:49,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:49,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:49,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:33:50,295:INFO:Initializing load_model()
2025-03-30 16:33:50,295:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:34:29,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:29,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:29,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:29,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:30,712:INFO:PyCaret ClassificationExperiment
2025-03-30 16:34:30,712:INFO:Logging name: Treinamento
2025-03-30 16:34:30,712:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 16:34:30,712:INFO:version 3.3.2
2025-03-30 16:34:30,712:INFO:Initializing setup()
2025-03-30 16:34:30,712:INFO:self.USI: c3b1
2025-03-30 16:34:30,712:INFO:self._variable_keys: {'fold_generator', 'fix_imbalance', 'memory', 'y_test', 'y', 'X_test', 'is_multiclass', 'n_jobs_param', '_available_plots', 'target_param', 'gpu_n_jobs_param', 'fold_groups_param', 'idx', 'seed', 'USI', 'html_param', '_ml_usecase', 'X', 'data', 'logging_param', 'log_plots_param', 'exp_name_log', 'pipeline', 'X_train', 'fold_shuffle_param', 'exp_id', 'gpu_param', 'y_train'}
2025-03-30 16:34:30,712:INFO:Checking environment
2025-03-30 16:34:30,712:INFO:python_version: 3.9.21
2025-03-30 16:34:30,712:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 16:34:30,712:INFO:machine: AMD64
2025-03-30 16:34:30,728:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 16:34:30,732:INFO:Memory: svmem(total=33685155840, available=24393707520, percent=27.6, used=9291448320, free=24393707520)
2025-03-30 16:34:30,732:INFO:Physical Core: 6
2025-03-30 16:34:30,732:INFO:Logical Core: 12
2025-03-30 16:34:30,732:INFO:Checking libraries
2025-03-30 16:34:30,732:INFO:System:
2025-03-30 16:34:30,732:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 16:34:30,732:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 16:34:30,732:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 16:34:30,732:INFO:PyCaret required dependencies:
2025-03-30 16:34:30,759:INFO:                 pip: 25.0
2025-03-30 16:34:30,759:INFO:          setuptools: 75.8.0
2025-03-30 16:34:30,759:INFO:             pycaret: 3.3.2
2025-03-30 16:34:30,759:INFO:             IPython: 8.18.1
2025-03-30 16:34:30,759:INFO:          ipywidgets: 8.1.5
2025-03-30 16:34:30,759:INFO:                tqdm: 4.67.1
2025-03-30 16:34:30,759:INFO:               numpy: 1.26.4
2025-03-30 16:34:30,759:INFO:              pandas: 1.5.3
2025-03-30 16:34:30,759:INFO:              jinja2: 3.1.6
2025-03-30 16:34:30,759:INFO:               scipy: 1.11.4
2025-03-30 16:34:30,759:INFO:              joblib: 1.3.2
2025-03-30 16:34:30,759:INFO:             sklearn: 1.4.2
2025-03-30 16:34:30,759:INFO:                pyod: 2.0.3
2025-03-30 16:34:30,759:INFO:            imblearn: 0.12.4
2025-03-30 16:34:30,759:INFO:   category_encoders: 2.6.4
2025-03-30 16:34:30,759:INFO:            lightgbm: 4.6.0
2025-03-30 16:34:30,759:INFO:               numba: 0.60.0
2025-03-30 16:34:30,759:INFO:            requests: 2.32.3
2025-03-30 16:34:30,759:INFO:          matplotlib: 3.7.5
2025-03-30 16:34:30,759:INFO:          scikitplot: 0.3.7
2025-03-30 16:34:30,759:INFO:         yellowbrick: 1.5
2025-03-30 16:34:30,759:INFO:              plotly: 5.24.1
2025-03-30 16:34:30,759:INFO:    plotly-resampler: Not installed
2025-03-30 16:34:30,759:INFO:             kaleido: 0.2.1
2025-03-30 16:34:30,759:INFO:           schemdraw: 0.15
2025-03-30 16:34:30,759:INFO:         statsmodels: 0.14.4
2025-03-30 16:34:30,759:INFO:              sktime: 0.26.0
2025-03-30 16:34:30,759:INFO:               tbats: 1.1.3
2025-03-30 16:34:30,759:INFO:            pmdarima: 2.0.4
2025-03-30 16:34:30,759:INFO:              psutil: 7.0.0
2025-03-30 16:34:30,759:INFO:          markupsafe: 3.0.2
2025-03-30 16:34:30,759:INFO:             pickle5: Not installed
2025-03-30 16:34:30,759:INFO:         cloudpickle: 2.2.1
2025-03-30 16:34:30,759:INFO:         deprecation: 2.1.0
2025-03-30 16:34:30,759:INFO:              xxhash: 3.5.0
2025-03-30 16:34:30,759:INFO:           wurlitzer: Not installed
2025-03-30 16:34:30,759:INFO:PyCaret optional dependencies:
2025-03-30 16:34:31,076:INFO:                shap: 0.47.1
2025-03-30 16:34:31,076:INFO:           interpret: Not installed
2025-03-30 16:34:31,076:INFO:                umap: Not installed
2025-03-30 16:34:31,076:INFO:     ydata_profiling: Not installed
2025-03-30 16:34:31,076:INFO:  explainerdashboard: Not installed
2025-03-30 16:34:31,076:INFO:             autoviz: Not installed
2025-03-30 16:34:31,076:INFO:           fairlearn: Not installed
2025-03-30 16:34:31,076:INFO:          deepchecks: Not installed
2025-03-30 16:34:31,076:INFO:             xgboost: Not installed
2025-03-30 16:34:31,076:INFO:            catboost: Not installed
2025-03-30 16:34:31,076:INFO:              kmodes: Not installed
2025-03-30 16:34:31,076:INFO:             mlxtend: Not installed
2025-03-30 16:34:31,076:INFO:       statsforecast: Not installed
2025-03-30 16:34:31,076:INFO:        tune_sklearn: Not installed
2025-03-30 16:34:31,076:INFO:                 ray: Not installed
2025-03-30 16:34:31,076:INFO:            hyperopt: Not installed
2025-03-30 16:34:31,076:INFO:              optuna: Not installed
2025-03-30 16:34:31,076:INFO:               skopt: Not installed
2025-03-30 16:34:31,076:INFO:              mlflow: 2.21.0
2025-03-30 16:34:31,076:INFO:              gradio: Not installed
2025-03-30 16:34:31,076:INFO:             fastapi: 0.115.11
2025-03-30 16:34:31,076:INFO:             uvicorn: 0.34.0
2025-03-30 16:34:31,076:INFO:              m2cgen: Not installed
2025-03-30 16:34:31,076:INFO:           evidently: Not installed
2025-03-30 16:34:31,076:INFO:               fugue: Not installed
2025-03-30 16:34:31,076:INFO:           streamlit: 1.43.2
2025-03-30 16:34:31,076:INFO:             prophet: Not installed
2025-03-30 16:34:31,076:INFO:None
2025-03-30 16:34:31,076:INFO:Set up data.
2025-03-30 16:34:31,096:INFO:Set up folding strategy.
2025-03-30 16:34:31,096:INFO:Set up train/test split.
2025-03-30 16:34:31,098:INFO:Set up index.
2025-03-30 16:34:31,098:INFO:Assigning column types.
2025-03-30 16:34:31,098:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 16:34:31,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 16:34:31,244:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:34:31,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,309:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 16:34:31,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,409:INFO:Preparing preprocessing pipeline...
2025-03-30 16:34:31,409:INFO:Set up simple imputation.
2025-03-30 16:34:31,425:INFO:Finished creating preprocessing pipeline.
2025-03-30 16:34:31,441:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:34:31,441:INFO:Creating final display dataframe.
2025-03-30 16:34:31,478:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             c3b1
2025-03-30 16:34:31,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:34:31,592:INFO:Logging experiment in loggers
2025-03-30 16:34:31,664:INFO:SubProcess save_model() called ==================================
2025-03-30 16:34:31,667:INFO:Initializing save_model()
2025-03-30 16:34:31,667:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpbmvag40p\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:34:31,667:INFO:Adding model into prep_pipe
2025-03-30 16:34:31,667:WARNING:Only Model saved as it was a pipeline.
2025-03-30 16:34:31,669:INFO:C:\Users\Ian\AppData\Local\Temp\tmpbmvag40p\Transformation Pipeline.pkl saved in current working directory
2025-03-30 16:34:31,671:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:34:31,671:INFO:save_model() successfully completed......................................
2025-03-30 16:34:31,753:INFO:SubProcess save_model() end ==================================
2025-03-30 16:34:31,779:INFO:setup() successfully completed in 0.88s...............
2025-03-30 16:34:31,779:INFO:Initializing create_model()
2025-03-30 16:34:31,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002368AF94F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:34:31,779:INFO:Checking exceptions
2025-03-30 16:34:31,781:INFO:Importing libraries
2025-03-30 16:34:31,781:INFO:Copying training dataset
2025-03-30 16:34:31,784:INFO:Defining folds
2025-03-30 16:34:31,784:INFO:Declaring metric variables
2025-03-30 16:34:31,785:INFO:Importing untrained model
2025-03-30 16:34:31,785:INFO:Logistic Regression Imported successfully
2025-03-30 16:34:31,785:INFO:Starting cross validation
2025-03-30 16:34:31,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:34:35,107:INFO:Calculating mean and std
2025-03-30 16:34:35,108:INFO:Creating metrics dataframe
2025-03-30 16:34:35,111:INFO:Finalizing model
2025-03-30 16:34:35,142:INFO:Creating Dashboard logs
2025-03-30 16:34:35,142:INFO:Model: Logistic Regression
2025-03-30 16:34:35,192:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 16:34:35,310:INFO:Initializing predict_model()
2025-03-30 16:34:35,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002368AF94F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236AAEB4940>)
2025-03-30 16:34:35,310:INFO:Checking exceptions
2025-03-30 16:34:35,310:INFO:Preloading libraries
2025-03-30 16:34:35,442:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 16:34:35,458:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:34:35,458:INFO:Uploading results into container
2025-03-30 16:34:35,458:INFO:Uploading model into container now
2025-03-30 16:34:35,470:INFO:_master_model_container: 1
2025-03-30 16:34:35,470:INFO:_display_container: 2
2025-03-30 16:34:35,470:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 16:34:35,470:INFO:create_model() successfully completed......................................
2025-03-30 16:34:35,542:INFO:Initializing create_model()
2025-03-30 16:34:35,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002368AF94F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:34:35,557:INFO:Checking exceptions
2025-03-30 16:34:35,558:INFO:Importing libraries
2025-03-30 16:34:35,558:INFO:Copying training dataset
2025-03-30 16:34:35,559:INFO:Defining folds
2025-03-30 16:34:35,559:INFO:Declaring metric variables
2025-03-30 16:34:35,559:INFO:Importing untrained model
2025-03-30 16:34:35,559:INFO:Decision Tree Classifier Imported successfully
2025-03-30 16:34:35,559:INFO:Starting cross validation
2025-03-30 16:34:35,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:34:37,263:INFO:Calculating mean and std
2025-03-30 16:34:37,263:INFO:Creating metrics dataframe
2025-03-30 16:34:37,265:INFO:Finalizing model
2025-03-30 16:34:37,299:INFO:Creating Dashboard logs
2025-03-30 16:34:37,299:INFO:Model: Decision Tree Classifier
2025-03-30 16:34:37,342:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 16:34:37,468:INFO:Initializing predict_model()
2025-03-30 16:34:37,468:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002368AF94F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000236A98EC8B0>)
2025-03-30 16:34:37,468:INFO:Checking exceptions
2025-03-30 16:34:37,468:INFO:Preloading libraries
2025-03-30 16:34:37,595:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:34:37,595:INFO:Uploading results into container
2025-03-30 16:34:37,595:INFO:Uploading model into container now
2025-03-30 16:34:37,595:INFO:_master_model_container: 2
2025-03-30 16:34:37,595:INFO:_display_container: 3
2025-03-30 16:34:37,595:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 16:34:37,595:INFO:create_model() successfully completed......................................
2025-03-30 16:34:37,714:INFO:Initializing save_model()
2025-03-30 16:34:37,714:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:34:37,714:INFO:Adding model into prep_pipe
2025-03-30 16:34:37,716:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 16:34:37,719:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 16:34:37,719:INFO:save_model() successfully completed......................................
2025-03-30 16:34:40,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:40,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:40,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:40,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:34:41,575:INFO:Initializing load_model()
2025-03-30 16:34:41,575:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:37:38,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:37:38,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:37:38,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:37:38,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:37:39,220:INFO:Initializing load_model()
2025-03-30 16:37:39,220:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:38:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:39,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:41,208:INFO:PyCaret ClassificationExperiment
2025-03-30 16:38:41,208:INFO:Logging name: Treinamento
2025-03-30 16:38:41,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 16:38:41,208:INFO:version 3.3.2
2025-03-30 16:38:41,208:INFO:Initializing setup()
2025-03-30 16:38:41,208:INFO:self.USI: e582
2025-03-30 16:38:41,208:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'is_multiclass', 'gpu_param', 'gpu_n_jobs_param', '_available_plots', 'X_train', 'fix_imbalance', 'fold_generator', 'html_param', 'idx', 'USI', 'logging_param', 'X', 'y_test', 'fold_groups_param', 'X_test', 'y_train', 'target_param', 'log_plots_param', 'n_jobs_param', 'fold_shuffle_param', 'y', 'memory', 'exp_name_log', 'seed', 'data', 'exp_id'}
2025-03-30 16:38:41,208:INFO:Checking environment
2025-03-30 16:38:41,208:INFO:python_version: 3.9.21
2025-03-30 16:38:41,208:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 16:38:41,208:INFO:machine: AMD64
2025-03-30 16:38:41,230:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 16:38:41,230:INFO:Memory: svmem(total=33685155840, available=24190705664, percent=28.2, used=9494450176, free=24190705664)
2025-03-30 16:38:41,230:INFO:Physical Core: 6
2025-03-30 16:38:41,230:INFO:Logical Core: 12
2025-03-30 16:38:41,230:INFO:Checking libraries
2025-03-30 16:38:41,230:INFO:System:
2025-03-30 16:38:41,230:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 16:38:41,230:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 16:38:41,230:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 16:38:41,230:INFO:PyCaret required dependencies:
2025-03-30 16:38:41,275:INFO:                 pip: 25.0
2025-03-30 16:38:41,275:INFO:          setuptools: 75.8.0
2025-03-30 16:38:41,275:INFO:             pycaret: 3.3.2
2025-03-30 16:38:41,275:INFO:             IPython: 8.18.1
2025-03-30 16:38:41,275:INFO:          ipywidgets: 8.1.5
2025-03-30 16:38:41,275:INFO:                tqdm: 4.67.1
2025-03-30 16:38:41,275:INFO:               numpy: 1.26.4
2025-03-30 16:38:41,275:INFO:              pandas: 1.5.3
2025-03-30 16:38:41,275:INFO:              jinja2: 3.1.6
2025-03-30 16:38:41,275:INFO:               scipy: 1.11.4
2025-03-30 16:38:41,275:INFO:              joblib: 1.3.2
2025-03-30 16:38:41,275:INFO:             sklearn: 1.4.2
2025-03-30 16:38:41,275:INFO:                pyod: 2.0.3
2025-03-30 16:38:41,275:INFO:            imblearn: 0.12.4
2025-03-30 16:38:41,275:INFO:   category_encoders: 2.6.4
2025-03-30 16:38:41,275:INFO:            lightgbm: 4.6.0
2025-03-30 16:38:41,275:INFO:               numba: 0.60.0
2025-03-30 16:38:41,275:INFO:            requests: 2.32.3
2025-03-30 16:38:41,275:INFO:          matplotlib: 3.7.5
2025-03-30 16:38:41,275:INFO:          scikitplot: 0.3.7
2025-03-30 16:38:41,275:INFO:         yellowbrick: 1.5
2025-03-30 16:38:41,275:INFO:              plotly: 5.24.1
2025-03-30 16:38:41,275:INFO:    plotly-resampler: Not installed
2025-03-30 16:38:41,275:INFO:             kaleido: 0.2.1
2025-03-30 16:38:41,275:INFO:           schemdraw: 0.15
2025-03-30 16:38:41,275:INFO:         statsmodels: 0.14.4
2025-03-30 16:38:41,275:INFO:              sktime: 0.26.0
2025-03-30 16:38:41,275:INFO:               tbats: 1.1.3
2025-03-30 16:38:41,275:INFO:            pmdarima: 2.0.4
2025-03-30 16:38:41,275:INFO:              psutil: 7.0.0
2025-03-30 16:38:41,275:INFO:          markupsafe: 3.0.2
2025-03-30 16:38:41,275:INFO:             pickle5: Not installed
2025-03-30 16:38:41,275:INFO:         cloudpickle: 2.2.1
2025-03-30 16:38:41,275:INFO:         deprecation: 2.1.0
2025-03-30 16:38:41,275:INFO:              xxhash: 3.5.0
2025-03-30 16:38:41,275:INFO:           wurlitzer: Not installed
2025-03-30 16:38:41,275:INFO:PyCaret optional dependencies:
2025-03-30 16:38:41,592:INFO:                shap: 0.47.1
2025-03-30 16:38:41,592:INFO:           interpret: Not installed
2025-03-30 16:38:41,592:INFO:                umap: Not installed
2025-03-30 16:38:41,592:INFO:     ydata_profiling: Not installed
2025-03-30 16:38:41,592:INFO:  explainerdashboard: Not installed
2025-03-30 16:38:41,592:INFO:             autoviz: Not installed
2025-03-30 16:38:41,592:INFO:           fairlearn: Not installed
2025-03-30 16:38:41,592:INFO:          deepchecks: Not installed
2025-03-30 16:38:41,592:INFO:             xgboost: Not installed
2025-03-30 16:38:41,592:INFO:            catboost: Not installed
2025-03-30 16:38:41,592:INFO:              kmodes: Not installed
2025-03-30 16:38:41,592:INFO:             mlxtend: Not installed
2025-03-30 16:38:41,592:INFO:       statsforecast: Not installed
2025-03-30 16:38:41,592:INFO:        tune_sklearn: Not installed
2025-03-30 16:38:41,592:INFO:                 ray: Not installed
2025-03-30 16:38:41,592:INFO:            hyperopt: Not installed
2025-03-30 16:38:41,592:INFO:              optuna: Not installed
2025-03-30 16:38:41,592:INFO:               skopt: Not installed
2025-03-30 16:38:41,592:INFO:              mlflow: 2.21.0
2025-03-30 16:38:41,592:INFO:              gradio: Not installed
2025-03-30 16:38:41,592:INFO:             fastapi: 0.115.11
2025-03-30 16:38:41,592:INFO:             uvicorn: 0.34.0
2025-03-30 16:38:41,592:INFO:              m2cgen: Not installed
2025-03-30 16:38:41,592:INFO:           evidently: Not installed
2025-03-30 16:38:41,592:INFO:               fugue: Not installed
2025-03-30 16:38:41,592:INFO:           streamlit: 1.43.2
2025-03-30 16:38:41,592:INFO:             prophet: Not installed
2025-03-30 16:38:41,592:INFO:None
2025-03-30 16:38:41,592:INFO:Set up data.
2025-03-30 16:38:41,592:INFO:Set up folding strategy.
2025-03-30 16:38:41,592:INFO:Set up train/test split.
2025-03-30 16:38:41,609:INFO:Set up index.
2025-03-30 16:38:41,609:INFO:Assigning column types.
2025-03-30 16:38:41,612:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 16:38:41,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,721:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 16:38:41,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,801:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:38:41,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,816:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 16:38:41,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:41,928:INFO:Preparing preprocessing pipeline...
2025-03-30 16:38:41,928:INFO:Set up simple imputation.
2025-03-30 16:38:41,949:INFO:Finished creating preprocessing pipeline.
2025-03-30 16:38:41,949:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:38:41,949:INFO:Creating final display dataframe.
2025-03-30 16:38:41,992:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             e582
2025-03-30 16:38:42,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:42,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:42,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:42,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:38:42,103:INFO:Logging experiment in loggers
2025-03-30 16:38:42,172:INFO:SubProcess save_model() called ==================================
2025-03-30 16:38:42,172:INFO:Initializing save_model()
2025-03-30 16:38:42,172:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp7p69cs7a\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:38:42,172:INFO:Adding model into prep_pipe
2025-03-30 16:38:42,172:WARNING:Only Model saved as it was a pipeline.
2025-03-30 16:38:42,172:INFO:C:\Users\Ian\AppData\Local\Temp\tmp7p69cs7a\Transformation Pipeline.pkl saved in current working directory
2025-03-30 16:38:42,172:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:38:42,172:INFO:save_model() successfully completed......................................
2025-03-30 16:38:42,251:INFO:SubProcess save_model() end ==================================
2025-03-30 16:38:42,283:INFO:setup() successfully completed in 0.9s...............
2025-03-30 16:38:42,283:INFO:Initializing create_model()
2025-03-30 16:38:42,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272D46B4F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:38:42,283:INFO:Checking exceptions
2025-03-30 16:38:42,283:INFO:Importing libraries
2025-03-30 16:38:42,283:INFO:Copying training dataset
2025-03-30 16:38:42,292:INFO:Defining folds
2025-03-30 16:38:42,292:INFO:Declaring metric variables
2025-03-30 16:38:42,292:INFO:Importing untrained model
2025-03-30 16:38:42,292:INFO:Logistic Regression Imported successfully
2025-03-30 16:38:42,292:INFO:Starting cross validation
2025-03-30 16:38:42,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:38:45,881:INFO:Calculating mean and std
2025-03-30 16:38:45,882:INFO:Creating metrics dataframe
2025-03-30 16:38:45,884:INFO:Finalizing model
2025-03-30 16:38:45,919:INFO:Creating Dashboard logs
2025-03-30 16:38:45,919:INFO:Model: Logistic Regression
2025-03-30 16:38:45,966:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 16:38:46,087:INFO:Initializing predict_model()
2025-03-30 16:38:46,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272D46B4F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000272F45C4940>)
2025-03-30 16:38:46,087:INFO:Checking exceptions
2025-03-30 16:38:46,087:INFO:Preloading libraries
2025-03-30 16:38:46,218:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 16:38:46,238:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:38:46,238:INFO:Uploading results into container
2025-03-30 16:38:46,239:INFO:Uploading model into container now
2025-03-30 16:38:46,245:INFO:_master_model_container: 1
2025-03-30 16:38:46,245:INFO:_display_container: 2
2025-03-30 16:38:46,245:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 16:38:46,245:INFO:create_model() successfully completed......................................
2025-03-30 16:38:46,331:INFO:Initializing create_model()
2025-03-30 16:38:46,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272D46B4F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:38:46,331:INFO:Checking exceptions
2025-03-30 16:38:46,332:INFO:Importing libraries
2025-03-30 16:38:46,332:INFO:Copying training dataset
2025-03-30 16:38:46,335:INFO:Defining folds
2025-03-30 16:38:46,335:INFO:Declaring metric variables
2025-03-30 16:38:46,335:INFO:Importing untrained model
2025-03-30 16:38:46,335:INFO:Decision Tree Classifier Imported successfully
2025-03-30 16:38:46,335:INFO:Starting cross validation
2025-03-30 16:38:46,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:38:48,019:INFO:Calculating mean and std
2025-03-30 16:38:48,019:INFO:Creating metrics dataframe
2025-03-30 16:38:48,019:INFO:Finalizing model
2025-03-30 16:38:48,042:INFO:Creating Dashboard logs
2025-03-30 16:38:48,042:INFO:Model: Decision Tree Classifier
2025-03-30 16:38:48,092:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 16:38:48,235:INFO:Initializing predict_model()
2025-03-30 16:38:48,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272D46B4F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000272F2FFC8B0>)
2025-03-30 16:38:48,235:INFO:Checking exceptions
2025-03-30 16:38:48,235:INFO:Preloading libraries
2025-03-30 16:38:48,362:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:38:48,362:INFO:Uploading results into container
2025-03-30 16:38:48,362:INFO:Uploading model into container now
2025-03-30 16:38:48,377:INFO:_master_model_container: 2
2025-03-30 16:38:48,377:INFO:_display_container: 3
2025-03-30 16:38:48,377:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 16:38:48,377:INFO:create_model() successfully completed......................................
2025-03-30 16:38:48,459:INFO:Initializing save_model()
2025-03-30 16:38:48,459:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:38:48,459:INFO:Adding model into prep_pipe
2025-03-30 16:38:48,459:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 16:38:48,476:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 16:38:48,476:INFO:save_model() successfully completed......................................
2025-03-30 16:38:51,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:51,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:51,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:51,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:38:52,358:INFO:Initializing load_model()
2025-03-30 16:38:52,358:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:40:47,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:47,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:47,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:47,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:48,875:INFO:PyCaret ClassificationExperiment
2025-03-30 16:40:48,875:INFO:Logging name: Treinamento
2025-03-30 16:40:48,875:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 16:40:48,875:INFO:version 3.3.2
2025-03-30 16:40:48,875:INFO:Initializing setup()
2025-03-30 16:40:48,875:INFO:self.USI: 0ee7
2025-03-30 16:40:48,875:INFO:self._variable_keys: {'gpu_param', 'is_multiclass', 'html_param', 'fold_generator', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'memory', '_available_plots', 'n_jobs_param', 'USI', 'seed', 'idx', 'y_train', '_ml_usecase', 'data', 'X_train', 'log_plots_param', 'X', 'fix_imbalance', 'logging_param', 'fold_shuffle_param', 'X_test', 'exp_id', 'pipeline', 'exp_name_log', 'y_test', 'y'}
2025-03-30 16:40:48,875:INFO:Checking environment
2025-03-30 16:40:48,875:INFO:python_version: 3.9.21
2025-03-30 16:40:48,875:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 16:40:48,875:INFO:machine: AMD64
2025-03-30 16:40:48,891:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 16:40:48,895:INFO:Memory: svmem(total=33685155840, available=24225067008, percent=28.1, used=9460088832, free=24225067008)
2025-03-30 16:40:48,895:INFO:Physical Core: 6
2025-03-30 16:40:48,895:INFO:Logical Core: 12
2025-03-30 16:40:48,895:INFO:Checking libraries
2025-03-30 16:40:48,895:INFO:System:
2025-03-30 16:40:48,895:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 16:40:48,895:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 16:40:48,895:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 16:40:48,895:INFO:PyCaret required dependencies:
2025-03-30 16:40:48,926:INFO:                 pip: 25.0
2025-03-30 16:40:48,926:INFO:          setuptools: 75.8.0
2025-03-30 16:40:48,926:INFO:             pycaret: 3.3.2
2025-03-30 16:40:48,926:INFO:             IPython: 8.18.1
2025-03-30 16:40:48,926:INFO:          ipywidgets: 8.1.5
2025-03-30 16:40:48,926:INFO:                tqdm: 4.67.1
2025-03-30 16:40:48,926:INFO:               numpy: 1.26.4
2025-03-30 16:40:48,926:INFO:              pandas: 1.5.3
2025-03-30 16:40:48,926:INFO:              jinja2: 3.1.6
2025-03-30 16:40:48,926:INFO:               scipy: 1.11.4
2025-03-30 16:40:48,926:INFO:              joblib: 1.3.2
2025-03-30 16:40:48,926:INFO:             sklearn: 1.4.2
2025-03-30 16:40:48,926:INFO:                pyod: 2.0.3
2025-03-30 16:40:48,926:INFO:            imblearn: 0.12.4
2025-03-30 16:40:48,926:INFO:   category_encoders: 2.6.4
2025-03-30 16:40:48,926:INFO:            lightgbm: 4.6.0
2025-03-30 16:40:48,926:INFO:               numba: 0.60.0
2025-03-30 16:40:48,926:INFO:            requests: 2.32.3
2025-03-30 16:40:48,926:INFO:          matplotlib: 3.7.5
2025-03-30 16:40:48,926:INFO:          scikitplot: 0.3.7
2025-03-30 16:40:48,926:INFO:         yellowbrick: 1.5
2025-03-30 16:40:48,926:INFO:              plotly: 5.24.1
2025-03-30 16:40:48,926:INFO:    plotly-resampler: Not installed
2025-03-30 16:40:48,926:INFO:             kaleido: 0.2.1
2025-03-30 16:40:48,926:INFO:           schemdraw: 0.15
2025-03-30 16:40:48,926:INFO:         statsmodels: 0.14.4
2025-03-30 16:40:48,926:INFO:              sktime: 0.26.0
2025-03-30 16:40:48,926:INFO:               tbats: 1.1.3
2025-03-30 16:40:48,926:INFO:            pmdarima: 2.0.4
2025-03-30 16:40:48,926:INFO:              psutil: 7.0.0
2025-03-30 16:40:48,926:INFO:          markupsafe: 3.0.2
2025-03-30 16:40:48,926:INFO:             pickle5: Not installed
2025-03-30 16:40:48,926:INFO:         cloudpickle: 2.2.1
2025-03-30 16:40:48,926:INFO:         deprecation: 2.1.0
2025-03-30 16:40:48,926:INFO:              xxhash: 3.5.0
2025-03-30 16:40:48,926:INFO:           wurlitzer: Not installed
2025-03-30 16:40:48,926:INFO:PyCaret optional dependencies:
2025-03-30 16:40:49,241:INFO:                shap: 0.47.1
2025-03-30 16:40:49,241:INFO:           interpret: Not installed
2025-03-30 16:40:49,241:INFO:                umap: Not installed
2025-03-30 16:40:49,241:INFO:     ydata_profiling: Not installed
2025-03-30 16:40:49,241:INFO:  explainerdashboard: Not installed
2025-03-30 16:40:49,241:INFO:             autoviz: Not installed
2025-03-30 16:40:49,241:INFO:           fairlearn: Not installed
2025-03-30 16:40:49,241:INFO:          deepchecks: Not installed
2025-03-30 16:40:49,241:INFO:             xgboost: Not installed
2025-03-30 16:40:49,241:INFO:            catboost: Not installed
2025-03-30 16:40:49,241:INFO:              kmodes: Not installed
2025-03-30 16:40:49,241:INFO:             mlxtend: Not installed
2025-03-30 16:40:49,241:INFO:       statsforecast: Not installed
2025-03-30 16:40:49,241:INFO:        tune_sklearn: Not installed
2025-03-30 16:40:49,241:INFO:                 ray: Not installed
2025-03-30 16:40:49,241:INFO:            hyperopt: Not installed
2025-03-30 16:40:49,241:INFO:              optuna: Not installed
2025-03-30 16:40:49,241:INFO:               skopt: Not installed
2025-03-30 16:40:49,241:INFO:              mlflow: 2.21.0
2025-03-30 16:40:49,241:INFO:              gradio: Not installed
2025-03-30 16:40:49,241:INFO:             fastapi: 0.115.11
2025-03-30 16:40:49,241:INFO:             uvicorn: 0.34.0
2025-03-30 16:40:49,241:INFO:              m2cgen: Not installed
2025-03-30 16:40:49,241:INFO:           evidently: Not installed
2025-03-30 16:40:49,242:INFO:               fugue: Not installed
2025-03-30 16:40:49,242:INFO:           streamlit: 1.43.2
2025-03-30 16:40:49,242:INFO:             prophet: Not installed
2025-03-30 16:40:49,242:INFO:None
2025-03-30 16:40:49,242:INFO:Set up data.
2025-03-30 16:40:49,242:INFO:Set up folding strategy.
2025-03-30 16:40:49,242:INFO:Set up train/test split.
2025-03-30 16:40:49,242:INFO:Set up index.
2025-03-30 16:40:49,242:INFO:Assigning column types.
2025-03-30 16:40:49,242:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 16:40:49,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,355:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 16:40:49,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:40:49,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,450:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 16:40:49,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,562:INFO:Preparing preprocessing pipeline...
2025-03-30 16:40:49,562:INFO:Set up simple imputation.
2025-03-30 16:40:49,580:INFO:Finished creating preprocessing pipeline.
2025-03-30 16:40:49,582:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:40:49,582:INFO:Creating final display dataframe.
2025-03-30 16:40:49,607:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             0ee7
2025-03-30 16:40:49,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:40:49,730:INFO:Logging experiment in loggers
2025-03-30 16:40:49,798:INFO:SubProcess save_model() called ==================================
2025-03-30 16:40:49,802:INFO:Initializing save_model()
2025-03-30 16:40:49,802:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpt663qhdl\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:40:49,802:INFO:Adding model into prep_pipe
2025-03-30 16:40:49,802:WARNING:Only Model saved as it was a pipeline.
2025-03-30 16:40:49,802:INFO:C:\Users\Ian\AppData\Local\Temp\tmpt663qhdl\Transformation Pipeline.pkl saved in current working directory
2025-03-30 16:40:49,805:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:40:49,805:INFO:save_model() successfully completed......................................
2025-03-30 16:40:49,883:INFO:SubProcess save_model() end ==================================
2025-03-30 16:40:49,908:INFO:setup() successfully completed in 0.86s...............
2025-03-30 16:40:49,908:INFO:Initializing create_model()
2025-03-30 16:40:49,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A162314F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:40:49,908:INFO:Checking exceptions
2025-03-30 16:40:49,908:INFO:Importing libraries
2025-03-30 16:40:49,908:INFO:Copying training dataset
2025-03-30 16:40:49,908:INFO:Defining folds
2025-03-30 16:40:49,908:INFO:Declaring metric variables
2025-03-30 16:40:49,908:INFO:Importing untrained model
2025-03-30 16:40:49,908:INFO:Logistic Regression Imported successfully
2025-03-30 16:40:49,908:INFO:Starting cross validation
2025-03-30 16:40:49,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:40:53,190:INFO:Calculating mean and std
2025-03-30 16:40:53,191:INFO:Creating metrics dataframe
2025-03-30 16:40:53,192:INFO:Finalizing model
2025-03-30 16:40:53,245:INFO:Creating Dashboard logs
2025-03-30 16:40:53,245:INFO:Model: Logistic Regression
2025-03-30 16:40:53,291:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 16:40:53,408:INFO:Initializing predict_model()
2025-03-30 16:40:53,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A162314F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A102224940>)
2025-03-30 16:40:53,408:INFO:Checking exceptions
2025-03-30 16:40:53,408:INFO:Preloading libraries
2025-03-30 16:40:53,541:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 16:40:53,558:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:40:53,558:INFO:Uploading results into container
2025-03-30 16:40:53,558:INFO:Uploading model into container now
2025-03-30 16:40:53,558:INFO:_master_model_container: 1
2025-03-30 16:40:53,558:INFO:_display_container: 2
2025-03-30 16:40:53,558:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 16:40:53,558:INFO:create_model() successfully completed......................................
2025-03-30 16:40:53,645:INFO:Initializing create_model()
2025-03-30 16:40:53,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A162314F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:40:53,645:INFO:Checking exceptions
2025-03-30 16:40:53,645:INFO:Importing libraries
2025-03-30 16:40:53,645:INFO:Copying training dataset
2025-03-30 16:40:53,655:INFO:Defining folds
2025-03-30 16:40:53,655:INFO:Declaring metric variables
2025-03-30 16:40:53,655:INFO:Importing untrained model
2025-03-30 16:40:53,655:INFO:Decision Tree Classifier Imported successfully
2025-03-30 16:40:53,655:INFO:Starting cross validation
2025-03-30 16:40:53,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:40:55,330:INFO:Calculating mean and std
2025-03-30 16:40:55,330:INFO:Creating metrics dataframe
2025-03-30 16:40:55,332:INFO:Finalizing model
2025-03-30 16:40:55,365:INFO:Creating Dashboard logs
2025-03-30 16:40:55,365:INFO:Model: Decision Tree Classifier
2025-03-30 16:40:55,408:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 16:40:55,534:INFO:Initializing predict_model()
2025-03-30 16:40:55,534:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A162314F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A100C5C8B0>)
2025-03-30 16:40:55,534:INFO:Checking exceptions
2025-03-30 16:40:55,534:INFO:Preloading libraries
2025-03-30 16:40:55,661:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:40:55,661:INFO:Uploading results into container
2025-03-30 16:40:55,661:INFO:Uploading model into container now
2025-03-30 16:40:55,672:INFO:_master_model_container: 2
2025-03-30 16:40:55,672:INFO:_display_container: 3
2025-03-30 16:40:55,672:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 16:40:55,672:INFO:create_model() successfully completed......................................
2025-03-30 16:40:55,775:INFO:Initializing save_model()
2025-03-30 16:40:55,775:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:40:55,775:INFO:Adding model into prep_pipe
2025-03-30 16:40:55,778:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 16:40:55,781:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 16:40:55,781:INFO:save_model() successfully completed......................................
2025-03-30 16:40:58,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:58,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:58,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:58,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:40:59,608:INFO:Initializing load_model()
2025-03-30 16:40:59,608:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:42:57,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:42:57,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:42:57,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:42:57,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:42:58,604:INFO:Initializing load_model()
2025-03-30 16:42:58,604:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:45:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:45:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:45:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:45:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:45:39,071:INFO:Initializing load_model()
2025-03-30 16:45:39,071:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:46:23,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:46:23,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:46:23,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:46:23,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:46:24,268:INFO:Initializing load_model()
2025-03-30 16:46:24,268:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:47:01,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:01,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:01,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:01,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:02,725:INFO:Initializing load_model()
2025-03-30 16:47:02,725:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:47:35,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:35,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:35,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:35,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:37,092:INFO:Initializing load_model()
2025-03-30 16:47:37,092:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:47:52,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:52,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:52,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:52,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:47:53,260:INFO:Initializing load_model()
2025-03-30 16:47:53,260:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:48:10,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:10,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:10,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:10,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:11,557:INFO:Initializing load_model()
2025-03-30 16:48:11,558:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:48:24,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:24,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:24,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:24,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:26,035:INFO:Initializing load_model()
2025-03-30 16:48:26,035:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:48:53,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:53,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:53,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:53,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:48:54,575:INFO:PyCaret ClassificationExperiment
2025-03-30 16:48:54,575:INFO:Logging name: Treinamento
2025-03-30 16:48:54,575:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 16:48:54,575:INFO:version 3.3.2
2025-03-30 16:48:54,575:INFO:Initializing setup()
2025-03-30 16:48:54,575:INFO:self.USI: 5c9f
2025-03-30 16:48:54,575:INFO:self._variable_keys: {'n_jobs_param', 'idx', 'target_param', 'y_train', 'data', 'exp_id', 'is_multiclass', 'y_test', '_ml_usecase', 'fold_generator', 'X_test', 'log_plots_param', 'logging_param', 'X_train', 'seed', 'fold_groups_param', 'pipeline', 'y', 'X', 'USI', 'fix_imbalance', 'gpu_n_jobs_param', 'gpu_param', 'html_param', 'fold_shuffle_param', 'exp_name_log', '_available_plots', 'memory'}
2025-03-30 16:48:54,575:INFO:Checking environment
2025-03-30 16:48:54,575:INFO:python_version: 3.9.21
2025-03-30 16:48:54,575:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 16:48:54,575:INFO:machine: AMD64
2025-03-30 16:48:54,592:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 16:48:54,596:INFO:Memory: svmem(total=33685155840, available=23781064704, percent=29.4, used=9904091136, free=23781064704)
2025-03-30 16:48:54,596:INFO:Physical Core: 6
2025-03-30 16:48:54,596:INFO:Logical Core: 12
2025-03-30 16:48:54,596:INFO:Checking libraries
2025-03-30 16:48:54,596:INFO:System:
2025-03-30 16:48:54,596:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 16:48:54,596:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 16:48:54,596:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 16:48:54,596:INFO:PyCaret required dependencies:
2025-03-30 16:48:54,625:INFO:                 pip: 25.0
2025-03-30 16:48:54,625:INFO:          setuptools: 75.8.0
2025-03-30 16:48:54,625:INFO:             pycaret: 3.3.2
2025-03-30 16:48:54,625:INFO:             IPython: 8.18.1
2025-03-30 16:48:54,625:INFO:          ipywidgets: 8.1.5
2025-03-30 16:48:54,625:INFO:                tqdm: 4.67.1
2025-03-30 16:48:54,625:INFO:               numpy: 1.26.4
2025-03-30 16:48:54,625:INFO:              pandas: 1.5.3
2025-03-30 16:48:54,625:INFO:              jinja2: 3.1.6
2025-03-30 16:48:54,625:INFO:               scipy: 1.11.4
2025-03-30 16:48:54,625:INFO:              joblib: 1.3.2
2025-03-30 16:48:54,625:INFO:             sklearn: 1.4.2
2025-03-30 16:48:54,625:INFO:                pyod: 2.0.3
2025-03-30 16:48:54,625:INFO:            imblearn: 0.12.4
2025-03-30 16:48:54,625:INFO:   category_encoders: 2.6.4
2025-03-30 16:48:54,625:INFO:            lightgbm: 4.6.0
2025-03-30 16:48:54,625:INFO:               numba: 0.60.0
2025-03-30 16:48:54,625:INFO:            requests: 2.32.3
2025-03-30 16:48:54,625:INFO:          matplotlib: 3.7.5
2025-03-30 16:48:54,625:INFO:          scikitplot: 0.3.7
2025-03-30 16:48:54,625:INFO:         yellowbrick: 1.5
2025-03-30 16:48:54,625:INFO:              plotly: 5.24.1
2025-03-30 16:48:54,625:INFO:    plotly-resampler: Not installed
2025-03-30 16:48:54,625:INFO:             kaleido: 0.2.1
2025-03-30 16:48:54,625:INFO:           schemdraw: 0.15
2025-03-30 16:48:54,625:INFO:         statsmodels: 0.14.4
2025-03-30 16:48:54,625:INFO:              sktime: 0.26.0
2025-03-30 16:48:54,625:INFO:               tbats: 1.1.3
2025-03-30 16:48:54,625:INFO:            pmdarima: 2.0.4
2025-03-30 16:48:54,625:INFO:              psutil: 7.0.0
2025-03-30 16:48:54,625:INFO:          markupsafe: 3.0.2
2025-03-30 16:48:54,625:INFO:             pickle5: Not installed
2025-03-30 16:48:54,625:INFO:         cloudpickle: 2.2.1
2025-03-30 16:48:54,625:INFO:         deprecation: 2.1.0
2025-03-30 16:48:54,625:INFO:              xxhash: 3.5.0
2025-03-30 16:48:54,625:INFO:           wurlitzer: Not installed
2025-03-30 16:48:54,625:INFO:PyCaret optional dependencies:
2025-03-30 16:48:54,942:INFO:                shap: 0.47.1
2025-03-30 16:48:54,942:INFO:           interpret: Not installed
2025-03-30 16:48:54,942:INFO:                umap: Not installed
2025-03-30 16:48:54,942:INFO:     ydata_profiling: Not installed
2025-03-30 16:48:54,942:INFO:  explainerdashboard: Not installed
2025-03-30 16:48:54,942:INFO:             autoviz: Not installed
2025-03-30 16:48:54,942:INFO:           fairlearn: Not installed
2025-03-30 16:48:54,942:INFO:          deepchecks: Not installed
2025-03-30 16:48:54,942:INFO:             xgboost: Not installed
2025-03-30 16:48:54,942:INFO:            catboost: Not installed
2025-03-30 16:48:54,942:INFO:              kmodes: Not installed
2025-03-30 16:48:54,942:INFO:             mlxtend: Not installed
2025-03-30 16:48:54,942:INFO:       statsforecast: Not installed
2025-03-30 16:48:54,942:INFO:        tune_sklearn: Not installed
2025-03-30 16:48:54,942:INFO:                 ray: Not installed
2025-03-30 16:48:54,942:INFO:            hyperopt: Not installed
2025-03-30 16:48:54,942:INFO:              optuna: Not installed
2025-03-30 16:48:54,942:INFO:               skopt: Not installed
2025-03-30 16:48:54,942:INFO:              mlflow: 2.21.0
2025-03-30 16:48:54,942:INFO:              gradio: Not installed
2025-03-30 16:48:54,942:INFO:             fastapi: 0.115.11
2025-03-30 16:48:54,942:INFO:             uvicorn: 0.34.0
2025-03-30 16:48:54,942:INFO:              m2cgen: Not installed
2025-03-30 16:48:54,942:INFO:           evidently: Not installed
2025-03-30 16:48:54,942:INFO:               fugue: Not installed
2025-03-30 16:48:54,942:INFO:           streamlit: 1.43.2
2025-03-30 16:48:54,942:INFO:             prophet: Not installed
2025-03-30 16:48:54,942:INFO:None
2025-03-30 16:48:54,942:INFO:Set up data.
2025-03-30 16:48:54,942:INFO:Set up folding strategy.
2025-03-30 16:48:54,942:INFO:Set up train/test split.
2025-03-30 16:48:54,942:INFO:Set up index.
2025-03-30 16:48:54,942:INFO:Assigning column types.
2025-03-30 16:48:54,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 16:48:54,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:48:54,993:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:48:55,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 16:48:55,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:48:55,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,055:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 16:48:55,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:48:55,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 16:48:55,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,166:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 16:48:55,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,260:INFO:Preparing preprocessing pipeline...
2025-03-30 16:48:55,260:INFO:Set up simple imputation.
2025-03-30 16:48:55,276:INFO:Finished creating preprocessing pipeline.
2025-03-30 16:48:55,276:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:48:55,276:INFO:Creating final display dataframe.
2025-03-30 16:48:55,307:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             5c9f
2025-03-30 16:48:55,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 16:48:55,429:INFO:Logging experiment in loggers
2025-03-30 16:48:55,500:INFO:SubProcess save_model() called ==================================
2025-03-30 16:48:55,503:INFO:Initializing save_model()
2025-03-30 16:48:55,503:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp7i49w3z8\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:48:55,503:INFO:Adding model into prep_pipe
2025-03-30 16:48:55,503:WARNING:Only Model saved as it was a pipeline.
2025-03-30 16:48:55,505:INFO:C:\Users\Ian\AppData\Local\Temp\tmp7i49w3z8\Transformation Pipeline.pkl saved in current working directory
2025-03-30 16:48:55,507:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 16:48:55,507:INFO:save_model() successfully completed......................................
2025-03-30 16:48:55,570:INFO:SubProcess save_model() end ==================================
2025-03-30 16:48:55,602:INFO:setup() successfully completed in 0.85s...............
2025-03-30 16:48:55,602:INFO:Initializing create_model()
2025-03-30 16:48:55,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CC4194F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:48:55,602:INFO:Checking exceptions
2025-03-30 16:48:55,602:INFO:Importing libraries
2025-03-30 16:48:55,602:INFO:Copying training dataset
2025-03-30 16:48:55,602:INFO:Defining folds
2025-03-30 16:48:55,602:INFO:Declaring metric variables
2025-03-30 16:48:55,602:INFO:Importing untrained model
2025-03-30 16:48:55,602:INFO:Logistic Regression Imported successfully
2025-03-30 16:48:55,602:INFO:Starting cross validation
2025-03-30 16:48:55,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:48:58,958:INFO:Calculating mean and std
2025-03-30 16:48:58,959:INFO:Creating metrics dataframe
2025-03-30 16:48:58,961:INFO:Finalizing model
2025-03-30 16:48:58,993:INFO:Creating Dashboard logs
2025-03-30 16:48:58,993:INFO:Model: Logistic Regression
2025-03-30 16:48:59,042:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 16:48:59,175:INFO:Initializing predict_model()
2025-03-30 16:48:59,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CC4194F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017CE40B3940>)
2025-03-30 16:48:59,175:INFO:Checking exceptions
2025-03-30 16:48:59,175:INFO:Preloading libraries
2025-03-30 16:48:59,292:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 16:48:59,312:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:48:59,324:INFO:Uploading results into container
2025-03-30 16:48:59,325:INFO:Uploading model into container now
2025-03-30 16:48:59,331:INFO:_master_model_container: 1
2025-03-30 16:48:59,331:INFO:_display_container: 2
2025-03-30 16:48:59,331:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 16:48:59,331:INFO:create_model() successfully completed......................................
2025-03-30 16:48:59,417:INFO:Initializing create_model()
2025-03-30 16:48:59,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CC4194F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 16:48:59,417:INFO:Checking exceptions
2025-03-30 16:48:59,418:INFO:Importing libraries
2025-03-30 16:48:59,418:INFO:Copying training dataset
2025-03-30 16:48:59,422:INFO:Defining folds
2025-03-30 16:48:59,422:INFO:Declaring metric variables
2025-03-30 16:48:59,422:INFO:Importing untrained model
2025-03-30 16:48:59,422:INFO:Decision Tree Classifier Imported successfully
2025-03-30 16:48:59,422:INFO:Starting cross validation
2025-03-30 16:48:59,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 16:49:01,138:INFO:Calculating mean and std
2025-03-30 16:49:01,138:INFO:Creating metrics dataframe
2025-03-30 16:49:01,138:INFO:Finalizing model
2025-03-30 16:49:01,174:INFO:Creating Dashboard logs
2025-03-30 16:49:01,174:INFO:Model: Decision Tree Classifier
2025-03-30 16:49:01,225:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 16:49:01,357:INFO:Initializing predict_model()
2025-03-30 16:49:01,357:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CC4194F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017CE2AEC8B0>)
2025-03-30 16:49:01,357:INFO:Checking exceptions
2025-03-30 16:49:01,357:INFO:Preloading libraries
2025-03-30 16:49:01,500:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 16:49:01,500:INFO:Uploading results into container
2025-03-30 16:49:01,500:INFO:Uploading model into container now
2025-03-30 16:49:01,500:INFO:_master_model_container: 2
2025-03-30 16:49:01,500:INFO:_display_container: 3
2025-03-30 16:49:01,500:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 16:49:01,500:INFO:create_model() successfully completed......................................
2025-03-30 16:49:01,592:INFO:Initializing save_model()
2025-03-30 16:49:01,592:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 16:49:01,592:INFO:Adding model into prep_pipe
2025-03-30 16:49:01,592:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 16:49:01,604:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 16:49:01,604:INFO:save_model() successfully completed......................................
2025-03-30 16:49:04,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:49:04,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:49:04,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:49:04,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:49:05,508:INFO:Initializing load_model()
2025-03-30 16:49:05,508:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:50:16,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:50:16,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:50:16,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:50:16,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:50:17,258:INFO:Initializing load_model()
2025-03-30 16:50:17,258:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:51:16,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:51:16,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:51:16,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:51:16,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:51:17,208:INFO:Initializing load_model()
2025-03-30 16:51:17,208:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:58:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:07,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:08,341:INFO:Initializing load_model()
2025-03-30 16:58:08,341:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:58:19,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:19,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:19,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:19,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:20,295:INFO:Initializing load_model()
2025-03-30 16:58:20,295:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:58:49,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:49,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:49,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:49,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:50,268:INFO:Initializing load_model()
2025-03-30 16:58:50,269:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 16:58:55,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:55,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:55,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:55,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 16:58:56,518:INFO:Initializing load_model()
2025-03-30 16:58:56,518:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:02:11,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:02:11,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:02:11,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:02:11,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:02:12,206:INFO:Initializing load_model()
2025-03-30 17:02:12,206:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:02:12,363:INFO:Initializing predict_model()
2025-03-30 17:02:12,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029FEB4A8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029FB2FA6C10>)
2025-03-30 17:02:12,363:INFO:Checking exceptions
2025-03-30 17:02:12,363:INFO:Preloading libraries
2025-03-30 17:02:12,364:INFO:Set up data.
2025-03-30 17:02:12,366:INFO:Set up index.
2025-03-30 17:04:03,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:03,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:03,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:03,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:03,856:INFO:Initializing load_model()
2025-03-30 17:04:03,856:INFO:load_model(model_name=./data/processed\final_model, platform=None, authentication=None, verbose=True)
2025-03-30 17:04:22,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:22,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:22,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:22,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:22,901:INFO:Initializing load_model()
2025-03-30 17:04:22,901:INFO:load_model(model_name=../data/processed\final_model, platform=None, authentication=None, verbose=True)
2025-03-30 17:04:46,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:46,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:46,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:46,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:46,970:INFO:Initializing load_model()
2025-03-30 17:04:46,970:INFO:load_model(model_name=../data/processed\final_model, platform=None, authentication=None, verbose=True)
2025-03-30 17:04:53,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:53,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:53,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:53,862:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:04:54,271:INFO:Initializing load_model()
2025-03-30 17:04:54,271:INFO:load_model(model_name=../data/processed\final_model, platform=None, authentication=None, verbose=True)
2025-03-30 17:06:25,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:25,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:25,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:25,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:26,940:INFO:Initializing load_model()
2025-03-30 17:06:26,940:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:06:27,086:INFO:Initializing predict_model()
2025-03-30 17:06:27,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002818F06C400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000281D69C5C10>)
2025-03-30 17:06:27,086:INFO:Checking exceptions
2025-03-30 17:06:27,087:INFO:Preloading libraries
2025-03-30 17:06:27,087:INFO:Set up data.
2025-03-30 17:06:27,089:INFO:Set up index.
2025-03-30 17:06:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:37,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:06:39,078:INFO:Initializing load_model()
2025-03-30 17:06:39,078:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:06:39,212:INFO:Initializing predict_model()
2025-03-30 17:06:39,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DED193C400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DE99536C10>)
2025-03-30 17:06:39,212:INFO:Checking exceptions
2025-03-30 17:06:39,212:INFO:Preloading libraries
2025-03-30 17:06:39,212:INFO:Set up data.
2025-03-30 17:06:39,212:INFO:Set up index.
2025-03-30 17:07:47,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:47,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:47,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:47,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:49,024:INFO:PyCaret ClassificationExperiment
2025-03-30 17:07:49,024:INFO:Logging name: Treinamento
2025-03-30 17:07:49,024:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:07:49,024:INFO:version 3.3.2
2025-03-30 17:07:49,024:INFO:Initializing setup()
2025-03-30 17:07:49,024:INFO:self.USI: 6320
2025-03-30 17:07:49,024:INFO:self._variable_keys: {'y_test', 'X_test', 'USI', '_ml_usecase', 'memory', 'seed', 'X_train', 'logging_param', 'data', 'y_train', 'idx', 'gpu_n_jobs_param', 'fold_generator', 'exp_id', 'html_param', 'fold_shuffle_param', 'target_param', 'exp_name_log', 'is_multiclass', 'y', 'log_plots_param', 'X', '_available_plots', 'fix_imbalance', 'n_jobs_param', 'fold_groups_param', 'gpu_param', 'pipeline'}
2025-03-30 17:07:49,024:INFO:Checking environment
2025-03-30 17:07:49,024:INFO:python_version: 3.9.21
2025-03-30 17:07:49,024:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:07:49,024:INFO:machine: AMD64
2025-03-30 17:07:49,041:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:07:49,045:INFO:Memory: svmem(total=33685155840, available=22979514368, percent=31.8, used=10705641472, free=22979514368)
2025-03-30 17:07:49,045:INFO:Physical Core: 6
2025-03-30 17:07:49,045:INFO:Logical Core: 12
2025-03-30 17:07:49,045:INFO:Checking libraries
2025-03-30 17:07:49,045:INFO:System:
2025-03-30 17:07:49,045:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:07:49,045:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:07:49,045:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:07:49,045:INFO:PyCaret required dependencies:
2025-03-30 17:07:49,075:INFO:                 pip: 25.0
2025-03-30 17:07:49,075:INFO:          setuptools: 75.8.0
2025-03-30 17:07:49,075:INFO:             pycaret: 3.3.2
2025-03-30 17:07:49,075:INFO:             IPython: 8.18.1
2025-03-30 17:07:49,075:INFO:          ipywidgets: 8.1.5
2025-03-30 17:07:49,075:INFO:                tqdm: 4.67.1
2025-03-30 17:07:49,075:INFO:               numpy: 1.26.4
2025-03-30 17:07:49,075:INFO:              pandas: 1.5.3
2025-03-30 17:07:49,075:INFO:              jinja2: 3.1.6
2025-03-30 17:07:49,075:INFO:               scipy: 1.11.4
2025-03-30 17:07:49,075:INFO:              joblib: 1.3.2
2025-03-30 17:07:49,075:INFO:             sklearn: 1.4.2
2025-03-30 17:07:49,075:INFO:                pyod: 2.0.3
2025-03-30 17:07:49,075:INFO:            imblearn: 0.12.4
2025-03-30 17:07:49,075:INFO:   category_encoders: 2.6.4
2025-03-30 17:07:49,075:INFO:            lightgbm: 4.6.0
2025-03-30 17:07:49,075:INFO:               numba: 0.60.0
2025-03-30 17:07:49,075:INFO:            requests: 2.32.3
2025-03-30 17:07:49,075:INFO:          matplotlib: 3.7.5
2025-03-30 17:07:49,075:INFO:          scikitplot: 0.3.7
2025-03-30 17:07:49,075:INFO:         yellowbrick: 1.5
2025-03-30 17:07:49,075:INFO:              plotly: 5.24.1
2025-03-30 17:07:49,075:INFO:    plotly-resampler: Not installed
2025-03-30 17:07:49,075:INFO:             kaleido: 0.2.1
2025-03-30 17:07:49,075:INFO:           schemdraw: 0.15
2025-03-30 17:07:49,075:INFO:         statsmodels: 0.14.4
2025-03-30 17:07:49,075:INFO:              sktime: 0.26.0
2025-03-30 17:07:49,075:INFO:               tbats: 1.1.3
2025-03-30 17:07:49,075:INFO:            pmdarima: 2.0.4
2025-03-30 17:07:49,075:INFO:              psutil: 7.0.0
2025-03-30 17:07:49,075:INFO:          markupsafe: 3.0.2
2025-03-30 17:07:49,075:INFO:             pickle5: Not installed
2025-03-30 17:07:49,075:INFO:         cloudpickle: 2.2.1
2025-03-30 17:07:49,075:INFO:         deprecation: 2.1.0
2025-03-30 17:07:49,075:INFO:              xxhash: 3.5.0
2025-03-30 17:07:49,075:INFO:           wurlitzer: Not installed
2025-03-30 17:07:49,075:INFO:PyCaret optional dependencies:
2025-03-30 17:07:49,386:INFO:                shap: 0.47.1
2025-03-30 17:07:49,386:INFO:           interpret: Not installed
2025-03-30 17:07:49,386:INFO:                umap: Not installed
2025-03-30 17:07:49,386:INFO:     ydata_profiling: Not installed
2025-03-30 17:07:49,386:INFO:  explainerdashboard: Not installed
2025-03-30 17:07:49,386:INFO:             autoviz: Not installed
2025-03-30 17:07:49,386:INFO:           fairlearn: Not installed
2025-03-30 17:07:49,386:INFO:          deepchecks: Not installed
2025-03-30 17:07:49,386:INFO:             xgboost: Not installed
2025-03-30 17:07:49,386:INFO:            catboost: Not installed
2025-03-30 17:07:49,386:INFO:              kmodes: Not installed
2025-03-30 17:07:49,386:INFO:             mlxtend: Not installed
2025-03-30 17:07:49,386:INFO:       statsforecast: Not installed
2025-03-30 17:07:49,386:INFO:        tune_sklearn: Not installed
2025-03-30 17:07:49,386:INFO:                 ray: Not installed
2025-03-30 17:07:49,386:INFO:            hyperopt: Not installed
2025-03-30 17:07:49,386:INFO:              optuna: Not installed
2025-03-30 17:07:49,386:INFO:               skopt: Not installed
2025-03-30 17:07:49,386:INFO:              mlflow: 2.21.0
2025-03-30 17:07:49,386:INFO:              gradio: Not installed
2025-03-30 17:07:49,386:INFO:             fastapi: 0.115.11
2025-03-30 17:07:49,386:INFO:             uvicorn: 0.34.0
2025-03-30 17:07:49,386:INFO:              m2cgen: Not installed
2025-03-30 17:07:49,402:INFO:           evidently: Not installed
2025-03-30 17:07:49,402:INFO:               fugue: Not installed
2025-03-30 17:07:49,402:INFO:           streamlit: 1.43.2
2025-03-30 17:07:49,402:INFO:             prophet: Not installed
2025-03-30 17:07:49,402:INFO:None
2025-03-30 17:07:49,402:INFO:Set up data.
2025-03-30 17:07:49,402:INFO:Set up folding strategy.
2025-03-30 17:07:49,402:INFO:Set up train/test split.
2025-03-30 17:07:49,402:INFO:Set up index.
2025-03-30 17:07:49,402:INFO:Assigning column types.
2025-03-30 17:07:49,402:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:07:49,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,448:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,522:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:07:49,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,603:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:07:49,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,622:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:07:49,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,729:INFO:Preparing preprocessing pipeline...
2025-03-30 17:07:49,729:INFO:Set up simple imputation.
2025-03-30 17:07:49,743:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:07:49,747:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:07:49,747:INFO:Creating final display dataframe.
2025-03-30 17:07:49,782:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             6320
2025-03-30 17:07:49,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:07:49,891:INFO:Logging experiment in loggers
2025-03-30 17:07:49,964:INFO:SubProcess save_model() called ==================================
2025-03-30 17:07:49,968:INFO:Initializing save_model()
2025-03-30 17:07:49,968:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpzivivjra\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:07:49,968:INFO:Adding model into prep_pipe
2025-03-30 17:07:49,968:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:07:49,970:INFO:C:\Users\Ian\AppData\Local\Temp\tmpzivivjra\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:07:49,970:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:07:49,972:INFO:save_model() successfully completed......................................
2025-03-30 17:07:50,049:INFO:SubProcess save_model() end ==================================
2025-03-30 17:07:50,089:INFO:setup() successfully completed in 0.87s...............
2025-03-30 17:07:50,089:INFO:Initializing create_model()
2025-03-30 17:07:50,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018926DF4F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:07:50,089:INFO:Checking exceptions
2025-03-30 17:07:50,091:INFO:Importing libraries
2025-03-30 17:07:50,091:INFO:Copying training dataset
2025-03-30 17:07:50,093:INFO:Defining folds
2025-03-30 17:07:50,093:INFO:Declaring metric variables
2025-03-30 17:07:50,093:INFO:Importing untrained model
2025-03-30 17:07:50,095:INFO:Logistic Regression Imported successfully
2025-03-30 17:07:50,095:INFO:Starting cross validation
2025-03-30 17:07:50,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:07:53,640:INFO:Calculating mean and std
2025-03-30 17:07:53,641:INFO:Creating metrics dataframe
2025-03-30 17:07:53,641:INFO:Finalizing model
2025-03-30 17:07:53,676:INFO:Creating Dashboard logs
2025-03-30 17:07:53,676:INFO:Model: Logistic Regression
2025-03-30 17:07:53,727:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:07:53,858:INFO:Initializing predict_model()
2025-03-30 17:07:53,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018926DF4F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018946D05940>)
2025-03-30 17:07:53,858:INFO:Checking exceptions
2025-03-30 17:07:53,858:INFO:Preloading libraries
2025-03-30 17:07:53,991:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:07:54,010:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:07:54,010:INFO:Uploading results into container
2025-03-30 17:07:54,010:INFO:Uploading model into container now
2025-03-30 17:07:54,010:INFO:_master_model_container: 1
2025-03-30 17:07:54,010:INFO:_display_container: 2
2025-03-30 17:07:54,010:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:07:54,010:INFO:create_model() successfully completed......................................
2025-03-30 17:07:54,108:INFO:Initializing create_model()
2025-03-30 17:07:54,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018926DF4F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:07:54,108:INFO:Checking exceptions
2025-03-30 17:07:54,108:INFO:Importing libraries
2025-03-30 17:07:54,108:INFO:Copying training dataset
2025-03-30 17:07:54,108:INFO:Defining folds
2025-03-30 17:07:54,108:INFO:Declaring metric variables
2025-03-30 17:07:54,108:INFO:Importing untrained model
2025-03-30 17:07:54,108:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:07:54,108:INFO:Starting cross validation
2025-03-30 17:07:54,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:07:55,814:INFO:Calculating mean and std
2025-03-30 17:07:55,814:INFO:Creating metrics dataframe
2025-03-30 17:07:55,816:INFO:Finalizing model
2025-03-30 17:07:55,850:INFO:Creating Dashboard logs
2025-03-30 17:07:55,850:INFO:Model: Decision Tree Classifier
2025-03-30 17:07:55,893:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:07:56,034:INFO:Initializing predict_model()
2025-03-30 17:07:56,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018926DF4F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001894573C8B0>)
2025-03-30 17:07:56,034:INFO:Checking exceptions
2025-03-30 17:07:56,034:INFO:Preloading libraries
2025-03-30 17:07:56,172:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:07:56,172:INFO:Uploading results into container
2025-03-30 17:07:56,173:INFO:Uploading model into container now
2025-03-30 17:07:56,178:INFO:_master_model_container: 2
2025-03-30 17:07:56,178:INFO:_display_container: 3
2025-03-30 17:07:56,178:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:07:56,178:INFO:create_model() successfully completed......................................
2025-03-30 17:07:56,272:INFO:Initializing save_model()
2025-03-30 17:07:56,272:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:07:56,272:INFO:Adding model into prep_pipe
2025-03-30 17:07:56,275:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:07:56,278:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:07:56,278:INFO:save_model() successfully completed......................................
2025-03-30 17:07:59,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:59,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:59,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:07:59,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:08:00,325:INFO:Initializing load_model()
2025-03-30 17:08:00,340:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:08:00,492:INFO:Initializing predict_model()
2025-03-30 17:08:00,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001391542C400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001395CD86C10>)
2025-03-30 17:08:00,492:INFO:Checking exceptions
2025-03-30 17:08:00,493:INFO:Preloading libraries
2025-03-30 17:08:00,493:INFO:Set up data.
2025-03-30 17:08:00,494:INFO:Set up index.
2025-03-30 17:09:12,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:09:12,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:09:12,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:09:12,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:09:53,889:INFO:PyCaret ClassificationExperiment
2025-03-30 17:09:53,889:INFO:Logging name: clf-default-name
2025-03-30 17:09:53,889:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:09:53,889:INFO:version 3.3.2
2025-03-30 17:09:53,889:INFO:Initializing setup()
2025-03-30 17:09:53,889:INFO:self.USI: 501e
2025-03-30 17:09:53,889:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'pipeline', 'fold_generator', 'html_param', 'data', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'USI', 'fold_groups_param', 'X_test', '_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'X', 'y', 'exp_name_log', 'seed', 'gpu_param', 'y_test', 'target_param', 'n_jobs_param', 'idx', 'exp_id', 'logging_param', 'memory', 'y_train'}
2025-03-30 17:09:53,889:INFO:Checking environment
2025-03-30 17:09:53,889:INFO:python_version: 3.9.21
2025-03-30 17:09:53,889:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:09:53,889:INFO:machine: AMD64
2025-03-30 17:09:53,889:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:09:53,889:INFO:Memory: svmem(total=33685155840, available=22409904128, percent=33.5, used=11275251712, free=22409904128)
2025-03-30 17:09:53,889:INFO:Physical Core: 6
2025-03-30 17:09:53,889:INFO:Logical Core: 12
2025-03-30 17:09:53,889:INFO:Checking libraries
2025-03-30 17:09:53,889:INFO:System:
2025-03-30 17:09:53,889:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:09:53,889:INFO:executable: c:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:09:53,889:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:09:53,889:INFO:PyCaret required dependencies:
2025-03-30 17:09:53,936:INFO:                 pip: 25.0
2025-03-30 17:09:53,941:INFO:          setuptools: 75.8.0
2025-03-30 17:09:53,941:INFO:             pycaret: 3.3.2
2025-03-30 17:09:53,941:INFO:             IPython: 8.18.1
2025-03-30 17:09:53,941:INFO:          ipywidgets: 8.1.5
2025-03-30 17:09:53,941:INFO:                tqdm: 4.67.1
2025-03-30 17:09:53,941:INFO:               numpy: 1.26.4
2025-03-30 17:09:53,941:INFO:              pandas: 1.5.3
2025-03-30 17:09:53,941:INFO:              jinja2: 3.1.6
2025-03-30 17:09:53,941:INFO:               scipy: 1.11.4
2025-03-30 17:09:53,941:INFO:              joblib: 1.3.2
2025-03-30 17:09:53,941:INFO:             sklearn: 1.4.2
2025-03-30 17:09:53,941:INFO:                pyod: 2.0.3
2025-03-30 17:09:53,941:INFO:            imblearn: 0.12.4
2025-03-30 17:09:53,941:INFO:   category_encoders: 2.6.4
2025-03-30 17:09:53,941:INFO:            lightgbm: 4.6.0
2025-03-30 17:09:53,941:INFO:               numba: 0.60.0
2025-03-30 17:09:53,941:INFO:            requests: 2.32.3
2025-03-30 17:09:53,941:INFO:          matplotlib: 3.7.5
2025-03-30 17:09:53,941:INFO:          scikitplot: 0.3.7
2025-03-30 17:09:53,941:INFO:         yellowbrick: 1.5
2025-03-30 17:09:53,941:INFO:              plotly: 5.24.1
2025-03-30 17:09:53,941:INFO:    plotly-resampler: Not installed
2025-03-30 17:09:53,941:INFO:             kaleido: 0.2.1
2025-03-30 17:09:53,941:INFO:           schemdraw: 0.15
2025-03-30 17:09:53,941:INFO:         statsmodels: 0.14.4
2025-03-30 17:09:53,941:INFO:              sktime: 0.26.0
2025-03-30 17:09:53,941:INFO:               tbats: 1.1.3
2025-03-30 17:09:53,941:INFO:            pmdarima: 2.0.4
2025-03-30 17:09:53,941:INFO:              psutil: 7.0.0
2025-03-30 17:09:53,941:INFO:          markupsafe: 3.0.2
2025-03-30 17:09:53,941:INFO:             pickle5: Not installed
2025-03-30 17:09:53,941:INFO:         cloudpickle: 2.2.1
2025-03-30 17:09:53,941:INFO:         deprecation: 2.1.0
2025-03-30 17:09:53,941:INFO:              xxhash: 3.5.0
2025-03-30 17:09:53,941:INFO:           wurlitzer: Not installed
2025-03-30 17:09:53,941:INFO:PyCaret optional dependencies:
2025-03-30 17:09:54,572:INFO:                shap: 0.47.1
2025-03-30 17:09:54,572:INFO:           interpret: Not installed
2025-03-30 17:09:54,572:INFO:                umap: Not installed
2025-03-30 17:09:54,572:INFO:     ydata_profiling: Not installed
2025-03-30 17:09:54,572:INFO:  explainerdashboard: Not installed
2025-03-30 17:09:54,572:INFO:             autoviz: Not installed
2025-03-30 17:09:54,572:INFO:           fairlearn: Not installed
2025-03-30 17:09:54,572:INFO:          deepchecks: Not installed
2025-03-30 17:09:54,572:INFO:             xgboost: Not installed
2025-03-30 17:09:54,572:INFO:            catboost: Not installed
2025-03-30 17:09:54,572:INFO:              kmodes: Not installed
2025-03-30 17:09:54,572:INFO:             mlxtend: Not installed
2025-03-30 17:09:54,572:INFO:       statsforecast: Not installed
2025-03-30 17:09:54,572:INFO:        tune_sklearn: Not installed
2025-03-30 17:09:54,572:INFO:                 ray: Not installed
2025-03-30 17:09:54,572:INFO:            hyperopt: Not installed
2025-03-30 17:09:54,572:INFO:              optuna: Not installed
2025-03-30 17:09:54,572:INFO:               skopt: Not installed
2025-03-30 17:09:54,572:INFO:              mlflow: 2.21.0
2025-03-30 17:09:54,572:INFO:              gradio: Not installed
2025-03-30 17:09:54,572:INFO:             fastapi: 0.115.11
2025-03-30 17:09:54,572:INFO:             uvicorn: 0.34.0
2025-03-30 17:09:54,572:INFO:              m2cgen: Not installed
2025-03-30 17:09:54,572:INFO:           evidently: Not installed
2025-03-30 17:09:54,572:INFO:               fugue: Not installed
2025-03-30 17:09:54,572:INFO:           streamlit: 1.43.2
2025-03-30 17:09:54,572:INFO:             prophet: Not installed
2025-03-30 17:09:54,572:INFO:None
2025-03-30 17:09:54,572:INFO:Set up data.
2025-03-30 17:09:54,580:INFO:Set up folding strategy.
2025-03-30 17:09:54,580:INFO:Set up train/test split.
2025-03-30 17:09:54,588:INFO:Set up index.
2025-03-30 17:09:54,588:INFO:Assigning column types.
2025-03-30 17:09:54,592:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:09:54,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,756:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,795:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:09:54,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:09:54,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:54,941:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:09:55,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,074:INFO:Preparing preprocessing pipeline...
2025-03-30 17:09:55,074:INFO:Set up simple imputation.
2025-03-30 17:09:55,094:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:09:55,097:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:09:55,097:INFO:Creating final display dataframe.
2025-03-30 17:09:55,141:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              501e
2025-03-30 17:09:55,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:09:55,256:INFO:setup() successfully completed in 1.37s...............
2025-03-30 17:09:55,256:INFO:Initializing create_model()
2025-03-30 17:09:55,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F5983CA0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:09:55,257:INFO:Checking exceptions
2025-03-30 17:09:55,261:INFO:Importing libraries
2025-03-30 17:09:55,261:INFO:Copying training dataset
2025-03-30 17:09:55,271:INFO:Defining folds
2025-03-30 17:09:55,272:INFO:Declaring metric variables
2025-03-30 17:09:55,275:INFO:Importing untrained model
2025-03-30 17:09:55,278:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:09:55,284:INFO:Starting cross validation
2025-03-30 17:09:55,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:09:58,743:INFO:Calculating mean and std
2025-03-30 17:09:58,745:INFO:Creating metrics dataframe
2025-03-30 17:09:58,753:INFO:Finalizing model
2025-03-30 17:09:58,809:INFO:Uploading results into container
2025-03-30 17:09:58,809:INFO:Uploading model into container now
2025-03-30 17:09:58,819:INFO:_master_model_container: 1
2025-03-30 17:09:58,819:INFO:_display_container: 2
2025-03-30 17:09:58,819:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:09:58,819:INFO:create_model() successfully completed......................................
2025-03-30 17:09:58,910:INFO:Initializing finalize_model()
2025-03-30 17:09:58,910:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F5983CA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:09:58,910:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:09:58,910:INFO:Initializing create_model()
2025-03-30 17:09:58,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F5983CA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:09:58,910:INFO:Checking exceptions
2025-03-30 17:09:58,910:INFO:Importing libraries
2025-03-30 17:09:58,910:INFO:Copying training dataset
2025-03-30 17:09:58,910:INFO:Defining folds
2025-03-30 17:09:58,910:INFO:Declaring metric variables
2025-03-30 17:09:58,910:INFO:Importing untrained model
2025-03-30 17:09:58,910:INFO:Declaring custom model
2025-03-30 17:09:58,910:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:09:58,910:INFO:Cross validation set to False
2025-03-30 17:09:58,910:INFO:Fitting Model
2025-03-30 17:09:58,958:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:09:58,958:INFO:create_model() successfully completed......................................
2025-03-30 17:09:59,057:INFO:_master_model_container: 1
2025-03-30 17:09:59,057:INFO:_display_container: 2
2025-03-30 17:09:59,057:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:09:59,057:INFO:finalize_model() successfully completed......................................
2025-03-30 17:09:59,158:INFO:Initializing save_model()
2025-03-30 17:09:59,158:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False), model_name=../../Data/Modeling/modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:09:59,158:INFO:Adding model into prep_pipe
2025-03-30 17:09:59,158:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:09:59,158:INFO:../../Data/Modeling/modelo_final.pkl saved in current working directory
2025-03-30 17:09:59,158:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:09:59,158:INFO:save_model() successfully completed......................................
2025-03-30 17:10:36,839:INFO:PyCaret ClassificationExperiment
2025-03-30 17:10:36,839:INFO:Logging name: clf-default-name
2025-03-30 17:10:36,839:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:10:36,839:INFO:version 3.3.2
2025-03-30 17:10:36,839:INFO:Initializing setup()
2025-03-30 17:10:36,839:INFO:self.USI: 5c2f
2025-03-30 17:10:36,839:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'pipeline', 'fold_generator', 'html_param', 'data', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'USI', 'fold_groups_param', 'X_test', '_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'X', 'y', 'exp_name_log', 'seed', 'gpu_param', 'y_test', 'target_param', 'n_jobs_param', 'idx', 'exp_id', 'logging_param', 'memory', 'y_train'}
2025-03-30 17:10:36,839:INFO:Checking environment
2025-03-30 17:10:36,839:INFO:python_version: 3.9.21
2025-03-30 17:10:36,839:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:10:36,855:INFO:machine: AMD64
2025-03-30 17:10:36,855:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:10:36,855:INFO:Memory: svmem(total=33685155840, available=20969574400, percent=37.7, used=12715581440, free=20969574400)
2025-03-30 17:10:36,855:INFO:Physical Core: 6
2025-03-30 17:10:36,855:INFO:Logical Core: 12
2025-03-30 17:10:36,855:INFO:Checking libraries
2025-03-30 17:10:36,855:INFO:System:
2025-03-30 17:10:36,855:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:10:36,855:INFO:executable: c:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:10:36,855:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:10:36,855:INFO:PyCaret required dependencies:
2025-03-30 17:10:36,855:INFO:                 pip: 25.0
2025-03-30 17:10:36,855:INFO:          setuptools: 75.8.0
2025-03-30 17:10:36,855:INFO:             pycaret: 3.3.2
2025-03-30 17:10:36,855:INFO:             IPython: 8.18.1
2025-03-30 17:10:36,855:INFO:          ipywidgets: 8.1.5
2025-03-30 17:10:36,855:INFO:                tqdm: 4.67.1
2025-03-30 17:10:36,855:INFO:               numpy: 1.26.4
2025-03-30 17:10:36,855:INFO:              pandas: 1.5.3
2025-03-30 17:10:36,855:INFO:              jinja2: 3.1.6
2025-03-30 17:10:36,855:INFO:               scipy: 1.11.4
2025-03-30 17:10:36,855:INFO:              joblib: 1.3.2
2025-03-30 17:10:36,855:INFO:             sklearn: 1.4.2
2025-03-30 17:10:36,855:INFO:                pyod: 2.0.3
2025-03-30 17:10:36,855:INFO:            imblearn: 0.12.4
2025-03-30 17:10:36,855:INFO:   category_encoders: 2.6.4
2025-03-30 17:10:36,855:INFO:            lightgbm: 4.6.0
2025-03-30 17:10:36,855:INFO:               numba: 0.60.0
2025-03-30 17:10:36,855:INFO:            requests: 2.32.3
2025-03-30 17:10:36,855:INFO:          matplotlib: 3.7.5
2025-03-30 17:10:36,855:INFO:          scikitplot: 0.3.7
2025-03-30 17:10:36,855:INFO:         yellowbrick: 1.5
2025-03-30 17:10:36,855:INFO:              plotly: 5.24.1
2025-03-30 17:10:36,855:INFO:    plotly-resampler: Not installed
2025-03-30 17:10:36,855:INFO:             kaleido: 0.2.1
2025-03-30 17:10:36,855:INFO:           schemdraw: 0.15
2025-03-30 17:10:36,855:INFO:         statsmodels: 0.14.4
2025-03-30 17:10:36,855:INFO:              sktime: 0.26.0
2025-03-30 17:10:36,855:INFO:               tbats: 1.1.3
2025-03-30 17:10:36,855:INFO:            pmdarima: 2.0.4
2025-03-30 17:10:36,855:INFO:              psutil: 7.0.0
2025-03-30 17:10:36,855:INFO:          markupsafe: 3.0.2
2025-03-30 17:10:36,855:INFO:             pickle5: Not installed
2025-03-30 17:10:36,855:INFO:         cloudpickle: 2.2.1
2025-03-30 17:10:36,855:INFO:         deprecation: 2.1.0
2025-03-30 17:10:36,855:INFO:              xxhash: 3.5.0
2025-03-30 17:10:36,855:INFO:           wurlitzer: Not installed
2025-03-30 17:10:36,855:INFO:PyCaret optional dependencies:
2025-03-30 17:10:36,855:INFO:                shap: 0.47.1
2025-03-30 17:10:36,855:INFO:           interpret: Not installed
2025-03-30 17:10:36,855:INFO:                umap: Not installed
2025-03-30 17:10:36,855:INFO:     ydata_profiling: Not installed
2025-03-30 17:10:36,855:INFO:  explainerdashboard: Not installed
2025-03-30 17:10:36,855:INFO:             autoviz: Not installed
2025-03-30 17:10:36,855:INFO:           fairlearn: Not installed
2025-03-30 17:10:36,855:INFO:          deepchecks: Not installed
2025-03-30 17:10:36,855:INFO:             xgboost: Not installed
2025-03-30 17:10:36,855:INFO:            catboost: Not installed
2025-03-30 17:10:36,855:INFO:              kmodes: Not installed
2025-03-30 17:10:36,855:INFO:             mlxtend: Not installed
2025-03-30 17:10:36,855:INFO:       statsforecast: Not installed
2025-03-30 17:10:36,855:INFO:        tune_sklearn: Not installed
2025-03-30 17:10:36,855:INFO:                 ray: Not installed
2025-03-30 17:10:36,855:INFO:            hyperopt: Not installed
2025-03-30 17:10:36,855:INFO:              optuna: Not installed
2025-03-30 17:10:36,855:INFO:               skopt: Not installed
2025-03-30 17:10:36,855:INFO:              mlflow: 2.21.0
2025-03-30 17:10:36,855:INFO:              gradio: Not installed
2025-03-30 17:10:36,855:INFO:             fastapi: 0.115.11
2025-03-30 17:10:36,855:INFO:             uvicorn: 0.34.0
2025-03-30 17:10:36,855:INFO:              m2cgen: Not installed
2025-03-30 17:10:36,855:INFO:           evidently: Not installed
2025-03-30 17:10:36,855:INFO:               fugue: Not installed
2025-03-30 17:10:36,855:INFO:           streamlit: 1.43.2
2025-03-30 17:10:36,855:INFO:             prophet: Not installed
2025-03-30 17:10:36,855:INFO:None
2025-03-30 17:10:36,855:INFO:Set up data.
2025-03-30 17:10:36,855:INFO:Set up folding strategy.
2025-03-30 17:10:36,855:INFO:Set up train/test split.
2025-03-30 17:10:36,871:INFO:Set up index.
2025-03-30 17:10:36,871:INFO:Assigning column types.
2025-03-30 17:10:36,871:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:10:36,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:10:36,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:10:36,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:36,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:36,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:10:36,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:10:37,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,013:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:10:37,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:10:37,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,099:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:10:37,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,119:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:10:37,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,235:INFO:Preparing preprocessing pipeline...
2025-03-30 17:10:37,235:INFO:Set up simple imputation.
2025-03-30 17:10:37,251:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:10:37,251:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:10:37,251:INFO:Creating final display dataframe.
2025-03-30 17:10:37,315:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5c2f
2025-03-30 17:10:37,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:10:37,473:INFO:setup() successfully completed in 0.63s...............
2025-03-30 17:10:37,473:INFO:Initializing create_model()
2025-03-30 17:10:37,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F6509B80>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:10:37,473:INFO:Checking exceptions
2025-03-30 17:10:37,498:INFO:Importing libraries
2025-03-30 17:10:37,498:INFO:Copying training dataset
2025-03-30 17:10:37,500:INFO:Defining folds
2025-03-30 17:10:37,500:INFO:Declaring metric variables
2025-03-30 17:10:37,505:INFO:Importing untrained model
2025-03-30 17:10:37,509:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:10:37,511:INFO:Starting cross validation
2025-03-30 17:10:37,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:10:39,635:INFO:Calculating mean and std
2025-03-30 17:10:39,636:INFO:Creating metrics dataframe
2025-03-30 17:10:39,640:INFO:Finalizing model
2025-03-30 17:10:39,687:INFO:Uploading results into container
2025-03-30 17:10:39,689:INFO:Uploading model into container now
2025-03-30 17:10:39,697:INFO:_master_model_container: 1
2025-03-30 17:10:39,697:INFO:_display_container: 2
2025-03-30 17:10:39,697:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:10:39,697:INFO:create_model() successfully completed......................................
2025-03-30 17:10:39,815:INFO:Initializing finalize_model()
2025-03-30 17:10:39,815:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F6509B80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:10:39,816:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:10:39,818:INFO:Initializing create_model()
2025-03-30 17:10:39,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000190F6509B80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:10:39,818:INFO:Checking exceptions
2025-03-30 17:10:39,819:INFO:Importing libraries
2025-03-30 17:10:39,819:INFO:Copying training dataset
2025-03-30 17:10:39,820:INFO:Defining folds
2025-03-30 17:10:39,820:INFO:Declaring metric variables
2025-03-30 17:10:39,820:INFO:Importing untrained model
2025-03-30 17:10:39,820:INFO:Declaring custom model
2025-03-30 17:10:39,820:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:10:39,821:INFO:Cross validation set to False
2025-03-30 17:10:39,821:INFO:Fitting Model
2025-03-30 17:10:39,880:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:10:39,880:INFO:create_model() successfully completed......................................
2025-03-30 17:10:39,989:INFO:_master_model_container: 1
2025-03-30 17:10:39,990:INFO:_display_container: 2
2025-03-30 17:10:39,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:10:39,995:INFO:finalize_model() successfully completed......................................
2025-03-30 17:10:40,102:INFO:Initializing save_model()
2025-03-30 17:10:40,102:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False), model_name=../../Data/Modeling/modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:10:40,102:INFO:Adding model into prep_pipe
2025-03-30 17:10:40,102:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:10:40,105:INFO:../../Data/Modeling/modelo_final.pkl saved in current working directory
2025-03-30 17:10:40,107:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:10:40,108:INFO:save_model() successfully completed......................................
2025-03-30 17:11:43,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:11:43,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:11:43,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:11:43,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:11:44,571:INFO:Initializing load_model()
2025-03-30 17:11:44,571:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:11:44,728:INFO:Initializing predict_model()
2025-03-30 17:11:44,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C69C33B490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C6E3F55C10>)
2025-03-30 17:11:44,728:INFO:Checking exceptions
2025-03-30 17:11:44,728:INFO:Preloading libraries
2025-03-30 17:11:44,728:INFO:Set up data.
2025-03-30 17:11:44,729:INFO:Set up index.
2025-03-30 17:21:04,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:04,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:04,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:04,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:05,578:INFO:Initializing load_model()
2025-03-30 17:21:05,578:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:21:16,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:16,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:16,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:16,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:18,208:INFO:PyCaret ClassificationExperiment
2025-03-30 17:21:18,208:INFO:Logging name: Treinamento
2025-03-30 17:21:18,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:21:18,208:INFO:version 3.3.2
2025-03-30 17:21:18,208:INFO:Initializing setup()
2025-03-30 17:21:18,208:INFO:self.USI: 6ad3
2025-03-30 17:21:18,208:INFO:self._variable_keys: {'X_train', 'y', 'n_jobs_param', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'fix_imbalance', 'fold_groups_param', 'data', 'exp_name_log', 'gpu_param', '_ml_usecase', 'idx', 'y_test', 'is_multiclass', 'X_test', 'logging_param', 'fold_generator', 'target_param', 'seed', 'X', '_available_plots', 'fold_shuffle_param', 'USI', 'memory', 'y_train', 'exp_id', 'html_param'}
2025-03-30 17:21:18,208:INFO:Checking environment
2025-03-30 17:21:18,208:INFO:python_version: 3.9.21
2025-03-30 17:21:18,208:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:21:18,208:INFO:machine: AMD64
2025-03-30 17:21:18,226:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:21:18,228:INFO:Memory: svmem(total=33685155840, available=21899579392, percent=35.0, used=11785576448, free=21899579392)
2025-03-30 17:21:18,228:INFO:Physical Core: 6
2025-03-30 17:21:18,228:INFO:Logical Core: 12
2025-03-30 17:21:18,228:INFO:Checking libraries
2025-03-30 17:21:18,228:INFO:System:
2025-03-30 17:21:18,228:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:21:18,228:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:21:18,228:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:21:18,228:INFO:PyCaret required dependencies:
2025-03-30 17:21:18,258:INFO:                 pip: 25.0
2025-03-30 17:21:18,258:INFO:          setuptools: 75.8.0
2025-03-30 17:21:18,258:INFO:             pycaret: 3.3.2
2025-03-30 17:21:18,258:INFO:             IPython: 8.18.1
2025-03-30 17:21:18,258:INFO:          ipywidgets: 8.1.5
2025-03-30 17:21:18,258:INFO:                tqdm: 4.67.1
2025-03-30 17:21:18,258:INFO:               numpy: 1.26.4
2025-03-30 17:21:18,258:INFO:              pandas: 1.5.3
2025-03-30 17:21:18,258:INFO:              jinja2: 3.1.6
2025-03-30 17:21:18,258:INFO:               scipy: 1.11.4
2025-03-30 17:21:18,258:INFO:              joblib: 1.3.2
2025-03-30 17:21:18,258:INFO:             sklearn: 1.4.2
2025-03-30 17:21:18,258:INFO:                pyod: 2.0.3
2025-03-30 17:21:18,258:INFO:            imblearn: 0.12.4
2025-03-30 17:21:18,258:INFO:   category_encoders: 2.6.4
2025-03-30 17:21:18,258:INFO:            lightgbm: 4.6.0
2025-03-30 17:21:18,258:INFO:               numba: 0.60.0
2025-03-30 17:21:18,258:INFO:            requests: 2.32.3
2025-03-30 17:21:18,258:INFO:          matplotlib: 3.7.5
2025-03-30 17:21:18,258:INFO:          scikitplot: 0.3.7
2025-03-30 17:21:18,258:INFO:         yellowbrick: 1.5
2025-03-30 17:21:18,258:INFO:              plotly: 5.24.1
2025-03-30 17:21:18,258:INFO:    plotly-resampler: Not installed
2025-03-30 17:21:18,258:INFO:             kaleido: 0.2.1
2025-03-30 17:21:18,258:INFO:           schemdraw: 0.15
2025-03-30 17:21:18,258:INFO:         statsmodels: 0.14.4
2025-03-30 17:21:18,258:INFO:              sktime: 0.26.0
2025-03-30 17:21:18,258:INFO:               tbats: 1.1.3
2025-03-30 17:21:18,258:INFO:            pmdarima: 2.0.4
2025-03-30 17:21:18,258:INFO:              psutil: 7.0.0
2025-03-30 17:21:18,258:INFO:          markupsafe: 3.0.2
2025-03-30 17:21:18,258:INFO:             pickle5: Not installed
2025-03-30 17:21:18,258:INFO:         cloudpickle: 2.2.1
2025-03-30 17:21:18,258:INFO:         deprecation: 2.1.0
2025-03-30 17:21:18,258:INFO:              xxhash: 3.5.0
2025-03-30 17:21:18,258:INFO:           wurlitzer: Not installed
2025-03-30 17:21:18,258:INFO:PyCaret optional dependencies:
2025-03-30 17:21:18,605:INFO:                shap: 0.47.1
2025-03-30 17:21:18,605:INFO:           interpret: Not installed
2025-03-30 17:21:18,605:INFO:                umap: Not installed
2025-03-30 17:21:18,605:INFO:     ydata_profiling: Not installed
2025-03-30 17:21:18,605:INFO:  explainerdashboard: Not installed
2025-03-30 17:21:18,605:INFO:             autoviz: Not installed
2025-03-30 17:21:18,605:INFO:           fairlearn: Not installed
2025-03-30 17:21:18,605:INFO:          deepchecks: Not installed
2025-03-30 17:21:18,605:INFO:             xgboost: Not installed
2025-03-30 17:21:18,605:INFO:            catboost: Not installed
2025-03-30 17:21:18,605:INFO:              kmodes: Not installed
2025-03-30 17:21:18,605:INFO:             mlxtend: Not installed
2025-03-30 17:21:18,605:INFO:       statsforecast: Not installed
2025-03-30 17:21:18,605:INFO:        tune_sklearn: Not installed
2025-03-30 17:21:18,605:INFO:                 ray: Not installed
2025-03-30 17:21:18,605:INFO:            hyperopt: Not installed
2025-03-30 17:21:18,605:INFO:              optuna: Not installed
2025-03-30 17:21:18,605:INFO:               skopt: Not installed
2025-03-30 17:21:18,605:INFO:              mlflow: 2.21.0
2025-03-30 17:21:18,605:INFO:              gradio: Not installed
2025-03-30 17:21:18,605:INFO:             fastapi: 0.115.11
2025-03-30 17:21:18,605:INFO:             uvicorn: 0.34.0
2025-03-30 17:21:18,605:INFO:              m2cgen: Not installed
2025-03-30 17:21:18,605:INFO:           evidently: Not installed
2025-03-30 17:21:18,605:INFO:               fugue: Not installed
2025-03-30 17:21:18,605:INFO:           streamlit: 1.43.2
2025-03-30 17:21:18,605:INFO:             prophet: Not installed
2025-03-30 17:21:18,605:INFO:None
2025-03-30 17:21:18,605:INFO:Set up data.
2025-03-30 17:21:18,605:INFO:Set up folding strategy.
2025-03-30 17:21:18,605:INFO:Set up train/test split.
2025-03-30 17:21:18,605:INFO:Set up index.
2025-03-30 17:21:18,605:INFO:Assigning column types.
2025-03-30 17:21:18,621:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:21:18,636:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,715:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:21:18,757:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:21:18,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,824:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:21:18,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:18,924:INFO:Preparing preprocessing pipeline...
2025-03-30 17:21:18,924:INFO:Set up simple imputation.
2025-03-30 17:21:18,940:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:21:18,957:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:21:18,957:INFO:Creating final display dataframe.
2025-03-30 17:21:18,994:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             6ad3
2025-03-30 17:21:19,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:19,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:19,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:19,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:21:19,106:INFO:Logging experiment in loggers
2025-03-30 17:21:19,170:INFO:SubProcess save_model() called ==================================
2025-03-30 17:21:19,170:INFO:Initializing save_model()
2025-03-30 17:21:19,170:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp0tj1_mqe\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:21:19,170:INFO:Adding model into prep_pipe
2025-03-30 17:21:19,170:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:21:19,170:INFO:C:\Users\Ian\AppData\Local\Temp\tmp0tj1_mqe\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:21:19,186:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:21:19,186:INFO:save_model() successfully completed......................................
2025-03-30 17:21:19,266:INFO:SubProcess save_model() end ==================================
2025-03-30 17:21:19,298:INFO:setup() successfully completed in 0.9s...............
2025-03-30 17:21:19,298:INFO:Initializing create_model()
2025-03-30 17:21:19,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCC5534F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:21:19,298:INFO:Checking exceptions
2025-03-30 17:21:19,298:INFO:Importing libraries
2025-03-30 17:21:19,298:INFO:Copying training dataset
2025-03-30 17:21:19,298:INFO:Defining folds
2025-03-30 17:21:19,298:INFO:Declaring metric variables
2025-03-30 17:21:19,298:INFO:Importing untrained model
2025-03-30 17:21:19,298:INFO:Logistic Regression Imported successfully
2025-03-30 17:21:19,298:INFO:Starting cross validation
2025-03-30 17:21:19,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:21:22,858:INFO:Calculating mean and std
2025-03-30 17:21:22,858:INFO:Creating metrics dataframe
2025-03-30 17:21:22,861:INFO:Finalizing model
2025-03-30 17:21:22,892:INFO:Creating Dashboard logs
2025-03-30 17:21:22,892:INFO:Model: Logistic Regression
2025-03-30 17:21:22,941:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:21:23,058:INFO:Initializing predict_model()
2025-03-30 17:21:23,058:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCC5534F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CCE5462940>)
2025-03-30 17:21:23,058:INFO:Checking exceptions
2025-03-30 17:21:23,058:INFO:Preloading libraries
2025-03-30 17:21:23,187:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:21:23,219:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:21:23,219:INFO:Uploading results into container
2025-03-30 17:21:23,219:INFO:Uploading model into container now
2025-03-30 17:21:23,225:INFO:_master_model_container: 1
2025-03-30 17:21:23,225:INFO:_display_container: 2
2025-03-30 17:21:23,225:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:21:23,225:INFO:create_model() successfully completed......................................
2025-03-30 17:21:23,324:INFO:Initializing create_model()
2025-03-30 17:21:23,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCC5534F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:21:23,324:INFO:Checking exceptions
2025-03-30 17:21:23,324:INFO:Importing libraries
2025-03-30 17:21:23,324:INFO:Copying training dataset
2025-03-30 17:21:23,337:INFO:Defining folds
2025-03-30 17:21:23,337:INFO:Declaring metric variables
2025-03-30 17:21:23,339:INFO:Importing untrained model
2025-03-30 17:21:23,339:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:21:23,339:INFO:Starting cross validation
2025-03-30 17:21:23,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:21:25,240:INFO:Calculating mean and std
2025-03-30 17:21:25,242:INFO:Creating metrics dataframe
2025-03-30 17:21:25,243:INFO:Finalizing model
2025-03-30 17:21:25,275:INFO:Creating Dashboard logs
2025-03-30 17:21:25,275:INFO:Model: Decision Tree Classifier
2025-03-30 17:21:25,341:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:21:25,531:INFO:Initializing predict_model()
2025-03-30 17:21:25,531:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCC5534F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CCE3E9C8B0>)
2025-03-30 17:21:25,531:INFO:Checking exceptions
2025-03-30 17:21:25,531:INFO:Preloading libraries
2025-03-30 17:21:25,705:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:21:25,705:INFO:Uploading results into container
2025-03-30 17:21:25,705:INFO:Uploading model into container now
2025-03-30 17:21:25,705:INFO:_master_model_container: 2
2025-03-30 17:21:25,705:INFO:_display_container: 3
2025-03-30 17:21:25,705:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:21:25,705:INFO:create_model() successfully completed......................................
2025-03-30 17:21:25,805:INFO:Initializing save_model()
2025-03-30 17:21:25,805:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:21:25,805:INFO:Adding model into prep_pipe
2025-03-30 17:21:25,808:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:21:25,812:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:21:25,812:INFO:save_model() successfully completed......................................
2025-03-30 17:21:28,434:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:28,434:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:28,434:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:28,434:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:21:29,524:INFO:Initializing load_model()
2025-03-30 17:21:29,524:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:26:37,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:37,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:37,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:37,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:38,416:INFO:Initializing load_model()
2025-03-30 17:26:38,416:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:26:51,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:51,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:51,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:51,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:26:53,206:INFO:PyCaret ClassificationExperiment
2025-03-30 17:26:53,206:INFO:Logging name: Treinamento
2025-03-30 17:26:53,206:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:26:53,206:INFO:version 3.3.2
2025-03-30 17:26:53,206:INFO:Initializing setup()
2025-03-30 17:26:53,206:INFO:self.USI: 3d7f
2025-03-30 17:26:53,206:INFO:self._variable_keys: {'_available_plots', 'data', 'y_train', 'seed', 'exp_id', 'log_plots_param', 'y', 'fold_generator', 'is_multiclass', 'X', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'USI', 'gpu_param', 'idx', 'y_test', 'exp_name_log', 'logging_param', 'html_param', 'fold_groups_param', 'target_param', 'X_test', 'memory', '_ml_usecase', 'fix_imbalance', 'pipeline', 'X_train'}
2025-03-30 17:26:53,206:INFO:Checking environment
2025-03-30 17:26:53,206:INFO:python_version: 3.9.21
2025-03-30 17:26:53,206:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:26:53,206:INFO:machine: AMD64
2025-03-30 17:26:53,222:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:26:53,227:INFO:Memory: svmem(total=33685155840, available=22113378304, percent=34.4, used=11571777536, free=22113378304)
2025-03-30 17:26:53,227:INFO:Physical Core: 6
2025-03-30 17:26:53,227:INFO:Logical Core: 12
2025-03-30 17:26:53,227:INFO:Checking libraries
2025-03-30 17:26:53,227:INFO:System:
2025-03-30 17:26:53,227:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:26:53,227:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:26:53,227:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:26:53,227:INFO:PyCaret required dependencies:
2025-03-30 17:26:53,258:INFO:                 pip: 25.0
2025-03-30 17:26:53,258:INFO:          setuptools: 75.8.0
2025-03-30 17:26:53,258:INFO:             pycaret: 3.3.2
2025-03-30 17:26:53,258:INFO:             IPython: 8.18.1
2025-03-30 17:26:53,258:INFO:          ipywidgets: 8.1.5
2025-03-30 17:26:53,258:INFO:                tqdm: 4.67.1
2025-03-30 17:26:53,258:INFO:               numpy: 1.26.4
2025-03-30 17:26:53,258:INFO:              pandas: 1.5.3
2025-03-30 17:26:53,258:INFO:              jinja2: 3.1.6
2025-03-30 17:26:53,258:INFO:               scipy: 1.11.4
2025-03-30 17:26:53,258:INFO:              joblib: 1.3.2
2025-03-30 17:26:53,258:INFO:             sklearn: 1.4.2
2025-03-30 17:26:53,258:INFO:                pyod: 2.0.3
2025-03-30 17:26:53,258:INFO:            imblearn: 0.12.4
2025-03-30 17:26:53,258:INFO:   category_encoders: 2.6.4
2025-03-30 17:26:53,258:INFO:            lightgbm: 4.6.0
2025-03-30 17:26:53,258:INFO:               numba: 0.60.0
2025-03-30 17:26:53,258:INFO:            requests: 2.32.3
2025-03-30 17:26:53,258:INFO:          matplotlib: 3.7.5
2025-03-30 17:26:53,258:INFO:          scikitplot: 0.3.7
2025-03-30 17:26:53,258:INFO:         yellowbrick: 1.5
2025-03-30 17:26:53,258:INFO:              plotly: 5.24.1
2025-03-30 17:26:53,258:INFO:    plotly-resampler: Not installed
2025-03-30 17:26:53,258:INFO:             kaleido: 0.2.1
2025-03-30 17:26:53,258:INFO:           schemdraw: 0.15
2025-03-30 17:26:53,258:INFO:         statsmodels: 0.14.4
2025-03-30 17:26:53,258:INFO:              sktime: 0.26.0
2025-03-30 17:26:53,258:INFO:               tbats: 1.1.3
2025-03-30 17:26:53,258:INFO:            pmdarima: 2.0.4
2025-03-30 17:26:53,258:INFO:              psutil: 7.0.0
2025-03-30 17:26:53,258:INFO:          markupsafe: 3.0.2
2025-03-30 17:26:53,258:INFO:             pickle5: Not installed
2025-03-30 17:26:53,258:INFO:         cloudpickle: 2.2.1
2025-03-30 17:26:53,258:INFO:         deprecation: 2.1.0
2025-03-30 17:26:53,258:INFO:              xxhash: 3.5.0
2025-03-30 17:26:53,258:INFO:           wurlitzer: Not installed
2025-03-30 17:26:53,258:INFO:PyCaret optional dependencies:
2025-03-30 17:26:53,573:INFO:                shap: 0.47.1
2025-03-30 17:26:53,573:INFO:           interpret: Not installed
2025-03-30 17:26:53,573:INFO:                umap: Not installed
2025-03-30 17:26:53,573:INFO:     ydata_profiling: Not installed
2025-03-30 17:26:53,573:INFO:  explainerdashboard: Not installed
2025-03-30 17:26:53,573:INFO:             autoviz: Not installed
2025-03-30 17:26:53,573:INFO:           fairlearn: Not installed
2025-03-30 17:26:53,573:INFO:          deepchecks: Not installed
2025-03-30 17:26:53,573:INFO:             xgboost: Not installed
2025-03-30 17:26:53,573:INFO:            catboost: Not installed
2025-03-30 17:26:53,573:INFO:              kmodes: Not installed
2025-03-30 17:26:53,573:INFO:             mlxtend: Not installed
2025-03-30 17:26:53,573:INFO:       statsforecast: Not installed
2025-03-30 17:26:53,573:INFO:        tune_sklearn: Not installed
2025-03-30 17:26:53,573:INFO:                 ray: Not installed
2025-03-30 17:26:53,573:INFO:            hyperopt: Not installed
2025-03-30 17:26:53,573:INFO:              optuna: Not installed
2025-03-30 17:26:53,573:INFO:               skopt: Not installed
2025-03-30 17:26:53,573:INFO:              mlflow: 2.21.0
2025-03-30 17:26:53,573:INFO:              gradio: Not installed
2025-03-30 17:26:53,573:INFO:             fastapi: 0.115.11
2025-03-30 17:26:53,573:INFO:             uvicorn: 0.34.0
2025-03-30 17:26:53,573:INFO:              m2cgen: Not installed
2025-03-30 17:26:53,573:INFO:           evidently: Not installed
2025-03-30 17:26:53,573:INFO:               fugue: Not installed
2025-03-30 17:26:53,573:INFO:           streamlit: 1.43.2
2025-03-30 17:26:53,573:INFO:             prophet: Not installed
2025-03-30 17:26:53,573:INFO:None
2025-03-30 17:26:53,573:INFO:Set up data.
2025-03-30 17:26:53,573:INFO:Set up folding strategy.
2025-03-30 17:26:53,573:INFO:Set up train/test split.
2025-03-30 17:26:53,589:INFO:Set up index.
2025-03-30 17:26:53,589:INFO:Assigning column types.
2025-03-30 17:26:53,594:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:26:53,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,700:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:26:53,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,780:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:26:53,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,796:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:26:53,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:53,906:INFO:Preparing preprocessing pipeline...
2025-03-30 17:26:53,906:INFO:Set up simple imputation.
2025-03-30 17:26:53,922:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:26:53,922:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:26:53,922:INFO:Creating final display dataframe.
2025-03-30 17:26:53,965:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             3d7f
2025-03-30 17:26:54,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:54,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:54,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:54,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:26:54,076:INFO:Logging experiment in loggers
2025-03-30 17:26:54,138:INFO:SubProcess save_model() called ==================================
2025-03-30 17:26:54,154:INFO:Initializing save_model()
2025-03-30 17:26:54,154:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp_jud3u01\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:26:54,154:INFO:Adding model into prep_pipe
2025-03-30 17:26:54,154:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:26:54,154:INFO:C:\Users\Ian\AppData\Local\Temp\tmp_jud3u01\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:26:54,154:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:26:54,154:INFO:save_model() successfully completed......................................
2025-03-30 17:26:54,234:INFO:SubProcess save_model() end ==================================
2025-03-30 17:26:54,266:INFO:setup() successfully completed in 0.88s...............
2025-03-30 17:26:54,266:INFO:Initializing create_model()
2025-03-30 17:26:54,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E500B4F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:26:54,266:INFO:Checking exceptions
2025-03-30 17:26:54,266:INFO:Importing libraries
2025-03-30 17:26:54,266:INFO:Copying training dataset
2025-03-30 17:26:54,266:INFO:Defining folds
2025-03-30 17:26:54,266:INFO:Declaring metric variables
2025-03-30 17:26:54,266:INFO:Importing untrained model
2025-03-30 17:26:54,266:INFO:Logistic Regression Imported successfully
2025-03-30 17:26:54,266:INFO:Starting cross validation
2025-03-30 17:26:54,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:26:57,739:INFO:Calculating mean and std
2025-03-30 17:26:57,740:INFO:Creating metrics dataframe
2025-03-30 17:26:57,742:INFO:Finalizing model
2025-03-30 17:26:57,778:INFO:Creating Dashboard logs
2025-03-30 17:26:57,778:INFO:Model: Logistic Regression
2025-03-30 17:26:57,834:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:26:57,957:INFO:Initializing predict_model()
2025-03-30 17:26:57,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E500B4F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E6FFE3940>)
2025-03-30 17:26:57,957:INFO:Checking exceptions
2025-03-30 17:26:57,957:INFO:Preloading libraries
2025-03-30 17:26:58,097:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:26:58,119:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:26:58,120:INFO:Uploading results into container
2025-03-30 17:26:58,121:INFO:Uploading model into container now
2025-03-30 17:26:58,127:INFO:_master_model_container: 1
2025-03-30 17:26:58,127:INFO:_display_container: 2
2025-03-30 17:26:58,128:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:26:58,128:INFO:create_model() successfully completed......................................
2025-03-30 17:26:58,208:INFO:Initializing create_model()
2025-03-30 17:26:58,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E500B4F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:26:58,208:INFO:Checking exceptions
2025-03-30 17:26:58,208:INFO:Importing libraries
2025-03-30 17:26:58,208:INFO:Copying training dataset
2025-03-30 17:26:58,217:INFO:Defining folds
2025-03-30 17:26:58,217:INFO:Declaring metric variables
2025-03-30 17:26:58,217:INFO:Importing untrained model
2025-03-30 17:26:58,217:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:26:58,217:INFO:Starting cross validation
2025-03-30 17:26:58,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:26:59,917:INFO:Calculating mean and std
2025-03-30 17:26:59,917:INFO:Creating metrics dataframe
2025-03-30 17:26:59,917:INFO:Finalizing model
2025-03-30 17:26:59,941:INFO:Creating Dashboard logs
2025-03-30 17:26:59,941:INFO:Model: Decision Tree Classifier
2025-03-30 17:26:59,997:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:27:00,140:INFO:Initializing predict_model()
2025-03-30 17:27:00,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E500B4F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E6EA1C8B0>)
2025-03-30 17:27:00,140:INFO:Checking exceptions
2025-03-30 17:27:00,140:INFO:Preloading libraries
2025-03-30 17:27:00,276:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:27:00,276:INFO:Uploading results into container
2025-03-30 17:27:00,276:INFO:Uploading model into container now
2025-03-30 17:27:00,293:INFO:_master_model_container: 2
2025-03-30 17:27:00,293:INFO:_display_container: 3
2025-03-30 17:27:00,293:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:27:00,293:INFO:create_model() successfully completed......................................
2025-03-30 17:27:00,387:INFO:Initializing save_model()
2025-03-30 17:27:00,387:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:27:00,387:INFO:Adding model into prep_pipe
2025-03-30 17:27:00,390:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:27:00,394:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:27:00,394:INFO:save_model() successfully completed......................................
2025-03-30 17:27:03,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:27:03,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:27:03,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:27:03,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:27:04,491:INFO:Initializing load_model()
2025-03-30 17:27:04,491:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:30:50,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:30:50,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:30:50,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:30:50,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:30:51,796:INFO:PyCaret ClassificationExperiment
2025-03-30 17:30:51,796:INFO:Logging name: Treinamento
2025-03-30 17:30:51,796:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:30:51,796:INFO:version 3.3.2
2025-03-30 17:30:51,796:INFO:Initializing setup()
2025-03-30 17:30:51,796:INFO:self.USI: 3831
2025-03-30 17:30:51,796:INFO:self._variable_keys: {'n_jobs_param', 'X_train', 'idx', 'html_param', 'fold_groups_param', 'fold_generator', 'is_multiclass', 'logging_param', 'fix_imbalance', '_ml_usecase', 'gpu_n_jobs_param', 'y', 'fold_shuffle_param', 'y_test', 'exp_name_log', 'USI', 'y_train', 'X', 'log_plots_param', 'target_param', 'exp_id', 'data', 'X_test', '_available_plots', 'gpu_param', 'memory', 'pipeline', 'seed'}
2025-03-30 17:30:51,796:INFO:Checking environment
2025-03-30 17:30:51,796:INFO:python_version: 3.9.21
2025-03-30 17:30:51,796:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:30:51,796:INFO:machine: AMD64
2025-03-30 17:30:51,813:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:30:51,823:INFO:Memory: svmem(total=33685155840, available=22091911168, percent=34.4, used=11593244672, free=22091911168)
2025-03-30 17:30:51,823:INFO:Physical Core: 6
2025-03-30 17:30:51,823:INFO:Logical Core: 12
2025-03-30 17:30:51,823:INFO:Checking libraries
2025-03-30 17:30:51,823:INFO:System:
2025-03-30 17:30:51,823:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:30:51,823:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:30:51,823:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:30:51,823:INFO:PyCaret required dependencies:
2025-03-30 17:30:51,860:INFO:                 pip: 25.0
2025-03-30 17:30:51,860:INFO:          setuptools: 75.8.0
2025-03-30 17:30:51,860:INFO:             pycaret: 3.3.2
2025-03-30 17:30:51,860:INFO:             IPython: 8.18.1
2025-03-30 17:30:51,860:INFO:          ipywidgets: 8.1.5
2025-03-30 17:30:51,860:INFO:                tqdm: 4.67.1
2025-03-30 17:30:51,860:INFO:               numpy: 1.26.4
2025-03-30 17:30:51,860:INFO:              pandas: 1.5.3
2025-03-30 17:30:51,860:INFO:              jinja2: 3.1.6
2025-03-30 17:30:51,860:INFO:               scipy: 1.11.4
2025-03-30 17:30:51,860:INFO:              joblib: 1.3.2
2025-03-30 17:30:51,860:INFO:             sklearn: 1.4.2
2025-03-30 17:30:51,860:INFO:                pyod: 2.0.3
2025-03-30 17:30:51,860:INFO:            imblearn: 0.12.4
2025-03-30 17:30:51,860:INFO:   category_encoders: 2.6.4
2025-03-30 17:30:51,860:INFO:            lightgbm: 4.6.0
2025-03-30 17:30:51,860:INFO:               numba: 0.60.0
2025-03-30 17:30:51,860:INFO:            requests: 2.32.3
2025-03-30 17:30:51,860:INFO:          matplotlib: 3.7.5
2025-03-30 17:30:51,860:INFO:          scikitplot: 0.3.7
2025-03-30 17:30:51,860:INFO:         yellowbrick: 1.5
2025-03-30 17:30:51,860:INFO:              plotly: 5.24.1
2025-03-30 17:30:51,860:INFO:    plotly-resampler: Not installed
2025-03-30 17:30:51,860:INFO:             kaleido: 0.2.1
2025-03-30 17:30:51,860:INFO:           schemdraw: 0.15
2025-03-30 17:30:51,860:INFO:         statsmodels: 0.14.4
2025-03-30 17:30:51,860:INFO:              sktime: 0.26.0
2025-03-30 17:30:51,860:INFO:               tbats: 1.1.3
2025-03-30 17:30:51,860:INFO:            pmdarima: 2.0.4
2025-03-30 17:30:51,860:INFO:              psutil: 7.0.0
2025-03-30 17:30:51,860:INFO:          markupsafe: 3.0.2
2025-03-30 17:30:51,860:INFO:             pickle5: Not installed
2025-03-30 17:30:51,860:INFO:         cloudpickle: 2.2.1
2025-03-30 17:30:51,860:INFO:         deprecation: 2.1.0
2025-03-30 17:30:51,860:INFO:              xxhash: 3.5.0
2025-03-30 17:30:51,860:INFO:           wurlitzer: Not installed
2025-03-30 17:30:51,860:INFO:PyCaret optional dependencies:
2025-03-30 17:30:52,174:INFO:                shap: 0.47.1
2025-03-30 17:30:52,174:INFO:           interpret: Not installed
2025-03-30 17:30:52,174:INFO:                umap: Not installed
2025-03-30 17:30:52,174:INFO:     ydata_profiling: Not installed
2025-03-30 17:30:52,174:INFO:  explainerdashboard: Not installed
2025-03-30 17:30:52,174:INFO:             autoviz: Not installed
2025-03-30 17:30:52,174:INFO:           fairlearn: Not installed
2025-03-30 17:30:52,174:INFO:          deepchecks: Not installed
2025-03-30 17:30:52,174:INFO:             xgboost: Not installed
2025-03-30 17:30:52,174:INFO:            catboost: Not installed
2025-03-30 17:30:52,174:INFO:              kmodes: Not installed
2025-03-30 17:30:52,174:INFO:             mlxtend: Not installed
2025-03-30 17:30:52,174:INFO:       statsforecast: Not installed
2025-03-30 17:30:52,174:INFO:        tune_sklearn: Not installed
2025-03-30 17:30:52,174:INFO:                 ray: Not installed
2025-03-30 17:30:52,174:INFO:            hyperopt: Not installed
2025-03-30 17:30:52,174:INFO:              optuna: Not installed
2025-03-30 17:30:52,174:INFO:               skopt: Not installed
2025-03-30 17:30:52,174:INFO:              mlflow: 2.21.0
2025-03-30 17:30:52,174:INFO:              gradio: Not installed
2025-03-30 17:30:52,174:INFO:             fastapi: 0.115.11
2025-03-30 17:30:52,174:INFO:             uvicorn: 0.34.0
2025-03-30 17:30:52,174:INFO:              m2cgen: Not installed
2025-03-30 17:30:52,174:INFO:           evidently: Not installed
2025-03-30 17:30:52,174:INFO:               fugue: Not installed
2025-03-30 17:30:52,174:INFO:           streamlit: 1.43.2
2025-03-30 17:30:52,174:INFO:             prophet: Not installed
2025-03-30 17:30:52,174:INFO:None
2025-03-30 17:30:52,174:INFO:Set up data.
2025-03-30 17:30:52,174:INFO:Set up folding strategy.
2025-03-30 17:30:52,174:INFO:Set up train/test split.
2025-03-30 17:30:52,190:INFO:Set up index.
2025-03-30 17:30:52,190:INFO:Assigning column types.
2025-03-30 17:30:52,190:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:30:52,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,285:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,301:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:30:52,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,382:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:30:52,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,398:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:30:52,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,508:INFO:Preparing preprocessing pipeline...
2025-03-30 17:30:52,508:INFO:Set up simple imputation.
2025-03-30 17:30:52,525:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:30:52,525:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:30:52,525:INFO:Creating final display dataframe.
2025-03-30 17:30:52,556:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             3831
2025-03-30 17:30:52,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:30:52,679:INFO:Logging experiment in loggers
2025-03-30 17:30:52,754:INFO:SubProcess save_model() called ==================================
2025-03-30 17:30:52,754:INFO:Initializing save_model()
2025-03-30 17:30:52,754:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpy303yd8q\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:30:52,754:INFO:Adding model into prep_pipe
2025-03-30 17:30:52,754:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:30:52,754:INFO:C:\Users\Ian\AppData\Local\Temp\tmpy303yd8q\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:30:52,754:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:30:52,754:INFO:save_model() successfully completed......................................
2025-03-30 17:30:52,834:INFO:SubProcess save_model() end ==================================
2025-03-30 17:30:52,866:INFO:setup() successfully completed in 0.88s...............
2025-03-30 17:30:52,866:INFO:Initializing create_model()
2025-03-30 17:30:52,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BAD8B84F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:30:52,866:INFO:Checking exceptions
2025-03-30 17:30:52,875:INFO:Importing libraries
2025-03-30 17:30:52,875:INFO:Copying training dataset
2025-03-30 17:30:52,878:INFO:Defining folds
2025-03-30 17:30:52,878:INFO:Declaring metric variables
2025-03-30 17:30:52,878:INFO:Importing untrained model
2025-03-30 17:30:52,878:INFO:Logistic Regression Imported successfully
2025-03-30 17:30:52,878:INFO:Starting cross validation
2025-03-30 17:30:52,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:30:56,474:INFO:Calculating mean and std
2025-03-30 17:30:56,474:INFO:Creating metrics dataframe
2025-03-30 17:30:56,474:INFO:Finalizing model
2025-03-30 17:30:56,525:INFO:Creating Dashboard logs
2025-03-30 17:30:56,525:INFO:Model: Logistic Regression
2025-03-30 17:30:56,574:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:30:56,707:INFO:Initializing predict_model()
2025-03-30 17:30:56,707:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BAD8B84F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8A94940>)
2025-03-30 17:30:56,707:INFO:Checking exceptions
2025-03-30 17:30:56,707:INFO:Preloading libraries
2025-03-30 17:30:56,841:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:30:56,857:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:30:56,857:INFO:Uploading results into container
2025-03-30 17:30:56,857:INFO:Uploading model into container now
2025-03-30 17:30:56,874:INFO:_master_model_container: 1
2025-03-30 17:30:56,874:INFO:_display_container: 2
2025-03-30 17:30:56,874:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:30:56,874:INFO:create_model() successfully completed......................................
2025-03-30 17:30:56,957:INFO:Initializing create_model()
2025-03-30 17:30:56,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BAD8B84F10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:30:56,957:INFO:Checking exceptions
2025-03-30 17:30:56,957:INFO:Importing libraries
2025-03-30 17:30:56,957:INFO:Copying training dataset
2025-03-30 17:30:56,966:INFO:Defining folds
2025-03-30 17:30:56,966:INFO:Declaring metric variables
2025-03-30 17:30:56,966:INFO:Importing untrained model
2025-03-30 17:30:56,966:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:30:56,966:INFO:Starting cross validation
2025-03-30 17:30:56,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:30:58,656:INFO:Calculating mean and std
2025-03-30 17:30:58,656:INFO:Creating metrics dataframe
2025-03-30 17:30:58,658:INFO:Finalizing model
2025-03-30 17:30:58,679:INFO:Creating Dashboard logs
2025-03-30 17:30:58,679:INFO:Model: Decision Tree Classifier
2025-03-30 17:30:58,747:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:30:58,869:INFO:Initializing predict_model()
2025-03-30 17:30:58,869:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BAD8B84F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF74CC8B0>)
2025-03-30 17:30:58,869:INFO:Checking exceptions
2025-03-30 17:30:58,869:INFO:Preloading libraries
2025-03-30 17:30:59,018:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:30:59,018:INFO:Uploading results into container
2025-03-30 17:30:59,018:INFO:Uploading model into container now
2025-03-30 17:30:59,032:INFO:_master_model_container: 2
2025-03-30 17:30:59,032:INFO:_display_container: 3
2025-03-30 17:30:59,034:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:30:59,034:INFO:create_model() successfully completed......................................
2025-03-30 17:30:59,140:INFO:Initializing save_model()
2025-03-30 17:30:59,140:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:30:59,140:INFO:Adding model into prep_pipe
2025-03-30 17:30:59,144:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:30:59,147:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=42,
                                        splitter='best'))],
         verbose=False)
2025-03-30 17:30:59,147:INFO:save_model() successfully completed......................................
2025-03-30 17:31:02,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:02,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:02,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:02,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:03,191:INFO:Initializing load_model()
2025-03-30 17:31:03,191:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:31:15,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:15,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:15,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:15,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:31:16,628:INFO:Initializing load_model()
2025-03-30 17:31:16,628:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:33:00,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:33:00,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:33:00,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:33:00,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:33:01,326:INFO:Initializing load_model()
2025-03-30 17:33:01,326:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:34:48,149:INFO:Initializing load_model()
2025-03-30 17:34:48,149:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:44:45,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:44:45,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:44:45,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:44:45,157:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:45:43,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:45:43,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:45:43,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:45:43,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:31,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:31,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:31,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:31,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:31,925:INFO:PyCaret ClassificationExperiment
2025-03-30 17:47:31,925:INFO:Logging name: Treinamento
2025-03-30 17:47:31,925:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:47:31,925:INFO:version 3.3.2
2025-03-30 17:47:31,925:INFO:Initializing setup()
2025-03-30 17:47:31,925:INFO:self.USI: bbea
2025-03-30 17:47:31,925:INFO:self._variable_keys: {'exp_id', 'X_test', '_ml_usecase', 'logging_param', 'seed', 'target_param', 'y_train', 'n_jobs_param', 'fold_groups_param', 'data', 'html_param', 'fix_imbalance', 'pipeline', 'idx', 'log_plots_param', 'X_train', 'X', 'USI', 'memory', 'fold_shuffle_param', 'fold_generator', 'y_test', 'gpu_n_jobs_param', 'exp_name_log', '_available_plots', 'y', 'is_multiclass', 'gpu_param'}
2025-03-30 17:47:31,925:INFO:Checking environment
2025-03-30 17:47:31,925:INFO:python_version: 3.9.21
2025-03-30 17:47:31,925:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:47:31,925:INFO:machine: AMD64
2025-03-30 17:47:31,945:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:47:31,945:INFO:Memory: svmem(total=33685155840, available=21951877120, percent=34.8, used=11733278720, free=21951877120)
2025-03-30 17:47:31,945:INFO:Physical Core: 6
2025-03-30 17:47:31,945:INFO:Logical Core: 12
2025-03-30 17:47:31,945:INFO:Checking libraries
2025-03-30 17:47:31,945:INFO:System:
2025-03-30 17:47:31,945:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:47:31,945:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:47:31,956:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:47:31,956:INFO:PyCaret required dependencies:
2025-03-30 17:47:31,991:INFO:                 pip: 25.0
2025-03-30 17:47:31,991:INFO:          setuptools: 75.8.0
2025-03-30 17:47:31,991:INFO:             pycaret: 3.3.2
2025-03-30 17:47:31,991:INFO:             IPython: 8.18.1
2025-03-30 17:47:31,991:INFO:          ipywidgets: 8.1.5
2025-03-30 17:47:31,991:INFO:                tqdm: 4.67.1
2025-03-30 17:47:31,991:INFO:               numpy: 1.26.4
2025-03-30 17:47:31,991:INFO:              pandas: 1.5.3
2025-03-30 17:47:31,991:INFO:              jinja2: 3.1.6
2025-03-30 17:47:31,991:INFO:               scipy: 1.11.4
2025-03-30 17:47:31,991:INFO:              joblib: 1.3.2
2025-03-30 17:47:31,991:INFO:             sklearn: 1.4.2
2025-03-30 17:47:31,991:INFO:                pyod: 2.0.3
2025-03-30 17:47:31,991:INFO:            imblearn: 0.12.4
2025-03-30 17:47:31,991:INFO:   category_encoders: 2.6.4
2025-03-30 17:47:31,991:INFO:            lightgbm: 4.6.0
2025-03-30 17:47:31,991:INFO:               numba: 0.60.0
2025-03-30 17:47:31,991:INFO:            requests: 2.32.3
2025-03-30 17:47:31,991:INFO:          matplotlib: 3.7.5
2025-03-30 17:47:31,991:INFO:          scikitplot: 0.3.7
2025-03-30 17:47:31,991:INFO:         yellowbrick: 1.5
2025-03-30 17:47:31,991:INFO:              plotly: 5.24.1
2025-03-30 17:47:31,991:INFO:    plotly-resampler: Not installed
2025-03-30 17:47:31,991:INFO:             kaleido: 0.2.1
2025-03-30 17:47:31,991:INFO:           schemdraw: 0.15
2025-03-30 17:47:31,991:INFO:         statsmodels: 0.14.4
2025-03-30 17:47:31,991:INFO:              sktime: 0.26.0
2025-03-30 17:47:31,991:INFO:               tbats: 1.1.3
2025-03-30 17:47:31,991:INFO:            pmdarima: 2.0.4
2025-03-30 17:47:31,991:INFO:              psutil: 7.0.0
2025-03-30 17:47:31,991:INFO:          markupsafe: 3.0.2
2025-03-30 17:47:31,991:INFO:             pickle5: Not installed
2025-03-30 17:47:31,991:INFO:         cloudpickle: 2.2.1
2025-03-30 17:47:31,991:INFO:         deprecation: 2.1.0
2025-03-30 17:47:31,991:INFO:              xxhash: 3.5.0
2025-03-30 17:47:31,991:INFO:           wurlitzer: Not installed
2025-03-30 17:47:31,991:INFO:PyCaret optional dependencies:
2025-03-30 17:47:32,307:INFO:                shap: 0.47.1
2025-03-30 17:47:32,307:INFO:           interpret: Not installed
2025-03-30 17:47:32,307:INFO:                umap: Not installed
2025-03-30 17:47:32,307:INFO:     ydata_profiling: Not installed
2025-03-30 17:47:32,307:INFO:  explainerdashboard: Not installed
2025-03-30 17:47:32,307:INFO:             autoviz: Not installed
2025-03-30 17:47:32,307:INFO:           fairlearn: Not installed
2025-03-30 17:47:32,307:INFO:          deepchecks: Not installed
2025-03-30 17:47:32,307:INFO:             xgboost: Not installed
2025-03-30 17:47:32,307:INFO:            catboost: Not installed
2025-03-30 17:47:32,307:INFO:              kmodes: Not installed
2025-03-30 17:47:32,307:INFO:             mlxtend: Not installed
2025-03-30 17:47:32,307:INFO:       statsforecast: Not installed
2025-03-30 17:47:32,307:INFO:        tune_sklearn: Not installed
2025-03-30 17:47:32,307:INFO:                 ray: Not installed
2025-03-30 17:47:32,307:INFO:            hyperopt: Not installed
2025-03-30 17:47:32,307:INFO:              optuna: Not installed
2025-03-30 17:47:32,307:INFO:               skopt: Not installed
2025-03-30 17:47:32,307:INFO:              mlflow: 2.21.0
2025-03-30 17:47:32,307:INFO:              gradio: Not installed
2025-03-30 17:47:32,307:INFO:             fastapi: 0.115.11
2025-03-30 17:47:32,307:INFO:             uvicorn: 0.34.0
2025-03-30 17:47:32,307:INFO:              m2cgen: Not installed
2025-03-30 17:47:32,307:INFO:           evidently: Not installed
2025-03-30 17:47:32,307:INFO:               fugue: Not installed
2025-03-30 17:47:32,307:INFO:           streamlit: 1.43.2
2025-03-30 17:47:32,307:INFO:             prophet: Not installed
2025-03-30 17:47:32,307:INFO:None
2025-03-30 17:47:32,307:INFO:Set up data.
2025-03-30 17:47:32,310:INFO:Set up folding strategy.
2025-03-30 17:47:32,310:INFO:Set up train/test split.
2025-03-30 17:47:32,310:INFO:Set up index.
2025-03-30 17:47:32,310:INFO:Assigning column types.
2025-03-30 17:47:32,310:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:47:32,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,427:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:47:32,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:32,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,539:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:47:32,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,637:INFO:Preparing preprocessing pipeline...
2025-03-30 17:47:32,637:INFO:Set up simple imputation.
2025-03-30 17:47:32,652:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:47:32,652:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:47:32,652:INFO:Creating final display dataframe.
2025-03-30 17:47:32,700:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             bbea
2025-03-30 17:47:32,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:32,795:INFO:Logging experiment in loggers
2025-03-30 17:47:33,035:INFO:SubProcess save_model() called ==================================
2025-03-30 17:47:33,039:INFO:Initializing save_model()
2025-03-30 17:47:33,039:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmprcac7pfp\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:47:33,039:INFO:Adding model into prep_pipe
2025-03-30 17:47:33,039:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:47:33,043:INFO:C:\Users\Ian\AppData\Local\Temp\tmprcac7pfp\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:47:33,046:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:47:33,046:INFO:save_model() successfully completed......................................
2025-03-30 17:47:33,121:INFO:SubProcess save_model() end ==================================
2025-03-30 17:47:33,153:INFO:setup() successfully completed in 0.87s...............
2025-03-30 17:47:33,153:INFO:Initializing create_model()
2025-03-30 17:47:33,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:47:33,153:INFO:Checking exceptions
2025-03-30 17:47:33,153:INFO:Importing libraries
2025-03-30 17:47:33,153:INFO:Copying training dataset
2025-03-30 17:47:33,153:INFO:Defining folds
2025-03-30 17:47:33,153:INFO:Declaring metric variables
2025-03-30 17:47:33,153:INFO:Importing untrained model
2025-03-30 17:47:33,153:INFO:Logistic Regression Imported successfully
2025-03-30 17:47:33,153:INFO:Starting cross validation
2025-03-30 17:47:33,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:47:36,705:INFO:Calculating mean and std
2025-03-30 17:47:36,707:INFO:Creating metrics dataframe
2025-03-30 17:47:36,707:INFO:Finalizing model
2025-03-30 17:47:36,742:INFO:Creating Dashboard logs
2025-03-30 17:47:36,742:INFO:Model: Logistic Regression
2025-03-30 17:47:36,798:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:47:36,938:INFO:Initializing predict_model()
2025-03-30 17:47:36,938:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E007A749D0>)
2025-03-30 17:47:36,938:INFO:Checking exceptions
2025-03-30 17:47:36,938:INFO:Preloading libraries
2025-03-30 17:47:37,076:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:47:37,090:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:47:37,090:INFO:Uploading results into container
2025-03-30 17:47:37,090:INFO:Uploading model into container now
2025-03-30 17:47:37,103:INFO:_master_model_container: 1
2025-03-30 17:47:37,103:INFO:_display_container: 2
2025-03-30 17:47:37,103:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:47:37,103:INFO:create_model() successfully completed......................................
2025-03-30 17:47:37,189:INFO:Initializing calibrate_model()
2025-03-30 17:47:37,189:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:47:37,189:INFO:Checking exceptions
2025-03-30 17:47:37,190:INFO:Preloading libraries
2025-03-30 17:47:37,190:INFO:Preparing display monitor
2025-03-30 17:47:37,190:INFO:Getting model name
2025-03-30 17:47:37,190:INFO:Base model : Logistic Regression
2025-03-30 17:47:37,190:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:47:37,190:INFO:SubProcess create_model() called ==================================
2025-03-30 17:47:37,190:INFO:Initializing create_model()
2025-03-30 17:47:37,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0062F1B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:47:37,190:INFO:Checking exceptions
2025-03-30 17:47:37,190:INFO:Importing libraries
2025-03-30 17:47:37,190:INFO:Copying training dataset
2025-03-30 17:47:37,196:INFO:Defining folds
2025-03-30 17:47:37,196:INFO:Declaring metric variables
2025-03-30 17:47:37,196:INFO:Importing untrained model
2025-03-30 17:47:37,196:INFO:Declaring custom model
2025-03-30 17:47:37,196:INFO:Logistic Regression Imported successfully
2025-03-30 17:47:37,196:INFO:Starting cross validation
2025-03-30 17:47:37,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:47:39,019:INFO:Calculating mean and std
2025-03-30 17:47:39,019:INFO:Creating metrics dataframe
2025-03-30 17:47:39,019:INFO:Finalizing model
2025-03-30 17:47:39,159:INFO:Uploading results into container
2025-03-30 17:47:39,159:INFO:Uploading model into container now
2025-03-30 17:47:39,159:INFO:_master_model_container: 2
2025-03-30 17:47:39,159:INFO:_display_container: 3
2025-03-30 17:47:39,159:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:47:39,159:INFO:create_model() successfully completed......................................
2025-03-30 17:47:39,240:INFO:SubProcess create_model() end ==================================
2025-03-30 17:47:39,240:INFO:Creating Dashboard logs
2025-03-30 17:47:39,240:INFO:Model: Logistic Regression
2025-03-30 17:47:39,294:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:47:39,438:INFO:Initializing predict_model()
2025-03-30 17:47:39,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E007C04B80>)
2025-03-30 17:47:39,438:INFO:Checking exceptions
2025-03-30 17:47:39,438:INFO:Preloading libraries
2025-03-30 17:47:39,607:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:47:39,613:INFO:_master_model_container: 2
2025-03-30 17:47:39,613:INFO:_display_container: 3
2025-03-30 17:47:39,615:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:47:39,615:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:47:39,703:INFO:Initializing finalize_model()
2025-03-30 17:47:39,703:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:47:39,704:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:47:39,706:INFO:Initializing create_model()
2025-03-30 17:47:39,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:47:39,706:INFO:Checking exceptions
2025-03-30 17:47:39,707:INFO:Importing libraries
2025-03-30 17:47:39,707:INFO:Copying training dataset
2025-03-30 17:47:39,707:INFO:Defining folds
2025-03-30 17:47:39,707:INFO:Declaring metric variables
2025-03-30 17:47:39,707:INFO:Importing untrained model
2025-03-30 17:47:39,707:INFO:Declaring custom model
2025-03-30 17:47:39,707:INFO:Logistic Regression Imported successfully
2025-03-30 17:47:39,708:INFO:Cross validation set to False
2025-03-30 17:47:39,708:INFO:Fitting Model
2025-03-30 17:47:39,865:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:47:39,865:INFO:create_model() successfully completed......................................
2025-03-30 17:47:39,958:INFO:Creating Dashboard logs
2025-03-30 17:47:39,958:INFO:Model: Logistic Regression
2025-03-30 17:47:40,006:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:47:40,137:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:47:40,137:INFO:_master_model_container: 2
2025-03-30 17:47:40,137:INFO:_display_container: 3
2025-03-30 17:47:40,141:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:47:40,141:INFO:finalize_model() successfully completed......................................
2025-03-30 17:47:40,223:INFO:Initializing predict_model()
2025-03-30 17:47:40,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E005FF7A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E007AC8EE0>)
2025-03-30 17:47:40,223:INFO:Checking exceptions
2025-03-30 17:47:40,223:INFO:Preloading libraries
2025-03-30 17:47:40,223:INFO:Set up data.
2025-03-30 17:47:40,223:INFO:Set up index.
2025-03-30 17:47:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:54,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:47:55,224:INFO:PyCaret ClassificationExperiment
2025-03-30 17:47:55,224:INFO:Logging name: Treinamento
2025-03-30 17:47:55,224:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:47:55,224:INFO:version 3.3.2
2025-03-30 17:47:55,224:INFO:Initializing setup()
2025-03-30 17:47:55,224:INFO:self.USI: f3a3
2025-03-30 17:47:55,224:INFO:self._variable_keys: {'gpu_param', 'y', 'X_test', 'memory', 'X', 'target_param', 'fold_groups_param', '_available_plots', 'log_plots_param', 'X_train', 'fold_generator', 'fold_shuffle_param', 'seed', 'y_train', 'exp_id', '_ml_usecase', 'data', 'USI', 'exp_name_log', 'pipeline', 'fix_imbalance', 'idx', 'gpu_n_jobs_param', 'n_jobs_param', 'is_multiclass', 'html_param', 'y_test', 'logging_param'}
2025-03-30 17:47:55,224:INFO:Checking environment
2025-03-30 17:47:55,224:INFO:python_version: 3.9.21
2025-03-30 17:47:55,224:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:47:55,224:INFO:machine: AMD64
2025-03-30 17:47:55,247:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:47:55,251:INFO:Memory: svmem(total=33685155840, available=21947064320, percent=34.8, used=11738091520, free=21947064320)
2025-03-30 17:47:55,251:INFO:Physical Core: 6
2025-03-30 17:47:55,251:INFO:Logical Core: 12
2025-03-30 17:47:55,251:INFO:Checking libraries
2025-03-30 17:47:55,251:INFO:System:
2025-03-30 17:47:55,251:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:47:55,251:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:47:55,251:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:47:55,251:INFO:PyCaret required dependencies:
2025-03-30 17:47:55,274:INFO:                 pip: 25.0
2025-03-30 17:47:55,274:INFO:          setuptools: 75.8.0
2025-03-30 17:47:55,274:INFO:             pycaret: 3.3.2
2025-03-30 17:47:55,274:INFO:             IPython: 8.18.1
2025-03-30 17:47:55,274:INFO:          ipywidgets: 8.1.5
2025-03-30 17:47:55,274:INFO:                tqdm: 4.67.1
2025-03-30 17:47:55,274:INFO:               numpy: 1.26.4
2025-03-30 17:47:55,274:INFO:              pandas: 1.5.3
2025-03-30 17:47:55,274:INFO:              jinja2: 3.1.6
2025-03-30 17:47:55,274:INFO:               scipy: 1.11.4
2025-03-30 17:47:55,274:INFO:              joblib: 1.3.2
2025-03-30 17:47:55,274:INFO:             sklearn: 1.4.2
2025-03-30 17:47:55,274:INFO:                pyod: 2.0.3
2025-03-30 17:47:55,274:INFO:            imblearn: 0.12.4
2025-03-30 17:47:55,274:INFO:   category_encoders: 2.6.4
2025-03-30 17:47:55,274:INFO:            lightgbm: 4.6.0
2025-03-30 17:47:55,274:INFO:               numba: 0.60.0
2025-03-30 17:47:55,274:INFO:            requests: 2.32.3
2025-03-30 17:47:55,274:INFO:          matplotlib: 3.7.5
2025-03-30 17:47:55,274:INFO:          scikitplot: 0.3.7
2025-03-30 17:47:55,274:INFO:         yellowbrick: 1.5
2025-03-30 17:47:55,274:INFO:              plotly: 5.24.1
2025-03-30 17:47:55,274:INFO:    plotly-resampler: Not installed
2025-03-30 17:47:55,274:INFO:             kaleido: 0.2.1
2025-03-30 17:47:55,274:INFO:           schemdraw: 0.15
2025-03-30 17:47:55,274:INFO:         statsmodels: 0.14.4
2025-03-30 17:47:55,274:INFO:              sktime: 0.26.0
2025-03-30 17:47:55,274:INFO:               tbats: 1.1.3
2025-03-30 17:47:55,274:INFO:            pmdarima: 2.0.4
2025-03-30 17:47:55,274:INFO:              psutil: 7.0.0
2025-03-30 17:47:55,274:INFO:          markupsafe: 3.0.2
2025-03-30 17:47:55,274:INFO:             pickle5: Not installed
2025-03-30 17:47:55,274:INFO:         cloudpickle: 2.2.1
2025-03-30 17:47:55,274:INFO:         deprecation: 2.1.0
2025-03-30 17:47:55,274:INFO:              xxhash: 3.5.0
2025-03-30 17:47:55,274:INFO:           wurlitzer: Not installed
2025-03-30 17:47:55,274:INFO:PyCaret optional dependencies:
2025-03-30 17:47:55,591:INFO:                shap: 0.47.1
2025-03-30 17:47:55,591:INFO:           interpret: Not installed
2025-03-30 17:47:55,591:INFO:                umap: Not installed
2025-03-30 17:47:55,591:INFO:     ydata_profiling: Not installed
2025-03-30 17:47:55,591:INFO:  explainerdashboard: Not installed
2025-03-30 17:47:55,591:INFO:             autoviz: Not installed
2025-03-30 17:47:55,591:INFO:           fairlearn: Not installed
2025-03-30 17:47:55,591:INFO:          deepchecks: Not installed
2025-03-30 17:47:55,591:INFO:             xgboost: Not installed
2025-03-30 17:47:55,591:INFO:            catboost: Not installed
2025-03-30 17:47:55,591:INFO:              kmodes: Not installed
2025-03-30 17:47:55,591:INFO:             mlxtend: Not installed
2025-03-30 17:47:55,591:INFO:       statsforecast: Not installed
2025-03-30 17:47:55,591:INFO:        tune_sklearn: Not installed
2025-03-30 17:47:55,591:INFO:                 ray: Not installed
2025-03-30 17:47:55,591:INFO:            hyperopt: Not installed
2025-03-30 17:47:55,591:INFO:              optuna: Not installed
2025-03-30 17:47:55,591:INFO:               skopt: Not installed
2025-03-30 17:47:55,591:INFO:              mlflow: 2.21.0
2025-03-30 17:47:55,591:INFO:              gradio: Not installed
2025-03-30 17:47:55,591:INFO:             fastapi: 0.115.11
2025-03-30 17:47:55,591:INFO:             uvicorn: 0.34.0
2025-03-30 17:47:55,591:INFO:              m2cgen: Not installed
2025-03-30 17:47:55,591:INFO:           evidently: Not installed
2025-03-30 17:47:55,591:INFO:               fugue: Not installed
2025-03-30 17:47:55,591:INFO:           streamlit: 1.43.2
2025-03-30 17:47:55,591:INFO:             prophet: Not installed
2025-03-30 17:47:55,591:INFO:None
2025-03-30 17:47:55,591:INFO:Set up data.
2025-03-30 17:47:55,608:INFO:Set up folding strategy.
2025-03-30 17:47:55,608:INFO:Set up train/test split.
2025-03-30 17:47:55,609:INFO:Set up index.
2025-03-30 17:47:55,609:INFO:Assigning column types.
2025-03-30 17:47:55,609:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:47:55,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,727:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:47:55,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,806:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:47:55,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,822:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:47:55,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:55,919:INFO:Preparing preprocessing pipeline...
2025-03-30 17:47:55,919:INFO:Set up simple imputation.
2025-03-30 17:47:55,935:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:47:55,947:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:47:55,947:INFO:Creating final display dataframe.
2025-03-30 17:47:55,983:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             f3a3
2025-03-30 17:47:56,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:56,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:56,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:56,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:47:56,093:INFO:Logging experiment in loggers
2025-03-30 17:47:56,323:INFO:SubProcess save_model() called ==================================
2025-03-30 17:47:56,323:INFO:Initializing save_model()
2025-03-30 17:47:56,323:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmphz2141q4\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:47:56,323:INFO:Adding model into prep_pipe
2025-03-30 17:47:56,323:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:47:56,338:INFO:C:\Users\Ian\AppData\Local\Temp\tmphz2141q4\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:47:56,338:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:47:56,338:INFO:save_model() successfully completed......................................
2025-03-30 17:47:56,421:INFO:SubProcess save_model() end ==================================
2025-03-30 17:47:56,452:INFO:setup() successfully completed in 0.87s...............
2025-03-30 17:47:56,452:INFO:Initializing create_model()
2025-03-30 17:47:56,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:47:56,452:INFO:Checking exceptions
2025-03-30 17:47:56,452:INFO:Importing libraries
2025-03-30 17:47:56,452:INFO:Copying training dataset
2025-03-30 17:47:56,452:INFO:Defining folds
2025-03-30 17:47:56,452:INFO:Declaring metric variables
2025-03-30 17:47:56,452:INFO:Importing untrained model
2025-03-30 17:47:56,452:INFO:Logistic Regression Imported successfully
2025-03-30 17:47:56,452:INFO:Starting cross validation
2025-03-30 17:47:56,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:47:59,995:INFO:Calculating mean and std
2025-03-30 17:48:00,022:INFO:Creating metrics dataframe
2025-03-30 17:48:00,027:INFO:Finalizing model
2025-03-30 17:48:00,057:INFO:Creating Dashboard logs
2025-03-30 17:48:00,057:INFO:Model: Logistic Regression
2025-03-30 17:48:00,106:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:48:00,251:INFO:Initializing predict_model()
2025-03-30 17:48:00,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002359A6E39D0>)
2025-03-30 17:48:00,251:INFO:Checking exceptions
2025-03-30 17:48:00,251:INFO:Preloading libraries
2025-03-30 17:48:00,390:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:48:00,407:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:48:00,407:INFO:Uploading results into container
2025-03-30 17:48:00,407:INFO:Uploading model into container now
2025-03-30 17:48:00,407:INFO:_master_model_container: 1
2025-03-30 17:48:00,407:INFO:_display_container: 2
2025-03-30 17:48:00,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:48:00,407:INFO:create_model() successfully completed......................................
2025-03-30 17:48:00,490:INFO:Initializing calibrate_model()
2025-03-30 17:48:00,490:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:48:00,490:INFO:Checking exceptions
2025-03-30 17:48:00,507:INFO:Preloading libraries
2025-03-30 17:48:00,507:INFO:Preparing display monitor
2025-03-30 17:48:00,507:INFO:Getting model name
2025-03-30 17:48:00,507:INFO:Base model : Logistic Regression
2025-03-30 17:48:00,507:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:48:00,507:INFO:SubProcess create_model() called ==================================
2025-03-30 17:48:00,507:INFO:Initializing create_model()
2025-03-30 17:48:00,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002359900F550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:48:00,507:INFO:Checking exceptions
2025-03-30 17:48:00,507:INFO:Importing libraries
2025-03-30 17:48:00,507:INFO:Copying training dataset
2025-03-30 17:48:00,507:INFO:Defining folds
2025-03-30 17:48:00,507:INFO:Declaring metric variables
2025-03-30 17:48:00,507:INFO:Importing untrained model
2025-03-30 17:48:00,507:INFO:Declaring custom model
2025-03-30 17:48:00,507:INFO:Logistic Regression Imported successfully
2025-03-30 17:48:00,507:INFO:Starting cross validation
2025-03-30 17:48:00,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:48:02,317:INFO:Calculating mean and std
2025-03-30 17:48:02,317:INFO:Creating metrics dataframe
2025-03-30 17:48:02,317:INFO:Finalizing model
2025-03-30 17:48:02,453:INFO:Uploading results into container
2025-03-30 17:48:02,453:INFO:Uploading model into container now
2025-03-30 17:48:02,453:INFO:_master_model_container: 2
2025-03-30 17:48:02,453:INFO:_display_container: 3
2025-03-30 17:48:02,453:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:48:02,453:INFO:create_model() successfully completed......................................
2025-03-30 17:48:02,540:INFO:SubProcess create_model() end ==================================
2025-03-30 17:48:02,540:INFO:Creating Dashboard logs
2025-03-30 17:48:02,540:INFO:Model: Logistic Regression
2025-03-30 17:48:02,595:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:48:02,736:INFO:Initializing predict_model()
2025-03-30 17:48:02,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002359A6E3790>)
2025-03-30 17:48:02,736:INFO:Checking exceptions
2025-03-30 17:48:02,736:INFO:Preloading libraries
2025-03-30 17:48:02,883:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:48:02,883:INFO:_master_model_container: 2
2025-03-30 17:48:02,883:INFO:_display_container: 3
2025-03-30 17:48:02,883:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:48:02,883:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:48:02,974:INFO:Initializing finalize_model()
2025-03-30 17:48:02,974:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:48:02,974:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:48:02,974:INFO:Initializing create_model()
2025-03-30 17:48:02,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:48:02,974:INFO:Checking exceptions
2025-03-30 17:48:02,974:INFO:Importing libraries
2025-03-30 17:48:02,974:INFO:Copying training dataset
2025-03-30 17:48:02,974:INFO:Defining folds
2025-03-30 17:48:02,974:INFO:Declaring metric variables
2025-03-30 17:48:02,974:INFO:Importing untrained model
2025-03-30 17:48:02,974:INFO:Declaring custom model
2025-03-30 17:48:02,974:INFO:Logistic Regression Imported successfully
2025-03-30 17:48:02,974:INFO:Cross validation set to False
2025-03-30 17:48:02,974:INFO:Fitting Model
2025-03-30 17:48:03,149:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:48:03,149:INFO:create_model() successfully completed......................................
2025-03-30 17:48:03,228:INFO:Creating Dashboard logs
2025-03-30 17:48:03,228:INFO:Model: Logistic Regression
2025-03-30 17:48:03,277:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:48:03,400:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:48:03,400:INFO:_master_model_container: 2
2025-03-30 17:48:03,400:INFO:_display_container: 3
2025-03-30 17:48:03,400:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:48:03,400:INFO:finalize_model() successfully completed......................................
2025-03-30 17:48:03,496:INFO:Initializing predict_model()
2025-03-30 17:48:03,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023598C57A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002359A737E50>)
2025-03-30 17:48:03,496:INFO:Checking exceptions
2025-03-30 17:48:03,496:INFO:Preloading libraries
2025-03-30 17:48:03,496:INFO:Set up data.
2025-03-30 17:48:03,496:INFO:Set up index.
2025-03-30 17:49:29,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:29,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:29,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:29,636:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:30,107:INFO:PyCaret ClassificationExperiment
2025-03-30 17:49:30,107:INFO:Logging name: Treinamento
2025-03-30 17:49:30,107:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:49:30,107:INFO:version 3.3.2
2025-03-30 17:49:30,107:INFO:Initializing setup()
2025-03-30 17:49:30,107:INFO:self.USI: d737
2025-03-30 17:49:30,107:INFO:self._variable_keys: {'X_train', 'target_param', 'gpu_n_jobs_param', 'exp_name_log', '_ml_usecase', 'idx', 'fold_generator', 'X_test', 'pipeline', 'y_train', 'y', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'memory', 'y_test', 'logging_param', '_available_plots', 'USI', 'fold_groups_param', 'n_jobs_param', 'is_multiclass', 'seed', 'html_param', 'X', 'exp_id', 'fold_shuffle_param', 'data'}
2025-03-30 17:49:30,107:INFO:Checking environment
2025-03-30 17:49:30,107:INFO:python_version: 3.9.21
2025-03-30 17:49:30,107:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:49:30,107:INFO:machine: AMD64
2025-03-30 17:49:30,128:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:49:30,128:INFO:Memory: svmem(total=33685155840, available=21981880320, percent=34.7, used=11703275520, free=21981880320)
2025-03-30 17:49:30,128:INFO:Physical Core: 6
2025-03-30 17:49:30,128:INFO:Logical Core: 12
2025-03-30 17:49:30,128:INFO:Checking libraries
2025-03-30 17:49:30,128:INFO:System:
2025-03-30 17:49:30,128:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:49:30,128:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:49:30,128:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:49:30,128:INFO:PyCaret required dependencies:
2025-03-30 17:49:30,157:INFO:                 pip: 25.0
2025-03-30 17:49:30,157:INFO:          setuptools: 75.8.0
2025-03-30 17:49:30,157:INFO:             pycaret: 3.3.2
2025-03-30 17:49:30,157:INFO:             IPython: 8.18.1
2025-03-30 17:49:30,157:INFO:          ipywidgets: 8.1.5
2025-03-30 17:49:30,157:INFO:                tqdm: 4.67.1
2025-03-30 17:49:30,157:INFO:               numpy: 1.26.4
2025-03-30 17:49:30,157:INFO:              pandas: 1.5.3
2025-03-30 17:49:30,157:INFO:              jinja2: 3.1.6
2025-03-30 17:49:30,157:INFO:               scipy: 1.11.4
2025-03-30 17:49:30,157:INFO:              joblib: 1.3.2
2025-03-30 17:49:30,157:INFO:             sklearn: 1.4.2
2025-03-30 17:49:30,157:INFO:                pyod: 2.0.3
2025-03-30 17:49:30,157:INFO:            imblearn: 0.12.4
2025-03-30 17:49:30,157:INFO:   category_encoders: 2.6.4
2025-03-30 17:49:30,157:INFO:            lightgbm: 4.6.0
2025-03-30 17:49:30,157:INFO:               numba: 0.60.0
2025-03-30 17:49:30,157:INFO:            requests: 2.32.3
2025-03-30 17:49:30,157:INFO:          matplotlib: 3.7.5
2025-03-30 17:49:30,157:INFO:          scikitplot: 0.3.7
2025-03-30 17:49:30,157:INFO:         yellowbrick: 1.5
2025-03-30 17:49:30,157:INFO:              plotly: 5.24.1
2025-03-30 17:49:30,157:INFO:    plotly-resampler: Not installed
2025-03-30 17:49:30,157:INFO:             kaleido: 0.2.1
2025-03-30 17:49:30,157:INFO:           schemdraw: 0.15
2025-03-30 17:49:30,157:INFO:         statsmodels: 0.14.4
2025-03-30 17:49:30,157:INFO:              sktime: 0.26.0
2025-03-30 17:49:30,157:INFO:               tbats: 1.1.3
2025-03-30 17:49:30,157:INFO:            pmdarima: 2.0.4
2025-03-30 17:49:30,157:INFO:              psutil: 7.0.0
2025-03-30 17:49:30,157:INFO:          markupsafe: 3.0.2
2025-03-30 17:49:30,157:INFO:             pickle5: Not installed
2025-03-30 17:49:30,157:INFO:         cloudpickle: 2.2.1
2025-03-30 17:49:30,157:INFO:         deprecation: 2.1.0
2025-03-30 17:49:30,157:INFO:              xxhash: 3.5.0
2025-03-30 17:49:30,157:INFO:           wurlitzer: Not installed
2025-03-30 17:49:30,157:INFO:PyCaret optional dependencies:
2025-03-30 17:49:30,474:INFO:                shap: 0.47.1
2025-03-30 17:49:30,474:INFO:           interpret: Not installed
2025-03-30 17:49:30,474:INFO:                umap: Not installed
2025-03-30 17:49:30,474:INFO:     ydata_profiling: Not installed
2025-03-30 17:49:30,474:INFO:  explainerdashboard: Not installed
2025-03-30 17:49:30,474:INFO:             autoviz: Not installed
2025-03-30 17:49:30,474:INFO:           fairlearn: Not installed
2025-03-30 17:49:30,474:INFO:          deepchecks: Not installed
2025-03-30 17:49:30,474:INFO:             xgboost: Not installed
2025-03-30 17:49:30,474:INFO:            catboost: Not installed
2025-03-30 17:49:30,474:INFO:              kmodes: Not installed
2025-03-30 17:49:30,474:INFO:             mlxtend: Not installed
2025-03-30 17:49:30,474:INFO:       statsforecast: Not installed
2025-03-30 17:49:30,474:INFO:        tune_sklearn: Not installed
2025-03-30 17:49:30,474:INFO:                 ray: Not installed
2025-03-30 17:49:30,474:INFO:            hyperopt: Not installed
2025-03-30 17:49:30,474:INFO:              optuna: Not installed
2025-03-30 17:49:30,474:INFO:               skopt: Not installed
2025-03-30 17:49:30,474:INFO:              mlflow: 2.21.0
2025-03-30 17:49:30,474:INFO:              gradio: Not installed
2025-03-30 17:49:30,474:INFO:             fastapi: 0.115.11
2025-03-30 17:49:30,474:INFO:             uvicorn: 0.34.0
2025-03-30 17:49:30,474:INFO:              m2cgen: Not installed
2025-03-30 17:49:30,474:INFO:           evidently: Not installed
2025-03-30 17:49:30,474:INFO:               fugue: Not installed
2025-03-30 17:49:30,474:INFO:           streamlit: 1.43.2
2025-03-30 17:49:30,474:INFO:             prophet: Not installed
2025-03-30 17:49:30,474:INFO:None
2025-03-30 17:49:30,474:INFO:Set up data.
2025-03-30 17:49:30,490:INFO:Set up folding strategy.
2025-03-30 17:49:30,490:INFO:Set up train/test split.
2025-03-30 17:49:30,490:INFO:Set up index.
2025-03-30 17:49:30,490:INFO:Assigning column types.
2025-03-30 17:49:30,490:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:49:30,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,607:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:49:30,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:30,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,706:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:49:30,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,801:INFO:Preparing preprocessing pipeline...
2025-03-30 17:49:30,801:INFO:Set up simple imputation.
2025-03-30 17:49:30,817:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:49:30,817:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:49:30,817:INFO:Creating final display dataframe.
2025-03-30 17:49:30,865:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             d737
2025-03-30 17:49:30,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:30,960:INFO:Logging experiment in loggers
2025-03-30 17:49:31,205:INFO:SubProcess save_model() called ==================================
2025-03-30 17:49:31,205:INFO:Initializing save_model()
2025-03-30 17:49:31,205:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpyz1dbon9\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:49:31,205:INFO:Adding model into prep_pipe
2025-03-30 17:49:31,205:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:49:31,205:INFO:C:\Users\Ian\AppData\Local\Temp\tmpyz1dbon9\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:49:31,205:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:49:31,205:INFO:save_model() successfully completed......................................
2025-03-30 17:49:31,284:INFO:SubProcess save_model() end ==================================
2025-03-30 17:49:31,316:INFO:setup() successfully completed in 0.85s...............
2025-03-30 17:49:31,316:INFO:Initializing create_model()
2025-03-30 17:49:31,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:49:31,316:INFO:Checking exceptions
2025-03-30 17:49:31,316:INFO:Importing libraries
2025-03-30 17:49:31,316:INFO:Copying training dataset
2025-03-30 17:49:31,316:INFO:Defining folds
2025-03-30 17:49:31,316:INFO:Declaring metric variables
2025-03-30 17:49:31,316:INFO:Importing untrained model
2025-03-30 17:49:31,316:INFO:Logistic Regression Imported successfully
2025-03-30 17:49:31,316:INFO:Starting cross validation
2025-03-30 17:49:31,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:49:34,855:INFO:Calculating mean and std
2025-03-30 17:49:34,856:INFO:Creating metrics dataframe
2025-03-30 17:49:34,856:INFO:Finalizing model
2025-03-30 17:49:34,890:INFO:Creating Dashboard logs
2025-03-30 17:49:34,890:INFO:Model: Logistic Regression
2025-03-30 17:49:34,965:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:49:35,090:INFO:Initializing predict_model()
2025-03-30 17:49:35,090:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000218C0444A60>)
2025-03-30 17:49:35,090:INFO:Checking exceptions
2025-03-30 17:49:35,090:INFO:Preloading libraries
2025-03-30 17:49:35,241:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:49:35,257:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:49:35,257:INFO:Uploading results into container
2025-03-30 17:49:35,257:INFO:Uploading model into container now
2025-03-30 17:49:35,257:INFO:_master_model_container: 1
2025-03-30 17:49:35,257:INFO:_display_container: 2
2025-03-30 17:49:35,257:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:49:35,257:INFO:create_model() successfully completed......................................
2025-03-30 17:49:35,342:INFO:Initializing calibrate_model()
2025-03-30 17:49:35,342:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:49:35,342:INFO:Checking exceptions
2025-03-30 17:49:35,342:INFO:Preloading libraries
2025-03-30 17:49:35,342:INFO:Preparing display monitor
2025-03-30 17:49:35,342:INFO:Getting model name
2025-03-30 17:49:35,342:INFO:Base model : Logistic Regression
2025-03-30 17:49:35,342:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:49:35,342:INFO:SubProcess create_model() called ==================================
2025-03-30 17:49:35,356:INFO:Initializing create_model()
2025-03-30 17:49:35,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021886463DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:49:35,357:INFO:Checking exceptions
2025-03-30 17:49:35,357:INFO:Importing libraries
2025-03-30 17:49:35,357:INFO:Copying training dataset
2025-03-30 17:49:35,357:INFO:Defining folds
2025-03-30 17:49:35,357:INFO:Declaring metric variables
2025-03-30 17:49:35,357:INFO:Importing untrained model
2025-03-30 17:49:35,357:INFO:Declaring custom model
2025-03-30 17:49:35,357:INFO:Logistic Regression Imported successfully
2025-03-30 17:49:35,357:INFO:Starting cross validation
2025-03-30 17:49:35,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:49:37,156:INFO:Calculating mean and std
2025-03-30 17:49:37,156:INFO:Creating metrics dataframe
2025-03-30 17:49:37,156:INFO:Finalizing model
2025-03-30 17:49:37,288:INFO:Uploading results into container
2025-03-30 17:49:37,288:INFO:Uploading model into container now
2025-03-30 17:49:37,288:INFO:_master_model_container: 2
2025-03-30 17:49:37,288:INFO:_display_container: 3
2025-03-30 17:49:37,288:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:49:37,288:INFO:create_model() successfully completed......................................
2025-03-30 17:49:37,373:INFO:SubProcess create_model() end ==================================
2025-03-30 17:49:37,373:INFO:Creating Dashboard logs
2025-03-30 17:49:37,373:INFO:Model: Logistic Regression
2025-03-30 17:49:37,428:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:49:37,568:INFO:Initializing predict_model()
2025-03-30 17:49:37,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000218C05D3C10>)
2025-03-30 17:49:37,568:INFO:Checking exceptions
2025-03-30 17:49:37,568:INFO:Preloading libraries
2025-03-30 17:49:37,721:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:49:37,728:INFO:_master_model_container: 2
2025-03-30 17:49:37,728:INFO:_display_container: 3
2025-03-30 17:49:37,728:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:49:37,728:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:49:37,815:INFO:Initializing finalize_model()
2025-03-30 17:49:37,815:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:49:37,816:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:49:37,818:INFO:Initializing create_model()
2025-03-30 17:49:37,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:49:37,818:INFO:Checking exceptions
2025-03-30 17:49:37,819:INFO:Importing libraries
2025-03-30 17:49:37,819:INFO:Copying training dataset
2025-03-30 17:49:37,819:INFO:Defining folds
2025-03-30 17:49:37,819:INFO:Declaring metric variables
2025-03-30 17:49:37,819:INFO:Importing untrained model
2025-03-30 17:49:37,819:INFO:Declaring custom model
2025-03-30 17:49:37,820:INFO:Logistic Regression Imported successfully
2025-03-30 17:49:37,820:INFO:Cross validation set to False
2025-03-30 17:49:37,820:INFO:Fitting Model
2025-03-30 17:49:37,981:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:49:37,981:INFO:create_model() successfully completed......................................
2025-03-30 17:49:38,072:INFO:Creating Dashboard logs
2025-03-30 17:49:38,074:INFO:Model: Logistic Regression
2025-03-30 17:49:38,117:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:49:38,244:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:49:38,244:INFO:_master_model_container: 2
2025-03-30 17:49:38,244:INFO:_display_container: 3
2025-03-30 17:49:38,244:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:49:38,244:INFO:finalize_model() successfully completed......................................
2025-03-30 17:49:38,323:INFO:Initializing predict_model()
2025-03-30 17:49:38,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218BE9C6D00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000218C0497EE0>)
2025-03-30 17:49:38,323:INFO:Checking exceptions
2025-03-30 17:49:38,323:INFO:Preloading libraries
2025-03-30 17:49:38,323:INFO:Set up data.
2025-03-30 17:49:38,339:INFO:Set up index.
2025-03-30 17:49:56,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:56,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:56,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:56,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:49:57,241:INFO:PyCaret ClassificationExperiment
2025-03-30 17:49:57,241:INFO:Logging name: Treinamento
2025-03-30 17:49:57,241:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:49:57,241:INFO:version 3.3.2
2025-03-30 17:49:57,241:INFO:Initializing setup()
2025-03-30 17:49:57,241:INFO:self.USI: 267e
2025-03-30 17:49:57,241:INFO:self._variable_keys: {'y_test', '_ml_usecase', 'html_param', 'y_train', 'fold_groups_param', 'y', 'log_plots_param', 'gpu_param', 'target_param', 'USI', 'fold_generator', 'seed', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'is_multiclass', 'data', 'X_train', 'memory', 'gpu_n_jobs_param', 'X', 'fix_imbalance', 'exp_name_log', 'idx', 'logging_param', '_available_plots', 'X_test', 'exp_id'}
2025-03-30 17:49:57,241:INFO:Checking environment
2025-03-30 17:49:57,241:INFO:python_version: 3.9.21
2025-03-30 17:49:57,241:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:49:57,241:INFO:machine: AMD64
2025-03-30 17:49:57,258:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:49:57,262:INFO:Memory: svmem(total=33685155840, available=21945536512, percent=34.9, used=11739619328, free=21945536512)
2025-03-30 17:49:57,262:INFO:Physical Core: 6
2025-03-30 17:49:57,262:INFO:Logical Core: 12
2025-03-30 17:49:57,262:INFO:Checking libraries
2025-03-30 17:49:57,262:INFO:System:
2025-03-30 17:49:57,262:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:49:57,262:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:49:57,262:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:49:57,262:INFO:PyCaret required dependencies:
2025-03-30 17:49:57,291:INFO:                 pip: 25.0
2025-03-30 17:49:57,291:INFO:          setuptools: 75.8.0
2025-03-30 17:49:57,291:INFO:             pycaret: 3.3.2
2025-03-30 17:49:57,291:INFO:             IPython: 8.18.1
2025-03-30 17:49:57,291:INFO:          ipywidgets: 8.1.5
2025-03-30 17:49:57,291:INFO:                tqdm: 4.67.1
2025-03-30 17:49:57,291:INFO:               numpy: 1.26.4
2025-03-30 17:49:57,291:INFO:              pandas: 1.5.3
2025-03-30 17:49:57,291:INFO:              jinja2: 3.1.6
2025-03-30 17:49:57,291:INFO:               scipy: 1.11.4
2025-03-30 17:49:57,291:INFO:              joblib: 1.3.2
2025-03-30 17:49:57,291:INFO:             sklearn: 1.4.2
2025-03-30 17:49:57,291:INFO:                pyod: 2.0.3
2025-03-30 17:49:57,291:INFO:            imblearn: 0.12.4
2025-03-30 17:49:57,291:INFO:   category_encoders: 2.6.4
2025-03-30 17:49:57,291:INFO:            lightgbm: 4.6.0
2025-03-30 17:49:57,291:INFO:               numba: 0.60.0
2025-03-30 17:49:57,291:INFO:            requests: 2.32.3
2025-03-30 17:49:57,291:INFO:          matplotlib: 3.7.5
2025-03-30 17:49:57,291:INFO:          scikitplot: 0.3.7
2025-03-30 17:49:57,291:INFO:         yellowbrick: 1.5
2025-03-30 17:49:57,291:INFO:              plotly: 5.24.1
2025-03-30 17:49:57,291:INFO:    plotly-resampler: Not installed
2025-03-30 17:49:57,291:INFO:             kaleido: 0.2.1
2025-03-30 17:49:57,291:INFO:           schemdraw: 0.15
2025-03-30 17:49:57,291:INFO:         statsmodels: 0.14.4
2025-03-30 17:49:57,291:INFO:              sktime: 0.26.0
2025-03-30 17:49:57,291:INFO:               tbats: 1.1.3
2025-03-30 17:49:57,291:INFO:            pmdarima: 2.0.4
2025-03-30 17:49:57,291:INFO:              psutil: 7.0.0
2025-03-30 17:49:57,291:INFO:          markupsafe: 3.0.2
2025-03-30 17:49:57,291:INFO:             pickle5: Not installed
2025-03-30 17:49:57,291:INFO:         cloudpickle: 2.2.1
2025-03-30 17:49:57,291:INFO:         deprecation: 2.1.0
2025-03-30 17:49:57,291:INFO:              xxhash: 3.5.0
2025-03-30 17:49:57,291:INFO:           wurlitzer: Not installed
2025-03-30 17:49:57,291:INFO:PyCaret optional dependencies:
2025-03-30 17:49:57,607:INFO:                shap: 0.47.1
2025-03-30 17:49:57,607:INFO:           interpret: Not installed
2025-03-30 17:49:57,607:INFO:                umap: Not installed
2025-03-30 17:49:57,607:INFO:     ydata_profiling: Not installed
2025-03-30 17:49:57,607:INFO:  explainerdashboard: Not installed
2025-03-30 17:49:57,607:INFO:             autoviz: Not installed
2025-03-30 17:49:57,607:INFO:           fairlearn: Not installed
2025-03-30 17:49:57,607:INFO:          deepchecks: Not installed
2025-03-30 17:49:57,607:INFO:             xgboost: Not installed
2025-03-30 17:49:57,607:INFO:            catboost: Not installed
2025-03-30 17:49:57,607:INFO:              kmodes: Not installed
2025-03-30 17:49:57,607:INFO:             mlxtend: Not installed
2025-03-30 17:49:57,607:INFO:       statsforecast: Not installed
2025-03-30 17:49:57,607:INFO:        tune_sklearn: Not installed
2025-03-30 17:49:57,607:INFO:                 ray: Not installed
2025-03-30 17:49:57,607:INFO:            hyperopt: Not installed
2025-03-30 17:49:57,607:INFO:              optuna: Not installed
2025-03-30 17:49:57,607:INFO:               skopt: Not installed
2025-03-30 17:49:57,607:INFO:              mlflow: 2.21.0
2025-03-30 17:49:57,607:INFO:              gradio: Not installed
2025-03-30 17:49:57,607:INFO:             fastapi: 0.115.11
2025-03-30 17:49:57,607:INFO:             uvicorn: 0.34.0
2025-03-30 17:49:57,607:INFO:              m2cgen: Not installed
2025-03-30 17:49:57,607:INFO:           evidently: Not installed
2025-03-30 17:49:57,607:INFO:               fugue: Not installed
2025-03-30 17:49:57,607:INFO:           streamlit: 1.43.2
2025-03-30 17:49:57,607:INFO:             prophet: Not installed
2025-03-30 17:49:57,607:INFO:None
2025-03-30 17:49:57,607:INFO:Set up data.
2025-03-30 17:49:57,607:INFO:Set up folding strategy.
2025-03-30 17:49:57,607:INFO:Set up train/test split.
2025-03-30 17:49:57,607:INFO:Set up index.
2025-03-30 17:49:57,607:INFO:Assigning column types.
2025-03-30 17:49:57,623:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:49:57,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,724:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:49:57,757:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:49:57,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,823:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:49:57,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:57,934:INFO:Preparing preprocessing pipeline...
2025-03-30 17:49:57,934:INFO:Set up simple imputation.
2025-03-30 17:49:57,950:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:49:57,950:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:49:57,950:INFO:Creating final display dataframe.
2025-03-30 17:49:57,985:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             267e
2025-03-30 17:49:58,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:58,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:58,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:58,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:49:58,091:INFO:Logging experiment in loggers
2025-03-30 17:49:58,335:INFO:SubProcess save_model() called ==================================
2025-03-30 17:49:58,339:INFO:Initializing save_model()
2025-03-30 17:49:58,339:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpav5oohbd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:49:58,339:INFO:Adding model into prep_pipe
2025-03-30 17:49:58,339:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:49:58,343:INFO:C:\Users\Ian\AppData\Local\Temp\tmpav5oohbd\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:49:58,345:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:49:58,345:INFO:save_model() successfully completed......................................
2025-03-30 17:49:58,428:INFO:SubProcess save_model() end ==================================
2025-03-30 17:49:58,454:INFO:setup() successfully completed in 0.85s...............
2025-03-30 17:49:58,455:INFO:Initializing create_model()
2025-03-30 17:49:58,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:49:58,455:INFO:Checking exceptions
2025-03-30 17:49:58,457:INFO:Importing libraries
2025-03-30 17:49:58,457:INFO:Copying training dataset
2025-03-30 17:49:58,460:INFO:Defining folds
2025-03-30 17:49:58,460:INFO:Declaring metric variables
2025-03-30 17:49:58,460:INFO:Importing untrained model
2025-03-30 17:49:58,461:INFO:Logistic Regression Imported successfully
2025-03-30 17:49:58,461:INFO:Starting cross validation
2025-03-30 17:49:58,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:50:01,931:INFO:Calculating mean and std
2025-03-30 17:50:01,931:INFO:Creating metrics dataframe
2025-03-30 17:50:01,935:INFO:Finalizing model
2025-03-30 17:50:01,983:INFO:Creating Dashboard logs
2025-03-30 17:50:01,983:INFO:Model: Logistic Regression
2025-03-30 17:50:02,043:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:50:02,183:INFO:Initializing predict_model()
2025-03-30 17:50:02,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261BB705A60>)
2025-03-30 17:50:02,183:INFO:Checking exceptions
2025-03-30 17:50:02,183:INFO:Preloading libraries
2025-03-30 17:50:02,323:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:50:02,340:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:50:02,340:INFO:Uploading results into container
2025-03-30 17:50:02,340:INFO:Uploading model into container now
2025-03-30 17:50:02,340:INFO:_master_model_container: 1
2025-03-30 17:50:02,340:INFO:_display_container: 2
2025-03-30 17:50:02,340:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:50:02,340:INFO:create_model() successfully completed......................................
2025-03-30 17:50:02,440:INFO:Initializing calibrate_model()
2025-03-30 17:50:02,440:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:50:02,440:INFO:Checking exceptions
2025-03-30 17:50:02,440:INFO:Preloading libraries
2025-03-30 17:50:02,440:INFO:Preparing display monitor
2025-03-30 17:50:02,440:INFO:Getting model name
2025-03-30 17:50:02,440:INFO:Base model : Logistic Regression
2025-03-30 17:50:02,440:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:50:02,440:INFO:SubProcess create_model() called ==================================
2025-03-30 17:50:02,440:INFO:Initializing create_model()
2025-03-30 17:50:02,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000261816F3DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:50:02,440:INFO:Checking exceptions
2025-03-30 17:50:02,440:INFO:Importing libraries
2025-03-30 17:50:02,440:INFO:Copying training dataset
2025-03-30 17:50:02,440:INFO:Defining folds
2025-03-30 17:50:02,440:INFO:Declaring metric variables
2025-03-30 17:50:02,440:INFO:Importing untrained model
2025-03-30 17:50:02,440:INFO:Declaring custom model
2025-03-30 17:50:02,440:INFO:Logistic Regression Imported successfully
2025-03-30 17:50:02,440:INFO:Starting cross validation
2025-03-30 17:50:02,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:50:04,282:INFO:Calculating mean and std
2025-03-30 17:50:04,282:INFO:Creating metrics dataframe
2025-03-30 17:50:04,284:INFO:Finalizing model
2025-03-30 17:50:04,420:INFO:Uploading results into container
2025-03-30 17:50:04,420:INFO:Uploading model into container now
2025-03-30 17:50:04,420:INFO:_master_model_container: 2
2025-03-30 17:50:04,420:INFO:_display_container: 3
2025-03-30 17:50:04,420:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:50:04,420:INFO:create_model() successfully completed......................................
2025-03-30 17:50:04,509:INFO:SubProcess create_model() end ==================================
2025-03-30 17:50:04,512:INFO:Creating Dashboard logs
2025-03-30 17:50:04,512:INFO:Model: Logistic Regression
2025-03-30 17:50:04,557:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:50:04,689:INFO:Initializing predict_model()
2025-03-30 17:50:04,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261BB88AC10>)
2025-03-30 17:50:04,689:INFO:Checking exceptions
2025-03-30 17:50:04,689:INFO:Preloading libraries
2025-03-30 17:50:04,847:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:50:04,852:INFO:_master_model_container: 2
2025-03-30 17:50:04,852:INFO:_display_container: 3
2025-03-30 17:50:04,852:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:50:04,852:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:50:04,941:INFO:Initializing finalize_model()
2025-03-30 17:50:04,941:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:50:04,941:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:50:04,941:INFO:Initializing create_model()
2025-03-30 17:50:04,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:50:04,941:INFO:Checking exceptions
2025-03-30 17:50:04,941:INFO:Importing libraries
2025-03-30 17:50:04,941:INFO:Copying training dataset
2025-03-30 17:50:04,941:INFO:Defining folds
2025-03-30 17:50:04,941:INFO:Declaring metric variables
2025-03-30 17:50:04,941:INFO:Importing untrained model
2025-03-30 17:50:04,941:INFO:Declaring custom model
2025-03-30 17:50:04,941:INFO:Logistic Regression Imported successfully
2025-03-30 17:50:04,941:INFO:Cross validation set to False
2025-03-30 17:50:04,941:INFO:Fitting Model
2025-03-30 17:50:05,102:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:50:05,102:INFO:create_model() successfully completed......................................
2025-03-30 17:50:05,197:INFO:Creating Dashboard logs
2025-03-30 17:50:05,197:INFO:Model: Logistic Regression
2025-03-30 17:50:05,244:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:50:05,372:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:50:05,372:INFO:_master_model_container: 2
2025-03-30 17:50:05,372:INFO:_display_container: 3
2025-03-30 17:50:05,372:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:50:05,372:INFO:finalize_model() successfully completed......................................
2025-03-30 17:50:05,466:INFO:Initializing predict_model()
2025-03-30 17:50:05,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261B9C86D00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000261BB757EE0>)
2025-03-30 17:50:05,466:INFO:Checking exceptions
2025-03-30 17:50:05,466:INFO:Preloading libraries
2025-03-30 17:50:05,466:INFO:Set up data.
2025-03-30 17:50:05,466:INFO:Set up index.
2025-03-30 17:52:09,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:52:09,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:52:09,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:52:09,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:52:10,374:INFO:PyCaret ClassificationExperiment
2025-03-30 17:52:10,374:INFO:Logging name: Treinamento
2025-03-30 17:52:10,374:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:52:10,374:INFO:version 3.3.2
2025-03-30 17:52:10,374:INFO:Initializing setup()
2025-03-30 17:52:10,374:INFO:self.USI: f58b
2025-03-30 17:52:10,374:INFO:self._variable_keys: {'fold_groups_param', 'target_param', 'USI', 'logging_param', 'seed', 'y_train', 'log_plots_param', 'pipeline', '_available_plots', 'X', 'fold_shuffle_param', 'gpu_n_jobs_param', 'html_param', 'idx', 'X_train', 'fix_imbalance', '_ml_usecase', 'gpu_param', 'n_jobs_param', 'fold_generator', 'data', 'exp_name_log', 'y_test', 'is_multiclass', 'exp_id', 'memory', 'X_test', 'y'}
2025-03-30 17:52:10,374:INFO:Checking environment
2025-03-30 17:52:10,374:INFO:python_version: 3.9.21
2025-03-30 17:52:10,374:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:52:10,374:INFO:machine: AMD64
2025-03-30 17:52:10,396:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:52:10,396:INFO:Memory: svmem(total=33685155840, available=22030544896, percent=34.6, used=11654610944, free=22030544896)
2025-03-30 17:52:10,396:INFO:Physical Core: 6
2025-03-30 17:52:10,406:INFO:Logical Core: 12
2025-03-30 17:52:10,406:INFO:Checking libraries
2025-03-30 17:52:10,406:INFO:System:
2025-03-30 17:52:10,406:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:52:10,406:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:52:10,406:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:52:10,406:INFO:PyCaret required dependencies:
2025-03-30 17:52:10,440:INFO:                 pip: 25.0
2025-03-30 17:52:10,440:INFO:          setuptools: 75.8.0
2025-03-30 17:52:10,440:INFO:             pycaret: 3.3.2
2025-03-30 17:52:10,440:INFO:             IPython: 8.18.1
2025-03-30 17:52:10,440:INFO:          ipywidgets: 8.1.5
2025-03-30 17:52:10,440:INFO:                tqdm: 4.67.1
2025-03-30 17:52:10,440:INFO:               numpy: 1.26.4
2025-03-30 17:52:10,440:INFO:              pandas: 1.5.3
2025-03-30 17:52:10,440:INFO:              jinja2: 3.1.6
2025-03-30 17:52:10,440:INFO:               scipy: 1.11.4
2025-03-30 17:52:10,440:INFO:              joblib: 1.3.2
2025-03-30 17:52:10,440:INFO:             sklearn: 1.4.2
2025-03-30 17:52:10,440:INFO:                pyod: 2.0.3
2025-03-30 17:52:10,440:INFO:            imblearn: 0.12.4
2025-03-30 17:52:10,440:INFO:   category_encoders: 2.6.4
2025-03-30 17:52:10,440:INFO:            lightgbm: 4.6.0
2025-03-30 17:52:10,440:INFO:               numba: 0.60.0
2025-03-30 17:52:10,440:INFO:            requests: 2.32.3
2025-03-30 17:52:10,440:INFO:          matplotlib: 3.7.5
2025-03-30 17:52:10,440:INFO:          scikitplot: 0.3.7
2025-03-30 17:52:10,440:INFO:         yellowbrick: 1.5
2025-03-30 17:52:10,440:INFO:              plotly: 5.24.1
2025-03-30 17:52:10,440:INFO:    plotly-resampler: Not installed
2025-03-30 17:52:10,440:INFO:             kaleido: 0.2.1
2025-03-30 17:52:10,440:INFO:           schemdraw: 0.15
2025-03-30 17:52:10,440:INFO:         statsmodels: 0.14.4
2025-03-30 17:52:10,440:INFO:              sktime: 0.26.0
2025-03-30 17:52:10,440:INFO:               tbats: 1.1.3
2025-03-30 17:52:10,440:INFO:            pmdarima: 2.0.4
2025-03-30 17:52:10,440:INFO:              psutil: 7.0.0
2025-03-30 17:52:10,440:INFO:          markupsafe: 3.0.2
2025-03-30 17:52:10,440:INFO:             pickle5: Not installed
2025-03-30 17:52:10,440:INFO:         cloudpickle: 2.2.1
2025-03-30 17:52:10,440:INFO:         deprecation: 2.1.0
2025-03-30 17:52:10,440:INFO:              xxhash: 3.5.0
2025-03-30 17:52:10,440:INFO:           wurlitzer: Not installed
2025-03-30 17:52:10,440:INFO:PyCaret optional dependencies:
2025-03-30 17:52:10,755:INFO:                shap: 0.47.1
2025-03-30 17:52:10,755:INFO:           interpret: Not installed
2025-03-30 17:52:10,756:INFO:                umap: Not installed
2025-03-30 17:52:10,756:INFO:     ydata_profiling: Not installed
2025-03-30 17:52:10,756:INFO:  explainerdashboard: Not installed
2025-03-30 17:52:10,756:INFO:             autoviz: Not installed
2025-03-30 17:52:10,756:INFO:           fairlearn: Not installed
2025-03-30 17:52:10,756:INFO:          deepchecks: Not installed
2025-03-30 17:52:10,756:INFO:             xgboost: Not installed
2025-03-30 17:52:10,756:INFO:            catboost: Not installed
2025-03-30 17:52:10,756:INFO:              kmodes: Not installed
2025-03-30 17:52:10,756:INFO:             mlxtend: Not installed
2025-03-30 17:52:10,756:INFO:       statsforecast: Not installed
2025-03-30 17:52:10,756:INFO:        tune_sklearn: Not installed
2025-03-30 17:52:10,756:INFO:                 ray: Not installed
2025-03-30 17:52:10,756:INFO:            hyperopt: Not installed
2025-03-30 17:52:10,756:INFO:              optuna: Not installed
2025-03-30 17:52:10,756:INFO:               skopt: Not installed
2025-03-30 17:52:10,756:INFO:              mlflow: 2.21.0
2025-03-30 17:52:10,756:INFO:              gradio: Not installed
2025-03-30 17:52:10,756:INFO:             fastapi: 0.115.11
2025-03-30 17:52:10,756:INFO:             uvicorn: 0.34.0
2025-03-30 17:52:10,756:INFO:              m2cgen: Not installed
2025-03-30 17:52:10,756:INFO:           evidently: Not installed
2025-03-30 17:52:10,756:INFO:               fugue: Not installed
2025-03-30 17:52:10,757:INFO:           streamlit: 1.43.2
2025-03-30 17:52:10,757:INFO:             prophet: Not installed
2025-03-30 17:52:10,757:INFO:None
2025-03-30 17:52:10,757:INFO:Set up data.
2025-03-30 17:52:10,757:INFO:Set up folding strategy.
2025-03-30 17:52:10,757:INFO:Set up train/test split.
2025-03-30 17:52:10,757:INFO:Set up index.
2025-03-30 17:52:10,757:INFO:Assigning column types.
2025-03-30 17:52:10,768:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:52:10,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:52:10,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:52:10,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:10,968:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:52:11,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,078:INFO:Preparing preprocessing pipeline...
2025-03-30 17:52:11,078:INFO:Set up simple imputation.
2025-03-30 17:52:11,094:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:52:11,094:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:52:11,094:INFO:Creating final display dataframe.
2025-03-30 17:52:11,142:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             f58b
2025-03-30 17:52:11,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:52:11,247:INFO:Logging experiment in loggers
2025-03-30 17:52:11,478:INFO:SubProcess save_model() called ==================================
2025-03-30 17:52:11,482:INFO:Initializing save_model()
2025-03-30 17:52:11,482:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpqg_p72gu\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:52:11,482:INFO:Adding model into prep_pipe
2025-03-30 17:52:11,482:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:52:11,484:INFO:C:\Users\Ian\AppData\Local\Temp\tmpqg_p72gu\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:52:11,484:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:52:11,484:INFO:save_model() successfully completed......................................
2025-03-30 17:52:11,570:INFO:SubProcess save_model() end ==================================
2025-03-30 17:52:11,586:INFO:setup() successfully completed in 0.87s...............
2025-03-30 17:52:11,586:INFO:Initializing create_model()
2025-03-30 17:52:11,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:52:11,586:INFO:Checking exceptions
2025-03-30 17:52:11,586:INFO:Importing libraries
2025-03-30 17:52:11,586:INFO:Copying training dataset
2025-03-30 17:52:11,602:INFO:Defining folds
2025-03-30 17:52:11,602:INFO:Declaring metric variables
2025-03-30 17:52:11,602:INFO:Importing untrained model
2025-03-30 17:52:11,602:INFO:Logistic Regression Imported successfully
2025-03-30 17:52:11,602:INFO:Starting cross validation
2025-03-30 17:52:11,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:52:15,004:INFO:Calculating mean and std
2025-03-30 17:52:15,006:INFO:Creating metrics dataframe
2025-03-30 17:52:15,008:INFO:Finalizing model
2025-03-30 17:52:15,055:INFO:Creating Dashboard logs
2025-03-30 17:52:15,055:INFO:Model: Logistic Regression
2025-03-30 17:52:15,106:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:52:15,256:INFO:Initializing predict_model()
2025-03-30 17:52:15,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002BB985259D0>)
2025-03-30 17:52:15,256:INFO:Checking exceptions
2025-03-30 17:52:15,256:INFO:Preloading libraries
2025-03-30 17:52:15,390:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:52:15,412:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:52:15,412:INFO:Uploading results into container
2025-03-30 17:52:15,412:INFO:Uploading model into container now
2025-03-30 17:52:15,424:INFO:_master_model_container: 1
2025-03-30 17:52:15,424:INFO:_display_container: 2
2025-03-30 17:52:15,425:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:52:15,425:INFO:create_model() successfully completed......................................
2025-03-30 17:52:15,507:INFO:Initializing calibrate_model()
2025-03-30 17:52:15,507:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:52:15,507:INFO:Checking exceptions
2025-03-30 17:52:15,507:INFO:Preloading libraries
2025-03-30 17:52:15,507:INFO:Preparing display monitor
2025-03-30 17:52:15,507:INFO:Getting model name
2025-03-30 17:52:15,507:INFO:Base model : Logistic Regression
2025-03-30 17:52:15,507:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:52:15,507:INFO:SubProcess create_model() called ==================================
2025-03-30 17:52:15,507:INFO:Initializing create_model()
2025-03-30 17:52:15,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BB985791C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:52:15,507:INFO:Checking exceptions
2025-03-30 17:52:15,507:INFO:Importing libraries
2025-03-30 17:52:15,507:INFO:Copying training dataset
2025-03-30 17:52:15,507:INFO:Defining folds
2025-03-30 17:52:15,507:INFO:Declaring metric variables
2025-03-30 17:52:15,507:INFO:Importing untrained model
2025-03-30 17:52:15,507:INFO:Declaring custom model
2025-03-30 17:52:15,507:INFO:Logistic Regression Imported successfully
2025-03-30 17:52:15,507:INFO:Starting cross validation
2025-03-30 17:52:15,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:52:17,337:INFO:Calculating mean and std
2025-03-30 17:52:17,337:INFO:Creating metrics dataframe
2025-03-30 17:52:17,339:INFO:Finalizing model
2025-03-30 17:52:17,472:INFO:Uploading results into container
2025-03-30 17:52:17,472:INFO:Uploading model into container now
2025-03-30 17:52:17,472:INFO:_master_model_container: 2
2025-03-30 17:52:17,472:INFO:_display_container: 3
2025-03-30 17:52:17,472:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:52:17,472:INFO:create_model() successfully completed......................................
2025-03-30 17:52:17,555:INFO:SubProcess create_model() end ==================================
2025-03-30 17:52:17,555:INFO:Creating Dashboard logs
2025-03-30 17:52:17,555:INFO:Model: Logistic Regression
2025-03-30 17:52:17,612:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:52:17,754:INFO:Initializing predict_model()
2025-03-30 17:52:17,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002BB9870AB80>)
2025-03-30 17:52:17,754:INFO:Checking exceptions
2025-03-30 17:52:17,754:INFO:Preloading libraries
2025-03-30 17:52:17,900:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:52:17,909:INFO:_master_model_container: 2
2025-03-30 17:52:17,909:INFO:_display_container: 3
2025-03-30 17:52:17,909:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:52:17,909:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:52:17,997:INFO:Initializing finalize_model()
2025-03-30 17:52:17,997:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:52:17,997:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:52:18,000:INFO:Initializing create_model()
2025-03-30 17:52:18,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:52:18,000:INFO:Checking exceptions
2025-03-30 17:52:18,000:INFO:Importing libraries
2025-03-30 17:52:18,000:INFO:Copying training dataset
2025-03-30 17:52:18,000:INFO:Defining folds
2025-03-30 17:52:18,000:INFO:Declaring metric variables
2025-03-30 17:52:18,001:INFO:Importing untrained model
2025-03-30 17:52:18,001:INFO:Declaring custom model
2025-03-30 17:52:18,001:INFO:Logistic Regression Imported successfully
2025-03-30 17:52:18,001:INFO:Cross validation set to False
2025-03-30 17:52:18,001:INFO:Fitting Model
2025-03-30 17:52:18,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:52:18,168:INFO:create_model() successfully completed......................................
2025-03-30 17:52:18,249:INFO:Creating Dashboard logs
2025-03-30 17:52:18,249:INFO:Model: Logistic Regression
2025-03-30 17:52:18,294:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:52:18,421:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:52:18,421:INFO:_master_model_container: 2
2025-03-30 17:52:18,421:INFO:_display_container: 3
2025-03-30 17:52:18,421:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:52:18,421:INFO:finalize_model() successfully completed......................................
2025-03-30 17:52:18,501:INFO:Initializing predict_model()
2025-03-30 17:52:18,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BB96AB7B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002BB98578EE0>)
2025-03-30 17:52:18,501:INFO:Checking exceptions
2025-03-30 17:52:18,501:INFO:Preloading libraries
2025-03-30 17:52:18,501:INFO:Set up data.
2025-03-30 17:52:18,519:INFO:Set up index.
2025-03-30 17:54:35,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:54:35,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:54:35,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:54:35,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:54:35,741:INFO:PyCaret ClassificationExperiment
2025-03-30 17:54:35,741:INFO:Logging name: Treinamento
2025-03-30 17:54:35,741:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:54:35,741:INFO:version 3.3.2
2025-03-30 17:54:35,741:INFO:Initializing setup()
2025-03-30 17:54:35,741:INFO:self.USI: d2fa
2025-03-30 17:54:35,741:INFO:self._variable_keys: {'gpu_param', 'logging_param', 'html_param', '_available_plots', 'USI', 'n_jobs_param', 'X_train', 'idx', 'fold_groups_param', 'exp_name_log', 'gpu_n_jobs_param', 'is_multiclass', 'fold_shuffle_param', 'fold_generator', 'y', 'y_test', 'data', '_ml_usecase', 'exp_id', 'y_train', 'seed', 'X_test', 'X', 'fix_imbalance', 'target_param', 'log_plots_param', 'pipeline', 'memory'}
2025-03-30 17:54:35,741:INFO:Checking environment
2025-03-30 17:54:35,741:INFO:python_version: 3.9.21
2025-03-30 17:54:35,741:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:54:35,741:INFO:machine: AMD64
2025-03-30 17:54:35,760:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:54:35,763:INFO:Memory: svmem(total=33685155840, available=21877010432, percent=35.1, used=11808145408, free=21877010432)
2025-03-30 17:54:35,763:INFO:Physical Core: 6
2025-03-30 17:54:35,763:INFO:Logical Core: 12
2025-03-30 17:54:35,763:INFO:Checking libraries
2025-03-30 17:54:35,763:INFO:System:
2025-03-30 17:54:35,763:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:54:35,763:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:54:35,763:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:54:35,763:INFO:PyCaret required dependencies:
2025-03-30 17:54:35,791:INFO:                 pip: 25.0
2025-03-30 17:54:35,791:INFO:          setuptools: 75.8.0
2025-03-30 17:54:35,791:INFO:             pycaret: 3.3.2
2025-03-30 17:54:35,791:INFO:             IPython: 8.18.1
2025-03-30 17:54:35,791:INFO:          ipywidgets: 8.1.5
2025-03-30 17:54:35,791:INFO:                tqdm: 4.67.1
2025-03-30 17:54:35,791:INFO:               numpy: 1.26.4
2025-03-30 17:54:35,791:INFO:              pandas: 1.5.3
2025-03-30 17:54:35,791:INFO:              jinja2: 3.1.6
2025-03-30 17:54:35,791:INFO:               scipy: 1.11.4
2025-03-30 17:54:35,791:INFO:              joblib: 1.3.2
2025-03-30 17:54:35,791:INFO:             sklearn: 1.4.2
2025-03-30 17:54:35,791:INFO:                pyod: 2.0.3
2025-03-30 17:54:35,791:INFO:            imblearn: 0.12.4
2025-03-30 17:54:35,791:INFO:   category_encoders: 2.6.4
2025-03-30 17:54:35,791:INFO:            lightgbm: 4.6.0
2025-03-30 17:54:35,791:INFO:               numba: 0.60.0
2025-03-30 17:54:35,791:INFO:            requests: 2.32.3
2025-03-30 17:54:35,791:INFO:          matplotlib: 3.7.5
2025-03-30 17:54:35,791:INFO:          scikitplot: 0.3.7
2025-03-30 17:54:35,791:INFO:         yellowbrick: 1.5
2025-03-30 17:54:35,791:INFO:              plotly: 5.24.1
2025-03-30 17:54:35,791:INFO:    plotly-resampler: Not installed
2025-03-30 17:54:35,791:INFO:             kaleido: 0.2.1
2025-03-30 17:54:35,791:INFO:           schemdraw: 0.15
2025-03-30 17:54:35,791:INFO:         statsmodels: 0.14.4
2025-03-30 17:54:35,791:INFO:              sktime: 0.26.0
2025-03-30 17:54:35,791:INFO:               tbats: 1.1.3
2025-03-30 17:54:35,791:INFO:            pmdarima: 2.0.4
2025-03-30 17:54:35,791:INFO:              psutil: 7.0.0
2025-03-30 17:54:35,791:INFO:          markupsafe: 3.0.2
2025-03-30 17:54:35,791:INFO:             pickle5: Not installed
2025-03-30 17:54:35,791:INFO:         cloudpickle: 2.2.1
2025-03-30 17:54:35,791:INFO:         deprecation: 2.1.0
2025-03-30 17:54:35,791:INFO:              xxhash: 3.5.0
2025-03-30 17:54:35,791:INFO:           wurlitzer: Not installed
2025-03-30 17:54:35,791:INFO:PyCaret optional dependencies:
2025-03-30 17:54:36,107:INFO:                shap: 0.47.1
2025-03-30 17:54:36,107:INFO:           interpret: Not installed
2025-03-30 17:54:36,107:INFO:                umap: Not installed
2025-03-30 17:54:36,107:INFO:     ydata_profiling: Not installed
2025-03-30 17:54:36,107:INFO:  explainerdashboard: Not installed
2025-03-30 17:54:36,107:INFO:             autoviz: Not installed
2025-03-30 17:54:36,107:INFO:           fairlearn: Not installed
2025-03-30 17:54:36,107:INFO:          deepchecks: Not installed
2025-03-30 17:54:36,107:INFO:             xgboost: Not installed
2025-03-30 17:54:36,107:INFO:            catboost: Not installed
2025-03-30 17:54:36,107:INFO:              kmodes: Not installed
2025-03-30 17:54:36,107:INFO:             mlxtend: Not installed
2025-03-30 17:54:36,107:INFO:       statsforecast: Not installed
2025-03-30 17:54:36,107:INFO:        tune_sklearn: Not installed
2025-03-30 17:54:36,107:INFO:                 ray: Not installed
2025-03-30 17:54:36,107:INFO:            hyperopt: Not installed
2025-03-30 17:54:36,107:INFO:              optuna: Not installed
2025-03-30 17:54:36,107:INFO:               skopt: Not installed
2025-03-30 17:54:36,107:INFO:              mlflow: 2.21.0
2025-03-30 17:54:36,107:INFO:              gradio: Not installed
2025-03-30 17:54:36,107:INFO:             fastapi: 0.115.11
2025-03-30 17:54:36,107:INFO:             uvicorn: 0.34.0
2025-03-30 17:54:36,107:INFO:              m2cgen: Not installed
2025-03-30 17:54:36,107:INFO:           evidently: Not installed
2025-03-30 17:54:36,107:INFO:               fugue: Not installed
2025-03-30 17:54:36,107:INFO:           streamlit: 1.43.2
2025-03-30 17:54:36,107:INFO:             prophet: Not installed
2025-03-30 17:54:36,107:INFO:None
2025-03-30 17:54:36,107:INFO:Set up data.
2025-03-30 17:54:36,107:INFO:Set up folding strategy.
2025-03-30 17:54:36,107:INFO:Set up train/test split.
2025-03-30 17:54:36,124:INFO:Set up index.
2025-03-30 17:54:36,124:INFO:Assigning column types.
2025-03-30 17:54:36,124:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:54:36,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,157:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,224:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:54:36,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:54:36,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,340:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:54:36,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,442:INFO:Preparing preprocessing pipeline...
2025-03-30 17:54:36,443:INFO:Set up simple imputation.
2025-03-30 17:54:36,457:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:54:36,460:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:54:36,460:INFO:Creating final display dataframe.
2025-03-30 17:54:36,490:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             d2fa
2025-03-30 17:54:36,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:54:36,601:INFO:Logging experiment in loggers
2025-03-30 17:54:36,840:INFO:SubProcess save_model() called ==================================
2025-03-30 17:54:36,845:INFO:Initializing save_model()
2025-03-30 17:54:36,845:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpz_3q11op\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:54:36,845:INFO:Adding model into prep_pipe
2025-03-30 17:54:36,845:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:54:36,848:INFO:C:\Users\Ian\AppData\Local\Temp\tmpz_3q11op\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:54:36,850:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:54:36,850:INFO:save_model() successfully completed......................................
2025-03-30 17:54:36,935:INFO:SubProcess save_model() end ==================================
2025-03-30 17:54:36,955:INFO:setup() successfully completed in 0.86s...............
2025-03-30 17:54:36,955:INFO:Initializing create_model()
2025-03-30 17:54:36,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:36,955:INFO:Checking exceptions
2025-03-30 17:54:36,955:INFO:Importing libraries
2025-03-30 17:54:36,955:INFO:Copying training dataset
2025-03-30 17:54:36,955:INFO:Defining folds
2025-03-30 17:54:36,955:INFO:Declaring metric variables
2025-03-30 17:54:36,955:INFO:Importing untrained model
2025-03-30 17:54:36,955:INFO:Logistic Regression Imported successfully
2025-03-30 17:54:36,955:INFO:Starting cross validation
2025-03-30 17:54:36,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:54:40,291:INFO:Calculating mean and std
2025-03-30 17:54:40,335:INFO:Creating metrics dataframe
2025-03-30 17:54:40,339:INFO:Finalizing model
2025-03-30 17:54:40,413:INFO:Creating Dashboard logs
2025-03-30 17:54:40,413:INFO:Model: Logistic Regression
2025-03-30 17:54:40,471:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:54:40,618:INFO:Initializing predict_model()
2025-03-30 17:54:40,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CA67BC49D0>)
2025-03-30 17:54:40,621:INFO:Checking exceptions
2025-03-30 17:54:40,621:INFO:Preloading libraries
2025-03-30 17:54:40,757:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:54:40,774:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:40,774:INFO:Uploading results into container
2025-03-30 17:54:40,774:INFO:Uploading model into container now
2025-03-30 17:54:40,790:INFO:_master_model_container: 1
2025-03-30 17:54:40,790:INFO:_display_container: 2
2025-03-30 17:54:40,790:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:54:40,790:INFO:create_model() successfully completed......................................
2025-03-30 17:54:40,874:INFO:Initializing calibrate_model()
2025-03-30 17:54:40,874:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:54:40,874:INFO:Checking exceptions
2025-03-30 17:54:40,874:INFO:Preloading libraries
2025-03-30 17:54:40,874:INFO:Preparing display monitor
2025-03-30 17:54:40,874:INFO:Getting model name
2025-03-30 17:54:40,874:INFO:Base model : Logistic Regression
2025-03-30 17:54:40,874:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:54:40,874:INFO:SubProcess create_model() called ==================================
2025-03-30 17:54:40,874:INFO:Initializing create_model()
2025-03-30 17:54:40,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA67DBBF40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:40,874:INFO:Checking exceptions
2025-03-30 17:54:40,874:INFO:Importing libraries
2025-03-30 17:54:40,874:INFO:Copying training dataset
2025-03-30 17:54:40,890:INFO:Defining folds
2025-03-30 17:54:40,890:INFO:Declaring metric variables
2025-03-30 17:54:40,890:INFO:Importing untrained model
2025-03-30 17:54:40,890:INFO:Declaring custom model
2025-03-30 17:54:40,890:INFO:Logistic Regression Imported successfully
2025-03-30 17:54:40,891:INFO:Starting cross validation
2025-03-30 17:54:40,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:54:42,715:INFO:Calculating mean and std
2025-03-30 17:54:42,715:INFO:Creating metrics dataframe
2025-03-30 17:54:42,715:INFO:Finalizing model
2025-03-30 17:54:42,854:INFO:Uploading results into container
2025-03-30 17:54:42,854:INFO:Uploading model into container now
2025-03-30 17:54:42,854:INFO:_master_model_container: 2
2025-03-30 17:54:42,854:INFO:_display_container: 3
2025-03-30 17:54:42,854:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:42,854:INFO:create_model() successfully completed......................................
2025-03-30 17:54:42,939:INFO:SubProcess create_model() end ==================================
2025-03-30 17:54:42,939:INFO:Creating Dashboard logs
2025-03-30 17:54:42,939:INFO:Model: Logistic Regression
2025-03-30 17:54:42,991:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:54:43,134:INFO:Initializing predict_model()
2025-03-30 17:54:43,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CA67BC4790>)
2025-03-30 17:54:43,134:INFO:Checking exceptions
2025-03-30 17:54:43,134:INFO:Preloading libraries
2025-03-30 17:54:43,282:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:43,288:INFO:_master_model_container: 2
2025-03-30 17:54:43,288:INFO:_display_container: 3
2025-03-30 17:54:43,289:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:43,289:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:54:43,390:INFO:Initializing finalize_model()
2025-03-30 17:54:43,390:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:54:43,390:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:43,390:INFO:Initializing create_model()
2025-03-30 17:54:43,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:43,390:INFO:Checking exceptions
2025-03-30 17:54:43,390:INFO:Importing libraries
2025-03-30 17:54:43,390:INFO:Copying training dataset
2025-03-30 17:54:43,390:INFO:Defining folds
2025-03-30 17:54:43,390:INFO:Declaring metric variables
2025-03-30 17:54:43,390:INFO:Importing untrained model
2025-03-30 17:54:43,390:INFO:Declaring custom model
2025-03-30 17:54:43,390:INFO:Logistic Regression Imported successfully
2025-03-30 17:54:43,390:INFO:Cross validation set to False
2025-03-30 17:54:43,390:INFO:Fitting Model
2025-03-30 17:54:43,560:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:54:43,560:INFO:create_model() successfully completed......................................
2025-03-30 17:54:43,643:INFO:Creating Dashboard logs
2025-03-30 17:54:43,643:INFO:Model: Logistic Regression
2025-03-30 17:54:43,690:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:54:43,822:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:43,822:INFO:_master_model_container: 2
2025-03-30 17:54:43,822:INFO:_display_container: 3
2025-03-30 17:54:43,823:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:54:43,823:INFO:finalize_model() successfully completed......................................
2025-03-30 17:54:43,916:INFO:Initializing create_model()
2025-03-30 17:54:43,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:43,916:INFO:Checking exceptions
2025-03-30 17:54:43,916:INFO:Importing libraries
2025-03-30 17:54:43,916:INFO:Copying training dataset
2025-03-30 17:54:43,916:INFO:Defining folds
2025-03-30 17:54:43,916:INFO:Declaring metric variables
2025-03-30 17:54:43,916:INFO:Importing untrained model
2025-03-30 17:54:43,916:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:54:43,916:INFO:Starting cross validation
2025-03-30 17:54:43,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:54:44,020:INFO:Calculating mean and std
2025-03-30 17:54:44,021:INFO:Creating metrics dataframe
2025-03-30 17:54:44,022:INFO:Finalizing model
2025-03-30 17:54:44,050:INFO:Creating Dashboard logs
2025-03-30 17:54:44,050:INFO:Model: Decision Tree Classifier
2025-03-30 17:54:44,105:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:54:44,257:INFO:Initializing predict_model()
2025-03-30 17:54:44,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CA67E4C820>)
2025-03-30 17:54:44,257:INFO:Checking exceptions
2025-03-30 17:54:44,257:INFO:Preloading libraries
2025-03-30 17:54:44,401:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:44,401:INFO:Uploading results into container
2025-03-30 17:54:44,401:INFO:Uploading model into container now
2025-03-30 17:54:44,407:INFO:_master_model_container: 3
2025-03-30 17:54:44,407:INFO:_display_container: 4
2025-03-30 17:54:44,407:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:54:44,407:INFO:create_model() successfully completed......................................
2025-03-30 17:54:44,490:INFO:Initializing calibrate_model()
2025-03-30 17:54:44,490:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:54:44,490:INFO:Checking exceptions
2025-03-30 17:54:44,496:INFO:Preloading libraries
2025-03-30 17:54:44,496:INFO:Preparing display monitor
2025-03-30 17:54:44,496:INFO:Getting model name
2025-03-30 17:54:44,496:INFO:Base model : Decision Tree Classifier
2025-03-30 17:54:44,496:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:54:44,496:INFO:SubProcess create_model() called ==================================
2025-03-30 17:54:44,496:INFO:Initializing create_model()
2025-03-30 17:54:44,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA67DBBF40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:44,496:INFO:Checking exceptions
2025-03-30 17:54:44,496:INFO:Importing libraries
2025-03-30 17:54:44,496:INFO:Copying training dataset
2025-03-30 17:54:44,496:INFO:Defining folds
2025-03-30 17:54:44,496:INFO:Declaring metric variables
2025-03-30 17:54:44,496:INFO:Importing untrained model
2025-03-30 17:54:44,496:INFO:Declaring custom model
2025-03-30 17:54:44,496:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:54:44,496:INFO:Starting cross validation
2025-03-30 17:54:44,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:54:44,763:INFO:Calculating mean and std
2025-03-30 17:54:44,763:INFO:Creating metrics dataframe
2025-03-30 17:54:44,765:INFO:Finalizing model
2025-03-30 17:54:44,924:INFO:Uploading results into container
2025-03-30 17:54:44,924:INFO:Uploading model into container now
2025-03-30 17:54:44,924:INFO:_master_model_container: 4
2025-03-30 17:54:44,924:INFO:_display_container: 5
2025-03-30 17:54:44,924:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:44,924:INFO:create_model() successfully completed......................................
2025-03-30 17:54:45,015:INFO:SubProcess create_model() end ==================================
2025-03-30 17:54:45,018:INFO:Creating Dashboard logs
2025-03-30 17:54:45,018:INFO:Model: Decision Tree Classifier
2025-03-30 17:54:45,067:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:54:45,269:INFO:Initializing predict_model()
2025-03-30 17:54:45,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CA67E4CC10>)
2025-03-30 17:54:45,269:INFO:Checking exceptions
2025-03-30 17:54:45,269:INFO:Preloading libraries
2025-03-30 17:54:45,453:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:45,463:INFO:_master_model_container: 4
2025-03-30 17:54:45,463:INFO:_display_container: 5
2025-03-30 17:54:45,463:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:45,463:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:54:45,568:INFO:Initializing finalize_model()
2025-03-30 17:54:45,569:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:54:45,569:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:54:45,573:INFO:Initializing create_model()
2025-03-30 17:54:45,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA66137A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:54:45,573:INFO:Checking exceptions
2025-03-30 17:54:45,573:INFO:Importing libraries
2025-03-30 17:54:45,573:INFO:Copying training dataset
2025-03-30 17:54:45,573:INFO:Defining folds
2025-03-30 17:54:45,574:INFO:Declaring metric variables
2025-03-30 17:54:45,574:INFO:Importing untrained model
2025-03-30 17:54:45,574:INFO:Declaring custom model
2025-03-30 17:54:45,574:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:54:45,574:INFO:Cross validation set to False
2025-03-30 17:54:45,574:INFO:Fitting Model
2025-03-30 17:54:45,782:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:54:45,782:INFO:create_model() successfully completed......................................
2025-03-30 17:54:45,867:INFO:Creating Dashboard logs
2025-03-30 17:54:45,867:INFO:Model: Decision Tree Classifier
2025-03-30 17:54:45,921:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:54:46,110:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:54:46,110:INFO:_master_model_container: 4
2025-03-30 17:54:46,110:INFO:_display_container: 5
2025-03-30 17:54:46,113:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:54:46,114:INFO:finalize_model() successfully completed......................................
2025-03-30 17:54:46,219:INFO:Initializing save_model()
2025-03-30 17:54:46,219:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:54:46,219:INFO:Adding model into prep_pipe
2025-03-30 17:54:46,219:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:54:46,219:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:54:46,229:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:54:46,231:INFO:save_model() successfully completed......................................
2025-03-30 17:55:06,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:55:06,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:55:06,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:55:06,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:55:07,196:INFO:PyCaret ClassificationExperiment
2025-03-30 17:55:07,196:INFO:Logging name: Treinamento
2025-03-30 17:55:07,196:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:55:07,196:INFO:version 3.3.2
2025-03-30 17:55:07,196:INFO:Initializing setup()
2025-03-30 17:55:07,196:INFO:self.USI: f7ec
2025-03-30 17:55:07,196:INFO:self._variable_keys: {'_ml_usecase', 'fold_generator', 'y_train', 'is_multiclass', 'idx', 'gpu_param', '_available_plots', 'n_jobs_param', 'pipeline', 'data', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_groups_param', 'seed', 'html_param', 'memory', 'exp_id', 'fold_shuffle_param', 'X_test', 'y_test', 'USI', 'exp_name_log', 'logging_param', 'log_plots_param', 'X', 'y', 'target_param', 'X_train'}
2025-03-30 17:55:07,196:INFO:Checking environment
2025-03-30 17:55:07,196:INFO:python_version: 3.9.21
2025-03-30 17:55:07,196:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:55:07,196:INFO:machine: AMD64
2025-03-30 17:55:07,207:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:55:07,224:INFO:Memory: svmem(total=33685155840, available=21918842880, percent=34.9, used=11766312960, free=21918842880)
2025-03-30 17:55:07,225:INFO:Physical Core: 6
2025-03-30 17:55:07,225:INFO:Logical Core: 12
2025-03-30 17:55:07,225:INFO:Checking libraries
2025-03-30 17:55:07,225:INFO:System:
2025-03-30 17:55:07,225:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:55:07,225:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:55:07,225:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:55:07,225:INFO:PyCaret required dependencies:
2025-03-30 17:55:07,257:INFO:                 pip: 25.0
2025-03-30 17:55:07,257:INFO:          setuptools: 75.8.0
2025-03-30 17:55:07,257:INFO:             pycaret: 3.3.2
2025-03-30 17:55:07,257:INFO:             IPython: 8.18.1
2025-03-30 17:55:07,257:INFO:          ipywidgets: 8.1.5
2025-03-30 17:55:07,257:INFO:                tqdm: 4.67.1
2025-03-30 17:55:07,257:INFO:               numpy: 1.26.4
2025-03-30 17:55:07,257:INFO:              pandas: 1.5.3
2025-03-30 17:55:07,257:INFO:              jinja2: 3.1.6
2025-03-30 17:55:07,257:INFO:               scipy: 1.11.4
2025-03-30 17:55:07,257:INFO:              joblib: 1.3.2
2025-03-30 17:55:07,257:INFO:             sklearn: 1.4.2
2025-03-30 17:55:07,257:INFO:                pyod: 2.0.3
2025-03-30 17:55:07,257:INFO:            imblearn: 0.12.4
2025-03-30 17:55:07,257:INFO:   category_encoders: 2.6.4
2025-03-30 17:55:07,257:INFO:            lightgbm: 4.6.0
2025-03-30 17:55:07,257:INFO:               numba: 0.60.0
2025-03-30 17:55:07,257:INFO:            requests: 2.32.3
2025-03-30 17:55:07,257:INFO:          matplotlib: 3.7.5
2025-03-30 17:55:07,257:INFO:          scikitplot: 0.3.7
2025-03-30 17:55:07,257:INFO:         yellowbrick: 1.5
2025-03-30 17:55:07,257:INFO:              plotly: 5.24.1
2025-03-30 17:55:07,257:INFO:    plotly-resampler: Not installed
2025-03-30 17:55:07,257:INFO:             kaleido: 0.2.1
2025-03-30 17:55:07,257:INFO:           schemdraw: 0.15
2025-03-30 17:55:07,257:INFO:         statsmodels: 0.14.4
2025-03-30 17:55:07,257:INFO:              sktime: 0.26.0
2025-03-30 17:55:07,257:INFO:               tbats: 1.1.3
2025-03-30 17:55:07,257:INFO:            pmdarima: 2.0.4
2025-03-30 17:55:07,257:INFO:              psutil: 7.0.0
2025-03-30 17:55:07,257:INFO:          markupsafe: 3.0.2
2025-03-30 17:55:07,257:INFO:             pickle5: Not installed
2025-03-30 17:55:07,257:INFO:         cloudpickle: 2.2.1
2025-03-30 17:55:07,257:INFO:         deprecation: 2.1.0
2025-03-30 17:55:07,257:INFO:              xxhash: 3.5.0
2025-03-30 17:55:07,257:INFO:           wurlitzer: Not installed
2025-03-30 17:55:07,257:INFO:PyCaret optional dependencies:
2025-03-30 17:55:07,578:INFO:                shap: 0.47.1
2025-03-30 17:55:07,578:INFO:           interpret: Not installed
2025-03-30 17:55:07,578:INFO:                umap: Not installed
2025-03-30 17:55:07,578:INFO:     ydata_profiling: Not installed
2025-03-30 17:55:07,578:INFO:  explainerdashboard: Not installed
2025-03-30 17:55:07,578:INFO:             autoviz: Not installed
2025-03-30 17:55:07,578:INFO:           fairlearn: Not installed
2025-03-30 17:55:07,578:INFO:          deepchecks: Not installed
2025-03-30 17:55:07,578:INFO:             xgboost: Not installed
2025-03-30 17:55:07,578:INFO:            catboost: Not installed
2025-03-30 17:55:07,578:INFO:              kmodes: Not installed
2025-03-30 17:55:07,578:INFO:             mlxtend: Not installed
2025-03-30 17:55:07,578:INFO:       statsforecast: Not installed
2025-03-30 17:55:07,578:INFO:        tune_sklearn: Not installed
2025-03-30 17:55:07,578:INFO:                 ray: Not installed
2025-03-30 17:55:07,578:INFO:            hyperopt: Not installed
2025-03-30 17:55:07,578:INFO:              optuna: Not installed
2025-03-30 17:55:07,578:INFO:               skopt: Not installed
2025-03-30 17:55:07,578:INFO:              mlflow: 2.21.0
2025-03-30 17:55:07,578:INFO:              gradio: Not installed
2025-03-30 17:55:07,578:INFO:             fastapi: 0.115.11
2025-03-30 17:55:07,578:INFO:             uvicorn: 0.34.0
2025-03-30 17:55:07,578:INFO:              m2cgen: Not installed
2025-03-30 17:55:07,578:INFO:           evidently: Not installed
2025-03-30 17:55:07,578:INFO:               fugue: Not installed
2025-03-30 17:55:07,578:INFO:           streamlit: 1.43.2
2025-03-30 17:55:07,578:INFO:             prophet: Not installed
2025-03-30 17:55:07,578:INFO:None
2025-03-30 17:55:07,578:INFO:Set up data.
2025-03-30 17:55:07,578:INFO:Set up folding strategy.
2025-03-30 17:55:07,578:INFO:Set up train/test split.
2025-03-30 17:55:07,590:INFO:Set up index.
2025-03-30 17:55:07,591:INFO:Assigning column types.
2025-03-30 17:55:07,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:55:07,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,675:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,697:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:55:07,719:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:55:07,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,806:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:55:07,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:07,910:INFO:Preparing preprocessing pipeline...
2025-03-30 17:55:07,911:INFO:Set up simple imputation.
2025-03-30 17:55:07,925:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:55:07,928:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:55:07,928:INFO:Creating final display dataframe.
2025-03-30 17:55:07,971:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             f7ec
2025-03-30 17:55:08,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:08,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:08,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:08,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:55:08,076:INFO:Logging experiment in loggers
2025-03-30 17:55:08,306:INFO:SubProcess save_model() called ==================================
2025-03-30 17:55:08,306:INFO:Initializing save_model()
2025-03-30 17:55:08,306:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpjngvrsd2\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:55:08,306:INFO:Adding model into prep_pipe
2025-03-30 17:55:08,306:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:55:08,323:INFO:C:\Users\Ian\AppData\Local\Temp\tmpjngvrsd2\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:55:08,323:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:55:08,323:INFO:save_model() successfully completed......................................
2025-03-30 17:55:08,406:INFO:SubProcess save_model() end ==================================
2025-03-30 17:55:08,425:INFO:setup() successfully completed in 0.88s...............
2025-03-30 17:55:08,425:INFO:Initializing create_model()
2025-03-30 17:55:08,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:08,425:INFO:Checking exceptions
2025-03-30 17:55:08,425:INFO:Importing libraries
2025-03-30 17:55:08,425:INFO:Copying training dataset
2025-03-30 17:55:08,440:INFO:Defining folds
2025-03-30 17:55:08,440:INFO:Declaring metric variables
2025-03-30 17:55:08,440:INFO:Importing untrained model
2025-03-30 17:55:08,440:INFO:Logistic Regression Imported successfully
2025-03-30 17:55:08,440:INFO:Starting cross validation
2025-03-30 17:55:08,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:55:11,758:INFO:Calculating mean and std
2025-03-30 17:55:11,764:INFO:Creating metrics dataframe
2025-03-30 17:55:11,768:INFO:Finalizing model
2025-03-30 17:55:11,805:INFO:Creating Dashboard logs
2025-03-30 17:55:11,805:INFO:Model: Logistic Regression
2025-03-30 17:55:11,869:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:55:12,011:INFO:Initializing predict_model()
2025-03-30 17:55:12,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B0540E49D0>)
2025-03-30 17:55:12,011:INFO:Checking exceptions
2025-03-30 17:55:12,011:INFO:Preloading libraries
2025-03-30 17:55:12,139:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:55:12,162:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:12,163:INFO:Uploading results into container
2025-03-30 17:55:12,163:INFO:Uploading model into container now
2025-03-30 17:55:12,170:INFO:_master_model_container: 1
2025-03-30 17:55:12,170:INFO:_display_container: 2
2025-03-30 17:55:12,170:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:55:12,170:INFO:create_model() successfully completed......................................
2025-03-30 17:55:12,253:INFO:Initializing calibrate_model()
2025-03-30 17:55:12,253:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:55:12,253:INFO:Checking exceptions
2025-03-30 17:55:12,253:INFO:Preloading libraries
2025-03-30 17:55:12,253:INFO:Preparing display monitor
2025-03-30 17:55:12,253:INFO:Getting model name
2025-03-30 17:55:12,253:INFO:Base model : Logistic Regression
2025-03-30 17:55:12,253:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:55:12,253:INFO:SubProcess create_model() called ==================================
2025-03-30 17:55:12,253:INFO:Initializing create_model()
2025-03-30 17:55:12,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B052960BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:12,253:INFO:Checking exceptions
2025-03-30 17:55:12,253:INFO:Importing libraries
2025-03-30 17:55:12,253:INFO:Copying training dataset
2025-03-30 17:55:12,253:INFO:Defining folds
2025-03-30 17:55:12,253:INFO:Declaring metric variables
2025-03-30 17:55:12,253:INFO:Importing untrained model
2025-03-30 17:55:12,253:INFO:Declaring custom model
2025-03-30 17:55:12,253:INFO:Logistic Regression Imported successfully
2025-03-30 17:55:12,253:INFO:Starting cross validation
2025-03-30 17:55:12,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:55:14,121:INFO:Calculating mean and std
2025-03-30 17:55:14,122:INFO:Creating metrics dataframe
2025-03-30 17:55:14,124:INFO:Finalizing model
2025-03-30 17:55:14,288:INFO:Uploading results into container
2025-03-30 17:55:14,288:INFO:Uploading model into container now
2025-03-30 17:55:14,288:INFO:_master_model_container: 2
2025-03-30 17:55:14,289:INFO:_display_container: 3
2025-03-30 17:55:14,289:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:14,290:INFO:create_model() successfully completed......................................
2025-03-30 17:55:14,372:INFO:SubProcess create_model() end ==================================
2025-03-30 17:55:14,374:INFO:Creating Dashboard logs
2025-03-30 17:55:14,374:INFO:Model: Logistic Regression
2025-03-30 17:55:14,427:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:55:14,573:INFO:Initializing predict_model()
2025-03-30 17:55:14,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B0542C8B80>)
2025-03-30 17:55:14,573:INFO:Checking exceptions
2025-03-30 17:55:14,573:INFO:Preloading libraries
2025-03-30 17:55:14,722:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:14,733:INFO:_master_model_container: 2
2025-03-30 17:55:14,733:INFO:_display_container: 3
2025-03-30 17:55:14,734:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:14,734:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:55:14,805:INFO:Initializing finalize_model()
2025-03-30 17:55:14,805:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:55:14,821:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:14,821:INFO:Initializing create_model()
2025-03-30 17:55:14,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:14,821:INFO:Checking exceptions
2025-03-30 17:55:14,821:INFO:Importing libraries
2025-03-30 17:55:14,821:INFO:Copying training dataset
2025-03-30 17:55:14,821:INFO:Defining folds
2025-03-30 17:55:14,821:INFO:Declaring metric variables
2025-03-30 17:55:14,821:INFO:Importing untrained model
2025-03-30 17:55:14,821:INFO:Declaring custom model
2025-03-30 17:55:14,821:INFO:Logistic Regression Imported successfully
2025-03-30 17:55:14,821:INFO:Cross validation set to False
2025-03-30 17:55:14,821:INFO:Fitting Model
2025-03-30 17:55:15,014:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:55:15,014:INFO:create_model() successfully completed......................................
2025-03-30 17:55:15,093:INFO:Creating Dashboard logs
2025-03-30 17:55:15,094:INFO:Model: Logistic Regression
2025-03-30 17:55:15,146:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:55:15,268:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:15,268:INFO:_master_model_container: 2
2025-03-30 17:55:15,268:INFO:_display_container: 3
2025-03-30 17:55:15,286:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:55:15,286:INFO:finalize_model() successfully completed......................................
2025-03-30 17:55:15,379:INFO:Initializing create_model()
2025-03-30 17:55:15,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:15,379:INFO:Checking exceptions
2025-03-30 17:55:15,379:INFO:Importing libraries
2025-03-30 17:55:15,379:INFO:Copying training dataset
2025-03-30 17:55:15,379:INFO:Defining folds
2025-03-30 17:55:15,379:INFO:Declaring metric variables
2025-03-30 17:55:15,379:INFO:Importing untrained model
2025-03-30 17:55:15,395:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:55:15,395:INFO:Starting cross validation
2025-03-30 17:55:15,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:55:15,483:INFO:Calculating mean and std
2025-03-30 17:55:15,485:INFO:Creating metrics dataframe
2025-03-30 17:55:15,486:INFO:Finalizing model
2025-03-30 17:55:15,519:INFO:Creating Dashboard logs
2025-03-30 17:55:15,519:INFO:Model: Decision Tree Classifier
2025-03-30 17:55:15,569:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:55:15,734:INFO:Initializing predict_model()
2025-03-30 17:55:15,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B054392940>)
2025-03-30 17:55:15,734:INFO:Checking exceptions
2025-03-30 17:55:15,734:INFO:Preloading libraries
2025-03-30 17:55:15,874:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:15,875:INFO:Uploading results into container
2025-03-30 17:55:15,875:INFO:Uploading model into container now
2025-03-30 17:55:15,885:INFO:_master_model_container: 3
2025-03-30 17:55:15,885:INFO:_display_container: 4
2025-03-30 17:55:15,886:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:55:15,886:INFO:create_model() successfully completed......................................
2025-03-30 17:55:15,973:INFO:Initializing calibrate_model()
2025-03-30 17:55:15,973:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:55:15,973:INFO:Checking exceptions
2025-03-30 17:55:15,975:INFO:Preloading libraries
2025-03-30 17:55:15,975:INFO:Preparing display monitor
2025-03-30 17:55:15,976:INFO:Getting model name
2025-03-30 17:55:15,977:INFO:Base model : Decision Tree Classifier
2025-03-30 17:55:15,977:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:55:15,977:INFO:SubProcess create_model() called ==================================
2025-03-30 17:55:15,978:INFO:Initializing create_model()
2025-03-30 17:55:15,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B05447FD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:15,978:INFO:Checking exceptions
2025-03-30 17:55:15,978:INFO:Importing libraries
2025-03-30 17:55:15,978:INFO:Copying training dataset
2025-03-30 17:55:15,981:INFO:Defining folds
2025-03-30 17:55:15,981:INFO:Declaring metric variables
2025-03-30 17:55:15,981:INFO:Importing untrained model
2025-03-30 17:55:15,981:INFO:Declaring custom model
2025-03-30 17:55:15,981:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:55:15,981:INFO:Starting cross validation
2025-03-30 17:55:15,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:55:16,220:INFO:Calculating mean and std
2025-03-30 17:55:16,220:INFO:Creating metrics dataframe
2025-03-30 17:55:16,220:INFO:Finalizing model
2025-03-30 17:55:16,362:INFO:Uploading results into container
2025-03-30 17:55:16,362:INFO:Uploading model into container now
2025-03-30 17:55:16,362:INFO:_master_model_container: 4
2025-03-30 17:55:16,362:INFO:_display_container: 5
2025-03-30 17:55:16,363:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:16,363:INFO:create_model() successfully completed......................................
2025-03-30 17:55:16,446:INFO:SubProcess create_model() end ==================================
2025-03-30 17:55:16,448:INFO:Creating Dashboard logs
2025-03-30 17:55:16,448:INFO:Model: Decision Tree Classifier
2025-03-30 17:55:16,501:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:55:16,689:INFO:Initializing predict_model()
2025-03-30 17:55:16,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B054392160>)
2025-03-30 17:55:16,689:INFO:Checking exceptions
2025-03-30 17:55:16,689:INFO:Preloading libraries
2025-03-30 17:55:16,848:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:16,864:INFO:_master_model_container: 4
2025-03-30 17:55:16,864:INFO:_display_container: 5
2025-03-30 17:55:16,864:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:16,864:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:55:16,954:INFO:Initializing finalize_model()
2025-03-30 17:55:16,954:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:55:16,954:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:55:16,954:INFO:Initializing create_model()
2025-03-30 17:55:16,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B052667A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:55:16,954:INFO:Checking exceptions
2025-03-30 17:55:16,954:INFO:Importing libraries
2025-03-30 17:55:16,954:INFO:Copying training dataset
2025-03-30 17:55:16,954:INFO:Defining folds
2025-03-30 17:55:16,954:INFO:Declaring metric variables
2025-03-30 17:55:16,954:INFO:Importing untrained model
2025-03-30 17:55:16,954:INFO:Declaring custom model
2025-03-30 17:55:16,959:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:55:16,959:INFO:Cross validation set to False
2025-03-30 17:55:16,959:INFO:Fitting Model
2025-03-30 17:55:17,133:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:55:17,133:INFO:create_model() successfully completed......................................
2025-03-30 17:55:17,213:INFO:Creating Dashboard logs
2025-03-30 17:55:17,213:INFO:Model: Decision Tree Classifier
2025-03-30 17:55:17,277:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:55:17,451:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:55:17,451:INFO:_master_model_container: 4
2025-03-30 17:55:17,451:INFO:_display_container: 5
2025-03-30 17:55:17,451:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:55:17,451:INFO:finalize_model() successfully completed......................................
2025-03-30 17:55:17,563:INFO:Initializing save_model()
2025-03-30 17:55:17,563:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:55:17,563:INFO:Adding model into prep_pipe
2025-03-30 17:55:17,563:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:55:17,579:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:55:17,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:55:17,579:INFO:save_model() successfully completed......................................
2025-03-30 17:56:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:56:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:56:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:56:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:56:55,281:INFO:PyCaret ClassificationExperiment
2025-03-30 17:56:55,281:INFO:Logging name: Treinamento
2025-03-30 17:56:55,281:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:56:55,281:INFO:version 3.3.2
2025-03-30 17:56:55,281:INFO:Initializing setup()
2025-03-30 17:56:55,281:INFO:self.USI: 29d9
2025-03-30 17:56:55,281:INFO:self._variable_keys: {'exp_id', 'X_test', 'html_param', 'gpu_n_jobs_param', 'y_test', 'X', '_available_plots', 'n_jobs_param', 'exp_name_log', 'fix_imbalance', 'idx', 'USI', 'y', 'gpu_param', 'is_multiclass', 'seed', 'fold_groups_param', 'target_param', 'memory', 'pipeline', 'y_train', 'logging_param', 'data', 'fold_shuffle_param', 'fold_generator', 'X_train', 'log_plots_param', '_ml_usecase'}
2025-03-30 17:56:55,281:INFO:Checking environment
2025-03-30 17:56:55,281:INFO:python_version: 3.9.21
2025-03-30 17:56:55,281:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:56:55,281:INFO:machine: AMD64
2025-03-30 17:56:55,297:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:56:55,302:INFO:Memory: svmem(total=33685155840, available=21747109888, percent=35.4, used=11938045952, free=21747109888)
2025-03-30 17:56:55,302:INFO:Physical Core: 6
2025-03-30 17:56:55,302:INFO:Logical Core: 12
2025-03-30 17:56:55,302:INFO:Checking libraries
2025-03-30 17:56:55,302:INFO:System:
2025-03-30 17:56:55,302:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:56:55,302:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:56:55,302:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:56:55,302:INFO:PyCaret required dependencies:
2025-03-30 17:56:55,324:INFO:                 pip: 25.0
2025-03-30 17:56:55,324:INFO:          setuptools: 75.8.0
2025-03-30 17:56:55,324:INFO:             pycaret: 3.3.2
2025-03-30 17:56:55,324:INFO:             IPython: 8.18.1
2025-03-30 17:56:55,324:INFO:          ipywidgets: 8.1.5
2025-03-30 17:56:55,324:INFO:                tqdm: 4.67.1
2025-03-30 17:56:55,324:INFO:               numpy: 1.26.4
2025-03-30 17:56:55,324:INFO:              pandas: 1.5.3
2025-03-30 17:56:55,324:INFO:              jinja2: 3.1.6
2025-03-30 17:56:55,324:INFO:               scipy: 1.11.4
2025-03-30 17:56:55,324:INFO:              joblib: 1.3.2
2025-03-30 17:56:55,324:INFO:             sklearn: 1.4.2
2025-03-30 17:56:55,324:INFO:                pyod: 2.0.3
2025-03-30 17:56:55,324:INFO:            imblearn: 0.12.4
2025-03-30 17:56:55,324:INFO:   category_encoders: 2.6.4
2025-03-30 17:56:55,324:INFO:            lightgbm: 4.6.0
2025-03-30 17:56:55,324:INFO:               numba: 0.60.0
2025-03-30 17:56:55,324:INFO:            requests: 2.32.3
2025-03-30 17:56:55,324:INFO:          matplotlib: 3.7.5
2025-03-30 17:56:55,324:INFO:          scikitplot: 0.3.7
2025-03-30 17:56:55,324:INFO:         yellowbrick: 1.5
2025-03-30 17:56:55,339:INFO:              plotly: 5.24.1
2025-03-30 17:56:55,339:INFO:    plotly-resampler: Not installed
2025-03-30 17:56:55,339:INFO:             kaleido: 0.2.1
2025-03-30 17:56:55,339:INFO:           schemdraw: 0.15
2025-03-30 17:56:55,339:INFO:         statsmodels: 0.14.4
2025-03-30 17:56:55,339:INFO:              sktime: 0.26.0
2025-03-30 17:56:55,339:INFO:               tbats: 1.1.3
2025-03-30 17:56:55,339:INFO:            pmdarima: 2.0.4
2025-03-30 17:56:55,340:INFO:              psutil: 7.0.0
2025-03-30 17:56:55,340:INFO:          markupsafe: 3.0.2
2025-03-30 17:56:55,340:INFO:             pickle5: Not installed
2025-03-30 17:56:55,340:INFO:         cloudpickle: 2.2.1
2025-03-30 17:56:55,340:INFO:         deprecation: 2.1.0
2025-03-30 17:56:55,340:INFO:              xxhash: 3.5.0
2025-03-30 17:56:55,340:INFO:           wurlitzer: Not installed
2025-03-30 17:56:55,340:INFO:PyCaret optional dependencies:
2025-03-30 17:56:55,640:INFO:                shap: 0.47.1
2025-03-30 17:56:55,655:INFO:           interpret: Not installed
2025-03-30 17:56:55,655:INFO:                umap: Not installed
2025-03-30 17:56:55,655:INFO:     ydata_profiling: Not installed
2025-03-30 17:56:55,655:INFO:  explainerdashboard: Not installed
2025-03-30 17:56:55,655:INFO:             autoviz: Not installed
2025-03-30 17:56:55,655:INFO:           fairlearn: Not installed
2025-03-30 17:56:55,655:INFO:          deepchecks: Not installed
2025-03-30 17:56:55,655:INFO:             xgboost: Not installed
2025-03-30 17:56:55,655:INFO:            catboost: Not installed
2025-03-30 17:56:55,655:INFO:              kmodes: Not installed
2025-03-30 17:56:55,655:INFO:             mlxtend: Not installed
2025-03-30 17:56:55,655:INFO:       statsforecast: Not installed
2025-03-30 17:56:55,655:INFO:        tune_sklearn: Not installed
2025-03-30 17:56:55,655:INFO:                 ray: Not installed
2025-03-30 17:56:55,655:INFO:            hyperopt: Not installed
2025-03-30 17:56:55,655:INFO:              optuna: Not installed
2025-03-30 17:56:55,655:INFO:               skopt: Not installed
2025-03-30 17:56:55,655:INFO:              mlflow: 2.21.0
2025-03-30 17:56:55,655:INFO:              gradio: Not installed
2025-03-30 17:56:55,655:INFO:             fastapi: 0.115.11
2025-03-30 17:56:55,655:INFO:             uvicorn: 0.34.0
2025-03-30 17:56:55,655:INFO:              m2cgen: Not installed
2025-03-30 17:56:55,655:INFO:           evidently: Not installed
2025-03-30 17:56:55,655:INFO:               fugue: Not installed
2025-03-30 17:56:55,655:INFO:           streamlit: 1.43.2
2025-03-30 17:56:55,656:INFO:             prophet: Not installed
2025-03-30 17:56:55,656:INFO:None
2025-03-30 17:56:55,656:INFO:Set up data.
2025-03-30 17:56:55,657:INFO:Set up folding strategy.
2025-03-30 17:56:55,657:INFO:Set up train/test split.
2025-03-30 17:56:55,657:INFO:Set up index.
2025-03-30 17:56:55,657:INFO:Assigning column types.
2025-03-30 17:56:55,657:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:56:55,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,690:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,756:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,771:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:56:55,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:56:55,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,869:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:56:55,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:55,964:INFO:Preparing preprocessing pipeline...
2025-03-30 17:56:55,964:INFO:Set up simple imputation.
2025-03-30 17:56:55,981:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:56:55,996:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:56:55,996:INFO:Creating final display dataframe.
2025-03-30 17:56:56,031:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             29d9
2025-03-30 17:56:56,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:56,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:56,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:56,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:56:56,138:INFO:Logging experiment in loggers
2025-03-30 17:56:56,357:INFO:SubProcess save_model() called ==================================
2025-03-30 17:56:56,357:INFO:Initializing save_model()
2025-03-30 17:56:56,357:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpspj4tl8l\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:56:56,357:INFO:Adding model into prep_pipe
2025-03-30 17:56:56,357:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:56:56,372:INFO:C:\Users\Ian\AppData\Local\Temp\tmpspj4tl8l\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:56:56,372:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:56:56,372:INFO:save_model() successfully completed......................................
2025-03-30 17:56:56,461:INFO:SubProcess save_model() end ==================================
2025-03-30 17:56:56,488:INFO:setup() successfully completed in 0.86s...............
2025-03-30 17:56:56,488:INFO:Initializing create_model()
2025-03-30 17:56:56,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:56:56,488:INFO:Checking exceptions
2025-03-30 17:56:56,488:INFO:Importing libraries
2025-03-30 17:56:56,488:INFO:Copying training dataset
2025-03-30 17:56:56,496:INFO:Defining folds
2025-03-30 17:56:56,496:INFO:Declaring metric variables
2025-03-30 17:56:56,496:INFO:Importing untrained model
2025-03-30 17:56:56,498:INFO:Logistic Regression Imported successfully
2025-03-30 17:56:56,498:INFO:Starting cross validation
2025-03-30 17:56:56,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:56:59,989:INFO:Calculating mean and std
2025-03-30 17:56:59,990:INFO:Creating metrics dataframe
2025-03-30 17:56:59,992:INFO:Finalizing model
2025-03-30 17:57:00,030:INFO:Creating Dashboard logs
2025-03-30 17:57:00,030:INFO:Model: Logistic Regression
2025-03-30 17:57:00,083:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:57:00,224:INFO:Initializing predict_model()
2025-03-30 17:57:00,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002667F0849D0>)
2025-03-30 17:57:00,224:INFO:Checking exceptions
2025-03-30 17:57:00,224:INFO:Preloading libraries
2025-03-30 17:57:00,379:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:57:00,398:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:00,398:INFO:Uploading results into container
2025-03-30 17:57:00,398:INFO:Uploading model into container now
2025-03-30 17:57:00,414:INFO:_master_model_container: 1
2025-03-30 17:57:00,414:INFO:_display_container: 2
2025-03-30 17:57:00,414:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:57:00,414:INFO:create_model() successfully completed......................................
2025-03-30 17:57:00,492:INFO:Initializing calibrate_model()
2025-03-30 17:57:00,492:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:57:00,492:INFO:Checking exceptions
2025-03-30 17:57:00,492:INFO:Preloading libraries
2025-03-30 17:57:00,506:INFO:Preparing display monitor
2025-03-30 17:57:00,507:INFO:Getting model name
2025-03-30 17:57:00,507:INFO:Base model : Logistic Regression
2025-03-30 17:57:00,507:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:57:00,507:INFO:SubProcess create_model() called ==================================
2025-03-30 17:57:00,507:INFO:Initializing create_model()
2025-03-30 17:57:00,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002667D900BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:00,507:INFO:Checking exceptions
2025-03-30 17:57:00,507:INFO:Importing libraries
2025-03-30 17:57:00,507:INFO:Copying training dataset
2025-03-30 17:57:00,507:INFO:Defining folds
2025-03-30 17:57:00,507:INFO:Declaring metric variables
2025-03-30 17:57:00,507:INFO:Importing untrained model
2025-03-30 17:57:00,507:INFO:Declaring custom model
2025-03-30 17:57:00,507:INFO:Logistic Regression Imported successfully
2025-03-30 17:57:00,507:INFO:Starting cross validation
2025-03-30 17:57:00,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:57:02,362:INFO:Calculating mean and std
2025-03-30 17:57:02,362:INFO:Creating metrics dataframe
2025-03-30 17:57:02,362:INFO:Finalizing model
2025-03-30 17:57:02,487:INFO:Uploading results into container
2025-03-30 17:57:02,503:INFO:Uploading model into container now
2025-03-30 17:57:02,503:INFO:_master_model_container: 2
2025-03-30 17:57:02,503:INFO:_display_container: 3
2025-03-30 17:57:02,503:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:02,503:INFO:create_model() successfully completed......................................
2025-03-30 17:57:02,589:INFO:SubProcess create_model() end ==================================
2025-03-30 17:57:02,589:INFO:Creating Dashboard logs
2025-03-30 17:57:02,589:INFO:Model: Logistic Regression
2025-03-30 17:57:02,642:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:57:02,784:INFO:Initializing predict_model()
2025-03-30 17:57:02,785:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002667F284B80>)
2025-03-30 17:57:02,785:INFO:Checking exceptions
2025-03-30 17:57:02,785:INFO:Preloading libraries
2025-03-30 17:57:02,930:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:02,935:INFO:_master_model_container: 2
2025-03-30 17:57:02,935:INFO:_display_container: 3
2025-03-30 17:57:02,935:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:02,935:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:57:03,023:INFO:Initializing finalize_model()
2025-03-30 17:57:03,023:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:57:03,024:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:03,024:INFO:Initializing create_model()
2025-03-30 17:57:03,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:03,024:INFO:Checking exceptions
2025-03-30 17:57:03,024:INFO:Importing libraries
2025-03-30 17:57:03,024:INFO:Copying training dataset
2025-03-30 17:57:03,024:INFO:Defining folds
2025-03-30 17:57:03,024:INFO:Declaring metric variables
2025-03-30 17:57:03,024:INFO:Importing untrained model
2025-03-30 17:57:03,024:INFO:Declaring custom model
2025-03-30 17:57:03,024:INFO:Logistic Regression Imported successfully
2025-03-30 17:57:03,024:INFO:Cross validation set to False
2025-03-30 17:57:03,024:INFO:Fitting Model
2025-03-30 17:57:03,187:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:57:03,187:INFO:create_model() successfully completed......................................
2025-03-30 17:57:03,271:INFO:Creating Dashboard logs
2025-03-30 17:57:03,271:INFO:Model: Logistic Regression
2025-03-30 17:57:03,318:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:57:03,445:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:03,445:INFO:_master_model_container: 2
2025-03-30 17:57:03,445:INFO:_display_container: 3
2025-03-30 17:57:03,461:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:57:03,461:INFO:finalize_model() successfully completed......................................
2025-03-30 17:57:03,556:INFO:Initializing create_model()
2025-03-30 17:57:03,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:03,556:INFO:Checking exceptions
2025-03-30 17:57:03,556:INFO:Importing libraries
2025-03-30 17:57:03,556:INFO:Copying training dataset
2025-03-30 17:57:03,556:INFO:Defining folds
2025-03-30 17:57:03,556:INFO:Declaring metric variables
2025-03-30 17:57:03,556:INFO:Importing untrained model
2025-03-30 17:57:03,556:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:57:03,556:INFO:Starting cross validation
2025-03-30 17:57:03,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:57:03,654:INFO:Calculating mean and std
2025-03-30 17:57:03,654:INFO:Creating metrics dataframe
2025-03-30 17:57:03,656:INFO:Finalizing model
2025-03-30 17:57:03,687:INFO:Creating Dashboard logs
2025-03-30 17:57:03,689:INFO:Model: Decision Tree Classifier
2025-03-30 17:57:03,721:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:57:03,898:INFO:Initializing predict_model()
2025-03-30 17:57:03,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002667F16D940>)
2025-03-30 17:57:03,898:INFO:Checking exceptions
2025-03-30 17:57:03,898:INFO:Preloading libraries
2025-03-30 17:57:04,057:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:04,057:INFO:Uploading results into container
2025-03-30 17:57:04,057:INFO:Uploading model into container now
2025-03-30 17:57:04,057:INFO:_master_model_container: 3
2025-03-30 17:57:04,057:INFO:_display_container: 4
2025-03-30 17:57:04,057:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:57:04,057:INFO:create_model() successfully completed......................................
2025-03-30 17:57:04,156:INFO:Initializing calibrate_model()
2025-03-30 17:57:04,156:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:57:04,156:INFO:Checking exceptions
2025-03-30 17:57:04,156:INFO:Preloading libraries
2025-03-30 17:57:04,156:INFO:Preparing display monitor
2025-03-30 17:57:04,156:INFO:Getting model name
2025-03-30 17:57:04,156:INFO:Base model : Decision Tree Classifier
2025-03-30 17:57:04,156:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:57:04,156:INFO:SubProcess create_model() called ==================================
2025-03-30 17:57:04,156:INFO:Initializing create_model()
2025-03-30 17:57:04,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002667F4A5340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:04,156:INFO:Checking exceptions
2025-03-30 17:57:04,156:INFO:Importing libraries
2025-03-30 17:57:04,156:INFO:Copying training dataset
2025-03-30 17:57:04,156:INFO:Defining folds
2025-03-30 17:57:04,156:INFO:Declaring metric variables
2025-03-30 17:57:04,156:INFO:Importing untrained model
2025-03-30 17:57:04,156:INFO:Declaring custom model
2025-03-30 17:57:04,156:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:57:04,156:INFO:Starting cross validation
2025-03-30 17:57:04,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:57:04,419:INFO:Calculating mean and std
2025-03-30 17:57:04,419:INFO:Creating metrics dataframe
2025-03-30 17:57:04,419:INFO:Finalizing model
2025-03-30 17:57:04,554:INFO:Uploading results into container
2025-03-30 17:57:04,554:INFO:Uploading model into container now
2025-03-30 17:57:04,554:INFO:_master_model_container: 4
2025-03-30 17:57:04,554:INFO:_display_container: 5
2025-03-30 17:57:04,554:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:04,554:INFO:create_model() successfully completed......................................
2025-03-30 17:57:04,673:INFO:SubProcess create_model() end ==================================
2025-03-30 17:57:04,677:INFO:Creating Dashboard logs
2025-03-30 17:57:04,679:INFO:Model: Decision Tree Classifier
2025-03-30 17:57:04,744:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:57:04,946:INFO:Initializing predict_model()
2025-03-30 17:57:04,946:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002667F16D160>)
2025-03-30 17:57:04,946:INFO:Checking exceptions
2025-03-30 17:57:04,946:INFO:Preloading libraries
2025-03-30 17:57:05,114:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:05,120:INFO:_master_model_container: 4
2025-03-30 17:57:05,120:INFO:_display_container: 5
2025-03-30 17:57:05,120:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:05,120:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:57:05,212:INFO:Initializing finalize_model()
2025-03-30 17:57:05,212:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:57:05,212:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:57:05,215:INFO:Initializing create_model()
2025-03-30 17:57:05,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002667D5F7A90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:05,215:INFO:Checking exceptions
2025-03-30 17:57:05,216:INFO:Importing libraries
2025-03-30 17:57:05,216:INFO:Copying training dataset
2025-03-30 17:57:05,216:INFO:Defining folds
2025-03-30 17:57:05,216:INFO:Declaring metric variables
2025-03-30 17:57:05,216:INFO:Importing untrained model
2025-03-30 17:57:05,216:INFO:Declaring custom model
2025-03-30 17:57:05,217:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:57:05,217:INFO:Cross validation set to False
2025-03-30 17:57:05,217:INFO:Fitting Model
2025-03-30 17:57:05,415:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:57:05,415:INFO:create_model() successfully completed......................................
2025-03-30 17:57:05,527:INFO:Creating Dashboard logs
2025-03-30 17:57:05,527:INFO:Model: Decision Tree Classifier
2025-03-30 17:57:05,573:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:57:05,768:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:57:05,768:INFO:_master_model_container: 4
2025-03-30 17:57:05,768:INFO:_display_container: 5
2025-03-30 17:57:05,772:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:57:05,772:INFO:finalize_model() successfully completed......................................
2025-03-30 17:57:05,887:INFO:Initializing save_model()
2025-03-30 17:57:05,887:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:57:05,887:INFO:Adding model into prep_pipe
2025-03-30 17:57:05,887:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:57:05,891:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:57:05,895:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:57:05,895:INFO:save_model() successfully completed......................................
2025-03-30 17:57:56,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:57:56,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:57:56,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:57:56,914:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:57:57,390:INFO:PyCaret ClassificationExperiment
2025-03-30 17:57:57,390:INFO:Logging name: Treinamento
2025-03-30 17:57:57,390:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:57:57,390:INFO:version 3.3.2
2025-03-30 17:57:57,390:INFO:Initializing setup()
2025-03-30 17:57:57,390:INFO:self.USI: 63a1
2025-03-30 17:57:57,390:INFO:self._variable_keys: {'_available_plots', 'pipeline', 'log_plots_param', 'fold_generator', 'X_train', 'X_test', '_ml_usecase', 'gpu_param', 'target_param', 'fix_imbalance', 'idx', 'seed', 'memory', 'html_param', 'fold_groups_param', 'n_jobs_param', 'y', 'gpu_n_jobs_param', 'data', 'X', 'exp_name_log', 'USI', 'exp_id', 'y_test', 'logging_param', 'fold_shuffle_param', 'y_train', 'is_multiclass'}
2025-03-30 17:57:57,390:INFO:Checking environment
2025-03-30 17:57:57,390:INFO:python_version: 3.9.21
2025-03-30 17:57:57,390:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:57:57,390:INFO:machine: AMD64
2025-03-30 17:57:57,413:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:57:57,413:INFO:Memory: svmem(total=33685155840, available=21722333184, percent=35.5, used=11962822656, free=21722333184)
2025-03-30 17:57:57,413:INFO:Physical Core: 6
2025-03-30 17:57:57,413:INFO:Logical Core: 12
2025-03-30 17:57:57,413:INFO:Checking libraries
2025-03-30 17:57:57,413:INFO:System:
2025-03-30 17:57:57,413:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:57:57,413:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:57:57,413:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:57:57,413:INFO:PyCaret required dependencies:
2025-03-30 17:57:57,441:INFO:                 pip: 25.0
2025-03-30 17:57:57,441:INFO:          setuptools: 75.8.0
2025-03-30 17:57:57,441:INFO:             pycaret: 3.3.2
2025-03-30 17:57:57,441:INFO:             IPython: 8.18.1
2025-03-30 17:57:57,441:INFO:          ipywidgets: 8.1.5
2025-03-30 17:57:57,441:INFO:                tqdm: 4.67.1
2025-03-30 17:57:57,441:INFO:               numpy: 1.26.4
2025-03-30 17:57:57,441:INFO:              pandas: 1.5.3
2025-03-30 17:57:57,441:INFO:              jinja2: 3.1.6
2025-03-30 17:57:57,441:INFO:               scipy: 1.11.4
2025-03-30 17:57:57,441:INFO:              joblib: 1.3.2
2025-03-30 17:57:57,441:INFO:             sklearn: 1.4.2
2025-03-30 17:57:57,441:INFO:                pyod: 2.0.3
2025-03-30 17:57:57,441:INFO:            imblearn: 0.12.4
2025-03-30 17:57:57,441:INFO:   category_encoders: 2.6.4
2025-03-30 17:57:57,441:INFO:            lightgbm: 4.6.0
2025-03-30 17:57:57,441:INFO:               numba: 0.60.0
2025-03-30 17:57:57,441:INFO:            requests: 2.32.3
2025-03-30 17:57:57,441:INFO:          matplotlib: 3.7.5
2025-03-30 17:57:57,441:INFO:          scikitplot: 0.3.7
2025-03-30 17:57:57,441:INFO:         yellowbrick: 1.5
2025-03-30 17:57:57,441:INFO:              plotly: 5.24.1
2025-03-30 17:57:57,441:INFO:    plotly-resampler: Not installed
2025-03-30 17:57:57,441:INFO:             kaleido: 0.2.1
2025-03-30 17:57:57,441:INFO:           schemdraw: 0.15
2025-03-30 17:57:57,441:INFO:         statsmodels: 0.14.4
2025-03-30 17:57:57,441:INFO:              sktime: 0.26.0
2025-03-30 17:57:57,441:INFO:               tbats: 1.1.3
2025-03-30 17:57:57,441:INFO:            pmdarima: 2.0.4
2025-03-30 17:57:57,441:INFO:              psutil: 7.0.0
2025-03-30 17:57:57,441:INFO:          markupsafe: 3.0.2
2025-03-30 17:57:57,441:INFO:             pickle5: Not installed
2025-03-30 17:57:57,441:INFO:         cloudpickle: 2.2.1
2025-03-30 17:57:57,441:INFO:         deprecation: 2.1.0
2025-03-30 17:57:57,441:INFO:              xxhash: 3.5.0
2025-03-30 17:57:57,441:INFO:           wurlitzer: Not installed
2025-03-30 17:57:57,441:INFO:PyCaret optional dependencies:
2025-03-30 17:57:57,761:INFO:                shap: 0.47.1
2025-03-30 17:57:57,761:INFO:           interpret: Not installed
2025-03-30 17:57:57,761:INFO:                umap: Not installed
2025-03-30 17:57:57,761:INFO:     ydata_profiling: Not installed
2025-03-30 17:57:57,761:INFO:  explainerdashboard: Not installed
2025-03-30 17:57:57,761:INFO:             autoviz: Not installed
2025-03-30 17:57:57,761:INFO:           fairlearn: Not installed
2025-03-30 17:57:57,761:INFO:          deepchecks: Not installed
2025-03-30 17:57:57,761:INFO:             xgboost: Not installed
2025-03-30 17:57:57,761:INFO:            catboost: Not installed
2025-03-30 17:57:57,761:INFO:              kmodes: Not installed
2025-03-30 17:57:57,761:INFO:             mlxtend: Not installed
2025-03-30 17:57:57,761:INFO:       statsforecast: Not installed
2025-03-30 17:57:57,761:INFO:        tune_sklearn: Not installed
2025-03-30 17:57:57,761:INFO:                 ray: Not installed
2025-03-30 17:57:57,761:INFO:            hyperopt: Not installed
2025-03-30 17:57:57,761:INFO:              optuna: Not installed
2025-03-30 17:57:57,761:INFO:               skopt: Not installed
2025-03-30 17:57:57,761:INFO:              mlflow: 2.21.0
2025-03-30 17:57:57,761:INFO:              gradio: Not installed
2025-03-30 17:57:57,761:INFO:             fastapi: 0.115.11
2025-03-30 17:57:57,761:INFO:             uvicorn: 0.34.0
2025-03-30 17:57:57,761:INFO:              m2cgen: Not installed
2025-03-30 17:57:57,761:INFO:           evidently: Not installed
2025-03-30 17:57:57,761:INFO:               fugue: Not installed
2025-03-30 17:57:57,761:INFO:           streamlit: 1.43.2
2025-03-30 17:57:57,761:INFO:             prophet: Not installed
2025-03-30 17:57:57,761:INFO:None
2025-03-30 17:57:57,761:INFO:Set up data.
2025-03-30 17:57:57,761:INFO:Set up folding strategy.
2025-03-30 17:57:57,761:INFO:Set up train/test split.
2025-03-30 17:57:57,773:INFO:Set up index.
2025-03-30 17:57:57,773:INFO:Assigning column types.
2025-03-30 17:57:57,773:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:57:57,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:57:57,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:57:57,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:57,983:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:57:58,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,095:INFO:Preparing preprocessing pipeline...
2025-03-30 17:57:58,095:INFO:Set up simple imputation.
2025-03-30 17:57:58,111:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:57:58,111:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:57:58,111:INFO:Creating final display dataframe.
2025-03-30 17:57:58,142:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             63a1
2025-03-30 17:57:58,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:57:58,254:INFO:Logging experiment in loggers
2025-03-30 17:57:58,482:INFO:SubProcess save_model() called ==================================
2025-03-30 17:57:58,497:INFO:Initializing save_model()
2025-03-30 17:57:58,497:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpx23we9aw\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:57:58,497:INFO:Adding model into prep_pipe
2025-03-30 17:57:58,497:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:57:58,497:INFO:C:\Users\Ian\AppData\Local\Temp\tmpx23we9aw\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:57:58,497:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:57:58,497:INFO:save_model() successfully completed......................................
2025-03-30 17:57:58,577:INFO:SubProcess save_model() end ==================================
2025-03-30 17:57:58,608:INFO:setup() successfully completed in 0.86s...............
2025-03-30 17:57:58,608:INFO:Initializing create_model()
2025-03-30 17:57:58,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:57:58,608:INFO:Checking exceptions
2025-03-30 17:57:58,608:INFO:Importing libraries
2025-03-30 17:57:58,608:INFO:Copying training dataset
2025-03-30 17:57:58,608:INFO:Defining folds
2025-03-30 17:57:58,608:INFO:Declaring metric variables
2025-03-30 17:57:58,608:INFO:Importing untrained model
2025-03-30 17:57:58,608:INFO:Logistic Regression Imported successfully
2025-03-30 17:57:58,608:INFO:Starting cross validation
2025-03-30 17:57:58,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:58:02,087:INFO:Calculating mean and std
2025-03-30 17:58:02,087:INFO:Creating metrics dataframe
2025-03-30 17:58:02,091:INFO:Finalizing model
2025-03-30 17:58:02,131:INFO:Creating Dashboard logs
2025-03-30 17:58:02,131:INFO:Model: Logistic Regression
2025-03-30 17:58:02,181:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 17:58:02,301:INFO:Initializing predict_model()
2025-03-30 17:58:02,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BFF12029D0>)
2025-03-30 17:58:02,301:INFO:Checking exceptions
2025-03-30 17:58:02,301:INFO:Preloading libraries
2025-03-30 17:58:02,466:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 17:58:02,480:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:02,480:INFO:Uploading results into container
2025-03-30 17:58:02,480:INFO:Uploading model into container now
2025-03-30 17:58:02,493:INFO:_master_model_container: 1
2025-03-30 17:58:02,493:INFO:_display_container: 2
2025-03-30 17:58:02,494:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 17:58:02,494:INFO:create_model() successfully completed......................................
2025-03-30 17:58:02,575:INFO:Initializing calibrate_model()
2025-03-30 17:58:02,575:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:58:02,575:INFO:Checking exceptions
2025-03-30 17:58:02,575:INFO:Preloading libraries
2025-03-30 17:58:02,575:INFO:Preparing display monitor
2025-03-30 17:58:02,575:INFO:Getting model name
2025-03-30 17:58:02,575:INFO:Base model : Logistic Regression
2025-03-30 17:58:02,575:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:58:02,575:INFO:SubProcess create_model() called ==================================
2025-03-30 17:58:02,575:INFO:Initializing create_model()
2025-03-30 17:58:02,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BFF1485E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:58:02,575:INFO:Checking exceptions
2025-03-30 17:58:02,575:INFO:Importing libraries
2025-03-30 17:58:02,575:INFO:Copying training dataset
2025-03-30 17:58:02,575:INFO:Defining folds
2025-03-30 17:58:02,575:INFO:Declaring metric variables
2025-03-30 17:58:02,575:INFO:Importing untrained model
2025-03-30 17:58:02,575:INFO:Declaring custom model
2025-03-30 17:58:02,575:INFO:Logistic Regression Imported successfully
2025-03-30 17:58:02,575:INFO:Starting cross validation
2025-03-30 17:58:02,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:58:04,394:INFO:Calculating mean and std
2025-03-30 17:58:04,394:INFO:Creating metrics dataframe
2025-03-30 17:58:04,394:INFO:Finalizing model
2025-03-30 17:58:04,522:INFO:Uploading results into container
2025-03-30 17:58:04,522:INFO:Uploading model into container now
2025-03-30 17:58:04,522:INFO:_master_model_container: 2
2025-03-30 17:58:04,522:INFO:_display_container: 3
2025-03-30 17:58:04,522:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:04,522:INFO:create_model() successfully completed......................................
2025-03-30 17:58:04,607:INFO:SubProcess create_model() end ==================================
2025-03-30 17:58:04,623:INFO:Creating Dashboard logs
2025-03-30 17:58:04,623:INFO:Model: Logistic Regression
2025-03-30 17:58:04,672:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:58:04,820:INFO:Initializing predict_model()
2025-03-30 17:58:04,820:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BFF1403B80>)
2025-03-30 17:58:04,820:INFO:Checking exceptions
2025-03-30 17:58:04,820:INFO:Preloading libraries
2025-03-30 17:58:04,969:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:04,978:INFO:_master_model_container: 2
2025-03-30 17:58:04,978:INFO:_display_container: 3
2025-03-30 17:58:04,978:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:04,978:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:58:05,064:INFO:Initializing finalize_model()
2025-03-30 17:58:05,064:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:58:05,065:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:05,067:INFO:Initializing create_model()
2025-03-30 17:58:05,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:58:05,067:INFO:Checking exceptions
2025-03-30 17:58:05,068:INFO:Importing libraries
2025-03-30 17:58:05,068:INFO:Copying training dataset
2025-03-30 17:58:05,068:INFO:Defining folds
2025-03-30 17:58:05,068:INFO:Declaring metric variables
2025-03-30 17:58:05,068:INFO:Importing untrained model
2025-03-30 17:58:05,068:INFO:Declaring custom model
2025-03-30 17:58:05,069:INFO:Logistic Regression Imported successfully
2025-03-30 17:58:05,069:INFO:Cross validation set to False
2025-03-30 17:58:05,070:INFO:Fitting Model
2025-03-30 17:58:05,222:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:58:05,222:INFO:create_model() successfully completed......................................
2025-03-30 17:58:05,319:INFO:Creating Dashboard logs
2025-03-30 17:58:05,319:INFO:Model: Logistic Regression
2025-03-30 17:58:05,369:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:58:05,493:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:05,493:INFO:_master_model_container: 2
2025-03-30 17:58:05,493:INFO:_display_container: 3
2025-03-30 17:58:05,493:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:58:05,493:INFO:finalize_model() successfully completed......................................
2025-03-30 17:58:05,604:INFO:Initializing create_model()
2025-03-30 17:58:05,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:58:05,604:INFO:Checking exceptions
2025-03-30 17:58:05,604:INFO:Importing libraries
2025-03-30 17:58:05,604:INFO:Copying training dataset
2025-03-30 17:58:05,604:INFO:Defining folds
2025-03-30 17:58:05,604:INFO:Declaring metric variables
2025-03-30 17:58:05,604:INFO:Importing untrained model
2025-03-30 17:58:05,604:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:58:05,604:INFO:Starting cross validation
2025-03-30 17:58:05,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:58:05,705:INFO:Calculating mean and std
2025-03-30 17:58:05,705:INFO:Creating metrics dataframe
2025-03-30 17:58:05,706:INFO:Finalizing model
2025-03-30 17:58:05,739:INFO:Creating Dashboard logs
2025-03-30 17:58:05,740:INFO:Model: Decision Tree Classifier
2025-03-30 17:58:05,786:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 17:58:05,934:INFO:Initializing predict_model()
2025-03-30 17:58:05,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BFF152B940>)
2025-03-30 17:58:05,934:INFO:Checking exceptions
2025-03-30 17:58:05,934:INFO:Preloading libraries
2025-03-30 17:58:06,082:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:06,082:INFO:Uploading results into container
2025-03-30 17:58:06,082:INFO:Uploading model into container now
2025-03-30 17:58:06,084:INFO:_master_model_container: 3
2025-03-30 17:58:06,084:INFO:_display_container: 4
2025-03-30 17:58:06,084:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 17:58:06,084:INFO:create_model() successfully completed......................................
2025-03-30 17:58:06,174:INFO:Initializing calibrate_model()
2025-03-30 17:58:06,174:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 17:58:06,174:INFO:Checking exceptions
2025-03-30 17:58:06,174:INFO:Preloading libraries
2025-03-30 17:58:06,174:INFO:Preparing display monitor
2025-03-30 17:58:06,174:INFO:Getting model name
2025-03-30 17:58:06,174:INFO:Base model : Decision Tree Classifier
2025-03-30 17:58:06,174:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 17:58:06,174:INFO:SubProcess create_model() called ==================================
2025-03-30 17:58:06,174:INFO:Initializing create_model()
2025-03-30 17:58:06,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BFF16251C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:58:06,174:INFO:Checking exceptions
2025-03-30 17:58:06,174:INFO:Importing libraries
2025-03-30 17:58:06,174:INFO:Copying training dataset
2025-03-30 17:58:06,174:INFO:Defining folds
2025-03-30 17:58:06,174:INFO:Declaring metric variables
2025-03-30 17:58:06,174:INFO:Importing untrained model
2025-03-30 17:58:06,174:INFO:Declaring custom model
2025-03-30 17:58:06,174:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:58:06,174:INFO:Starting cross validation
2025-03-30 17:58:06,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 17:58:06,464:INFO:Calculating mean and std
2025-03-30 17:58:06,464:INFO:Creating metrics dataframe
2025-03-30 17:58:06,464:INFO:Finalizing model
2025-03-30 17:58:06,610:INFO:Uploading results into container
2025-03-30 17:58:06,610:INFO:Uploading model into container now
2025-03-30 17:58:06,610:INFO:_master_model_container: 4
2025-03-30 17:58:06,610:INFO:_display_container: 5
2025-03-30 17:58:06,610:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:06,610:INFO:create_model() successfully completed......................................
2025-03-30 17:58:06,702:INFO:SubProcess create_model() end ==================================
2025-03-30 17:58:06,702:INFO:Creating Dashboard logs
2025-03-30 17:58:06,702:INFO:Model: Decision Tree Classifier
2025-03-30 17:58:06,757:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:58:06,969:INFO:Initializing predict_model()
2025-03-30 17:58:06,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BFF152B160>)
2025-03-30 17:58:06,969:INFO:Checking exceptions
2025-03-30 17:58:06,969:INFO:Preloading libraries
2025-03-30 17:58:07,170:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:07,170:INFO:_master_model_container: 4
2025-03-30 17:58:07,170:INFO:_display_container: 5
2025-03-30 17:58:07,170:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:07,170:INFO:calibrate_model() successfully completed......................................
2025-03-30 17:58:07,269:INFO:Initializing finalize_model()
2025-03-30 17:58:07,269:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 17:58:07,269:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 17:58:07,269:INFO:Initializing create_model()
2025-03-30 17:58:07,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BFEF73BC40>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:58:07,269:INFO:Checking exceptions
2025-03-30 17:58:07,269:INFO:Importing libraries
2025-03-30 17:58:07,269:INFO:Copying training dataset
2025-03-30 17:58:07,269:INFO:Defining folds
2025-03-30 17:58:07,269:INFO:Declaring metric variables
2025-03-30 17:58:07,269:INFO:Importing untrained model
2025-03-30 17:58:07,269:INFO:Declaring custom model
2025-03-30 17:58:07,274:INFO:Decision Tree Classifier Imported successfully
2025-03-30 17:58:07,274:INFO:Cross validation set to False
2025-03-30 17:58:07,274:INFO:Fitting Model
2025-03-30 17:58:07,469:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:58:07,469:INFO:create_model() successfully completed......................................
2025-03-30 17:58:07,569:INFO:Creating Dashboard logs
2025-03-30 17:58:07,571:INFO:Model: Decision Tree Classifier
2025-03-30 17:58:07,619:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 17:58:07,817:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 17:58:07,817:INFO:_master_model_container: 4
2025-03-30 17:58:07,817:INFO:_display_container: 5
2025-03-30 17:58:07,821:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:58:07,821:INFO:finalize_model() successfully completed......................................
2025-03-30 17:58:07,952:INFO:Initializing save_model()
2025-03-30 17:58:07,952:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:58:07,952:INFO:Adding model into prep_pipe
2025-03-30 17:58:07,952:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:58:07,955:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 17:58:07,959:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 17:58:07,959:INFO:save_model() successfully completed......................................
2025-03-30 17:58:10,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:58:10,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:58:10,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:58:10,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:58:11,800:INFO:Initializing load_model()
2025-03-30 17:58:11,800:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 17:59:58,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:59:58,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:59:58,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:59:58,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 17:59:58,557:INFO:PyCaret ClassificationExperiment
2025-03-30 17:59:58,557:INFO:Logging name: Treinamento
2025-03-30 17:59:58,557:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 17:59:58,557:INFO:version 3.3.2
2025-03-30 17:59:58,557:INFO:Initializing setup()
2025-03-30 17:59:58,557:INFO:self.USI: ab57
2025-03-30 17:59:58,557:INFO:self._variable_keys: {'fold_groups_param', 'USI', 'y', 'fold_shuffle_param', 'y_train', 'data', '_available_plots', 'gpu_param', 'html_param', 'X_test', 'log_plots_param', 'exp_name_log', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'fix_imbalance', 'memory', 'exp_id', 'pipeline', 'n_jobs_param', 'seed', 'X', 'is_multiclass', '_ml_usecase', 'idx', 'logging_param', 'target_param', 'y_test'}
2025-03-30 17:59:58,557:INFO:Checking environment
2025-03-30 17:59:58,557:INFO:python_version: 3.9.21
2025-03-30 17:59:58,557:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 17:59:58,557:INFO:machine: AMD64
2025-03-30 17:59:58,574:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 17:59:58,578:INFO:Memory: svmem(total=33685155840, available=21819478016, percent=35.2, used=11865677824, free=21819478016)
2025-03-30 17:59:58,578:INFO:Physical Core: 6
2025-03-30 17:59:58,578:INFO:Logical Core: 12
2025-03-30 17:59:58,578:INFO:Checking libraries
2025-03-30 17:59:58,578:INFO:System:
2025-03-30 17:59:58,578:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 17:59:58,578:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 17:59:58,578:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 17:59:58,578:INFO:PyCaret required dependencies:
2025-03-30 17:59:58,610:INFO:                 pip: 25.0
2025-03-30 17:59:58,610:INFO:          setuptools: 75.8.0
2025-03-30 17:59:58,610:INFO:             pycaret: 3.3.2
2025-03-30 17:59:58,610:INFO:             IPython: 8.18.1
2025-03-30 17:59:58,610:INFO:          ipywidgets: 8.1.5
2025-03-30 17:59:58,610:INFO:                tqdm: 4.67.1
2025-03-30 17:59:58,610:INFO:               numpy: 1.26.4
2025-03-30 17:59:58,610:INFO:              pandas: 1.5.3
2025-03-30 17:59:58,615:INFO:              jinja2: 3.1.6
2025-03-30 17:59:58,615:INFO:               scipy: 1.11.4
2025-03-30 17:59:58,615:INFO:              joblib: 1.3.2
2025-03-30 17:59:58,615:INFO:             sklearn: 1.4.2
2025-03-30 17:59:58,615:INFO:                pyod: 2.0.3
2025-03-30 17:59:58,615:INFO:            imblearn: 0.12.4
2025-03-30 17:59:58,615:INFO:   category_encoders: 2.6.4
2025-03-30 17:59:58,615:INFO:            lightgbm: 4.6.0
2025-03-30 17:59:58,615:INFO:               numba: 0.60.0
2025-03-30 17:59:58,615:INFO:            requests: 2.32.3
2025-03-30 17:59:58,615:INFO:          matplotlib: 3.7.5
2025-03-30 17:59:58,615:INFO:          scikitplot: 0.3.7
2025-03-30 17:59:58,615:INFO:         yellowbrick: 1.5
2025-03-30 17:59:58,615:INFO:              plotly: 5.24.1
2025-03-30 17:59:58,615:INFO:    plotly-resampler: Not installed
2025-03-30 17:59:58,615:INFO:             kaleido: 0.2.1
2025-03-30 17:59:58,615:INFO:           schemdraw: 0.15
2025-03-30 17:59:58,615:INFO:         statsmodels: 0.14.4
2025-03-30 17:59:58,615:INFO:              sktime: 0.26.0
2025-03-30 17:59:58,615:INFO:               tbats: 1.1.3
2025-03-30 17:59:58,615:INFO:            pmdarima: 2.0.4
2025-03-30 17:59:58,615:INFO:              psutil: 7.0.0
2025-03-30 17:59:58,615:INFO:          markupsafe: 3.0.2
2025-03-30 17:59:58,615:INFO:             pickle5: Not installed
2025-03-30 17:59:58,615:INFO:         cloudpickle: 2.2.1
2025-03-30 17:59:58,615:INFO:         deprecation: 2.1.0
2025-03-30 17:59:58,615:INFO:              xxhash: 3.5.0
2025-03-30 17:59:58,615:INFO:           wurlitzer: Not installed
2025-03-30 17:59:58,615:INFO:PyCaret optional dependencies:
2025-03-30 17:59:58,932:INFO:                shap: 0.47.1
2025-03-30 17:59:58,932:INFO:           interpret: Not installed
2025-03-30 17:59:58,932:INFO:                umap: Not installed
2025-03-30 17:59:58,932:INFO:     ydata_profiling: Not installed
2025-03-30 17:59:58,932:INFO:  explainerdashboard: Not installed
2025-03-30 17:59:58,932:INFO:             autoviz: Not installed
2025-03-30 17:59:58,932:INFO:           fairlearn: Not installed
2025-03-30 17:59:58,932:INFO:          deepchecks: Not installed
2025-03-30 17:59:58,932:INFO:             xgboost: Not installed
2025-03-30 17:59:58,932:INFO:            catboost: Not installed
2025-03-30 17:59:58,932:INFO:              kmodes: Not installed
2025-03-30 17:59:58,932:INFO:             mlxtend: Not installed
2025-03-30 17:59:58,932:INFO:       statsforecast: Not installed
2025-03-30 17:59:58,932:INFO:        tune_sklearn: Not installed
2025-03-30 17:59:58,932:INFO:                 ray: Not installed
2025-03-30 17:59:58,932:INFO:            hyperopt: Not installed
2025-03-30 17:59:58,932:INFO:              optuna: Not installed
2025-03-30 17:59:58,932:INFO:               skopt: Not installed
2025-03-30 17:59:58,932:INFO:              mlflow: 2.21.0
2025-03-30 17:59:58,932:INFO:              gradio: Not installed
2025-03-30 17:59:58,932:INFO:             fastapi: 0.115.11
2025-03-30 17:59:58,932:INFO:             uvicorn: 0.34.0
2025-03-30 17:59:58,932:INFO:              m2cgen: Not installed
2025-03-30 17:59:58,932:INFO:           evidently: Not installed
2025-03-30 17:59:58,932:INFO:               fugue: Not installed
2025-03-30 17:59:58,932:INFO:           streamlit: 1.43.2
2025-03-30 17:59:58,932:INFO:             prophet: Not installed
2025-03-30 17:59:58,932:INFO:None
2025-03-30 17:59:58,932:INFO:Set up data.
2025-03-30 17:59:58,938:INFO:Set up folding strategy.
2025-03-30 17:59:58,938:INFO:Set up train/test split.
2025-03-30 17:59:58,941:INFO:Set up index.
2025-03-30 17:59:58,941:INFO:Assigning column types.
2025-03-30 17:59:58,945:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 17:59:58,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:59:58,977:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:59:59,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 17:59:59,035:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:59:59,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 17:59:59,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:59:59,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,122:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 17:59:59,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,151:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 17:59:59,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,246:INFO:Preparing preprocessing pipeline...
2025-03-30 17:59:59,246:INFO:Set up simple imputation.
2025-03-30 17:59:59,262:INFO:Finished creating preprocessing pipeline.
2025-03-30 17:59:59,272:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:59:59,272:INFO:Creating final display dataframe.
2025-03-30 17:59:59,306:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             ab57
2025-03-30 17:59:59,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 17:59:59,417:INFO:Logging experiment in loggers
2025-03-30 17:59:59,648:INFO:SubProcess save_model() called ==================================
2025-03-30 17:59:59,652:INFO:Initializing save_model()
2025-03-30 17:59:59,652:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp6pf27c5j\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 17:59:59,654:INFO:Adding model into prep_pipe
2025-03-30 17:59:59,654:WARNING:Only Model saved as it was a pipeline.
2025-03-30 17:59:59,658:INFO:C:\Users\Ian\AppData\Local\Temp\tmp6pf27c5j\Transformation Pipeline.pkl saved in current working directory
2025-03-30 17:59:59,658:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 17:59:59,658:INFO:save_model() successfully completed......................................
2025-03-30 17:59:59,734:INFO:SubProcess save_model() end ==================================
2025-03-30 17:59:59,766:INFO:setup() successfully completed in 0.87s...............
2025-03-30 17:59:59,766:INFO:Initializing create_model()
2025-03-30 17:59:59,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 17:59:59,766:INFO:Checking exceptions
2025-03-30 17:59:59,766:INFO:Importing libraries
2025-03-30 17:59:59,766:INFO:Copying training dataset
2025-03-30 17:59:59,766:INFO:Defining folds
2025-03-30 17:59:59,766:INFO:Declaring metric variables
2025-03-30 17:59:59,766:INFO:Importing untrained model
2025-03-30 17:59:59,766:INFO:Logistic Regression Imported successfully
2025-03-30 17:59:59,766:INFO:Starting cross validation
2025-03-30 17:59:59,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:00:03,313:INFO:Calculating mean and std
2025-03-30 18:00:03,313:INFO:Creating metrics dataframe
2025-03-30 18:00:03,315:INFO:Finalizing model
2025-03-30 18:00:03,348:INFO:Creating Dashboard logs
2025-03-30 18:00:03,352:INFO:Model: Logistic Regression
2025-03-30 18:00:03,398:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:00:03,529:INFO:Initializing predict_model()
2025-03-30 18:00:03,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FDEB8F39D0>)
2025-03-30 18:00:03,530:INFO:Checking exceptions
2025-03-30 18:00:03,530:INFO:Preloading libraries
2025-03-30 18:00:03,656:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:00:03,686:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:03,686:INFO:Uploading results into container
2025-03-30 18:00:03,688:INFO:Uploading model into container now
2025-03-30 18:00:03,690:INFO:_master_model_container: 1
2025-03-30 18:00:03,690:INFO:_display_container: 2
2025-03-30 18:00:03,690:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:00:03,690:INFO:create_model() successfully completed......................................
2025-03-30 18:00:03,774:INFO:Initializing calibrate_model()
2025-03-30 18:00:03,774:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:00:03,774:INFO:Checking exceptions
2025-03-30 18:00:03,774:INFO:Preloading libraries
2025-03-30 18:00:03,774:INFO:Preparing display monitor
2025-03-30 18:00:03,774:INFO:Getting model name
2025-03-30 18:00:03,774:INFO:Base model : Logistic Regression
2025-03-30 18:00:03,774:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:00:03,774:INFO:SubProcess create_model() called ==================================
2025-03-30 18:00:03,774:INFO:Initializing create_model()
2025-03-30 18:00:03,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FDEA172AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:00:03,774:INFO:Checking exceptions
2025-03-30 18:00:03,774:INFO:Importing libraries
2025-03-30 18:00:03,774:INFO:Copying training dataset
2025-03-30 18:00:03,774:INFO:Defining folds
2025-03-30 18:00:03,774:INFO:Declaring metric variables
2025-03-30 18:00:03,774:INFO:Importing untrained model
2025-03-30 18:00:03,774:INFO:Declaring custom model
2025-03-30 18:00:03,789:INFO:Logistic Regression Imported successfully
2025-03-30 18:00:03,789:INFO:Starting cross validation
2025-03-30 18:00:03,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:00:05,647:INFO:Calculating mean and std
2025-03-30 18:00:05,647:INFO:Creating metrics dataframe
2025-03-30 18:00:05,650:INFO:Finalizing model
2025-03-30 18:00:05,787:INFO:Uploading results into container
2025-03-30 18:00:05,787:INFO:Uploading model into container now
2025-03-30 18:00:05,787:INFO:_master_model_container: 2
2025-03-30 18:00:05,787:INFO:_display_container: 3
2025-03-30 18:00:05,787:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:05,787:INFO:create_model() successfully completed......................................
2025-03-30 18:00:05,872:INFO:SubProcess create_model() end ==================================
2025-03-30 18:00:05,872:INFO:Creating Dashboard logs
2025-03-30 18:00:05,872:INFO:Model: Logistic Regression
2025-03-30 18:00:05,923:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:00:06,063:INFO:Initializing predict_model()
2025-03-30 18:00:06,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FDEB8F3790>)
2025-03-30 18:00:06,063:INFO:Checking exceptions
2025-03-30 18:00:06,063:INFO:Preloading libraries
2025-03-30 18:00:06,219:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:06,225:INFO:_master_model_container: 2
2025-03-30 18:00:06,225:INFO:_display_container: 3
2025-03-30 18:00:06,225:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:06,225:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:00:06,315:INFO:Initializing finalize_model()
2025-03-30 18:00:06,315:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:00:06,315:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:06,318:INFO:Initializing create_model()
2025-03-30 18:00:06,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:00:06,318:INFO:Checking exceptions
2025-03-30 18:00:06,318:INFO:Importing libraries
2025-03-30 18:00:06,319:INFO:Copying training dataset
2025-03-30 18:00:06,319:INFO:Defining folds
2025-03-30 18:00:06,319:INFO:Declaring metric variables
2025-03-30 18:00:06,319:INFO:Importing untrained model
2025-03-30 18:00:06,319:INFO:Declaring custom model
2025-03-30 18:00:06,319:INFO:Logistic Regression Imported successfully
2025-03-30 18:00:06,320:INFO:Cross validation set to False
2025-03-30 18:00:06,320:INFO:Fitting Model
2025-03-30 18:00:06,482:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:00:06,482:INFO:create_model() successfully completed......................................
2025-03-30 18:00:06,561:INFO:Creating Dashboard logs
2025-03-30 18:00:06,561:INFO:Model: Logistic Regression
2025-03-30 18:00:06,609:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:00:06,749:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:06,749:INFO:_master_model_container: 2
2025-03-30 18:00:06,749:INFO:_display_container: 3
2025-03-30 18:00:06,749:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:00:06,749:INFO:finalize_model() successfully completed......................................
2025-03-30 18:00:06,850:INFO:Initializing create_model()
2025-03-30 18:00:06,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:00:06,850:INFO:Checking exceptions
2025-03-30 18:00:06,850:INFO:Importing libraries
2025-03-30 18:00:06,850:INFO:Copying training dataset
2025-03-30 18:00:06,850:INFO:Defining folds
2025-03-30 18:00:06,850:INFO:Declaring metric variables
2025-03-30 18:00:06,850:INFO:Importing untrained model
2025-03-30 18:00:06,850:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:00:06,850:INFO:Starting cross validation
2025-03-30 18:00:06,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:00:06,938:INFO:Calculating mean and std
2025-03-30 18:00:06,938:INFO:Creating metrics dataframe
2025-03-30 18:00:06,940:INFO:Finalizing model
2025-03-30 18:00:06,973:INFO:Creating Dashboard logs
2025-03-30 18:00:06,973:INFO:Model: Decision Tree Classifier
2025-03-30 18:00:07,012:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:00:07,178:INFO:Initializing predict_model()
2025-03-30 18:00:07,178:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FDEBC1F820>)
2025-03-30 18:00:07,178:INFO:Checking exceptions
2025-03-30 18:00:07,178:INFO:Preloading libraries
2025-03-30 18:00:07,318:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:07,318:INFO:Uploading results into container
2025-03-30 18:00:07,318:INFO:Uploading model into container now
2025-03-30 18:00:07,318:INFO:_master_model_container: 3
2025-03-30 18:00:07,318:INFO:_display_container: 4
2025-03-30 18:00:07,318:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:00:07,318:INFO:create_model() successfully completed......................................
2025-03-30 18:00:07,417:INFO:Initializing calibrate_model()
2025-03-30 18:00:07,417:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:00:07,417:INFO:Checking exceptions
2025-03-30 18:00:07,424:INFO:Preloading libraries
2025-03-30 18:00:07,424:INFO:Preparing display monitor
2025-03-30 18:00:07,424:INFO:Getting model name
2025-03-30 18:00:07,424:INFO:Base model : Decision Tree Classifier
2025-03-30 18:00:07,424:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:00:07,424:INFO:SubProcess create_model() called ==================================
2025-03-30 18:00:07,424:INFO:Initializing create_model()
2025-03-30 18:00:07,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FDEBD151C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:00:07,424:INFO:Checking exceptions
2025-03-30 18:00:07,424:INFO:Importing libraries
2025-03-30 18:00:07,424:INFO:Copying training dataset
2025-03-30 18:00:07,424:INFO:Defining folds
2025-03-30 18:00:07,424:INFO:Declaring metric variables
2025-03-30 18:00:07,433:INFO:Importing untrained model
2025-03-30 18:00:07,433:INFO:Declaring custom model
2025-03-30 18:00:07,433:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:00:07,433:INFO:Starting cross validation
2025-03-30 18:00:07,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:00:07,688:INFO:Calculating mean and std
2025-03-30 18:00:07,688:INFO:Creating metrics dataframe
2025-03-30 18:00:07,690:INFO:Finalizing model
2025-03-30 18:00:07,839:INFO:Uploading results into container
2025-03-30 18:00:07,841:INFO:Uploading model into container now
2025-03-30 18:00:07,841:INFO:_master_model_container: 4
2025-03-30 18:00:07,841:INFO:_display_container: 5
2025-03-30 18:00:07,841:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:07,841:INFO:create_model() successfully completed......................................
2025-03-30 18:00:07,932:INFO:SubProcess create_model() end ==================================
2025-03-30 18:00:07,934:INFO:Creating Dashboard logs
2025-03-30 18:00:07,934:INFO:Model: Decision Tree Classifier
2025-03-30 18:00:07,978:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:00:08,273:INFO:Initializing predict_model()
2025-03-30 18:00:08,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FDEBC1FC10>)
2025-03-30 18:00:08,273:INFO:Checking exceptions
2025-03-30 18:00:08,273:INFO:Preloading libraries
2025-03-30 18:00:08,423:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:08,439:INFO:_master_model_container: 4
2025-03-30 18:00:08,439:INFO:_display_container: 5
2025-03-30 18:00:08,439:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:08,439:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:00:08,538:INFO:Initializing finalize_model()
2025-03-30 18:00:08,538:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:00:08,539:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:00:08,541:INFO:Initializing create_model()
2025-03-30 18:00:08,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FDE9E3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:00:08,541:INFO:Checking exceptions
2025-03-30 18:00:08,542:INFO:Importing libraries
2025-03-30 18:00:08,542:INFO:Copying training dataset
2025-03-30 18:00:08,542:INFO:Defining folds
2025-03-30 18:00:08,542:INFO:Declaring metric variables
2025-03-30 18:00:08,542:INFO:Importing untrained model
2025-03-30 18:00:08,542:INFO:Declaring custom model
2025-03-30 18:00:08,542:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:00:08,543:INFO:Cross validation set to False
2025-03-30 18:00:08,543:INFO:Fitting Model
2025-03-30 18:00:08,721:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:00:08,721:INFO:create_model() successfully completed......................................
2025-03-30 18:00:08,817:INFO:Creating Dashboard logs
2025-03-30 18:00:08,817:INFO:Model: Decision Tree Classifier
2025-03-30 18:00:08,854:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:00:09,068:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:00:09,068:INFO:_master_model_container: 4
2025-03-30 18:00:09,068:INFO:_display_container: 5
2025-03-30 18:00:09,071:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:00:09,071:INFO:finalize_model() successfully completed......................................
2025-03-30 18:00:09,168:INFO:Initializing save_model()
2025-03-30 18:00:09,168:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:00:09,168:INFO:Adding model into prep_pipe
2025-03-30 18:00:09,168:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:00:09,168:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:00:09,183:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:00:09,183:INFO:save_model() successfully completed......................................
2025-03-30 18:00:11,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:00:11,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:00:11,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:00:11,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:00:13,007:INFO:Initializing load_model()
2025-03-30 18:00:13,007:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:01:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:07,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:08,357:INFO:PyCaret ClassificationExperiment
2025-03-30 18:01:08,357:INFO:Logging name: Treinamento
2025-03-30 18:01:08,357:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:01:08,357:INFO:version 3.3.2
2025-03-30 18:01:08,357:INFO:Initializing setup()
2025-03-30 18:01:08,357:INFO:self.USI: 0620
2025-03-30 18:01:08,357:INFO:self._variable_keys: {'logging_param', 'seed', 'X_test', 'X', 'log_plots_param', 'html_param', 'fold_shuffle_param', 'pipeline', 'is_multiclass', 'target_param', 'gpu_n_jobs_param', 'USI', 'fix_imbalance', 'n_jobs_param', 'data', 'exp_name_log', 'exp_id', 'idx', 'fold_groups_param', 'y', 'y_test', 'X_train', '_ml_usecase', 'memory', '_available_plots', 'y_train', 'fold_generator', 'gpu_param'}
2025-03-30 18:01:08,357:INFO:Checking environment
2025-03-30 18:01:08,357:INFO:python_version: 3.9.21
2025-03-30 18:01:08,357:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:01:08,357:INFO:machine: AMD64
2025-03-30 18:01:08,378:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:01:08,379:INFO:Memory: svmem(total=33685155840, available=21843750912, percent=35.2, used=11841404928, free=21843750912)
2025-03-30 18:01:08,379:INFO:Physical Core: 6
2025-03-30 18:01:08,379:INFO:Logical Core: 12
2025-03-30 18:01:08,379:INFO:Checking libraries
2025-03-30 18:01:08,379:INFO:System:
2025-03-30 18:01:08,379:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:01:08,379:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:01:08,379:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:01:08,379:INFO:PyCaret required dependencies:
2025-03-30 18:01:08,407:INFO:                 pip: 25.0
2025-03-30 18:01:08,407:INFO:          setuptools: 75.8.0
2025-03-30 18:01:08,407:INFO:             pycaret: 3.3.2
2025-03-30 18:01:08,407:INFO:             IPython: 8.18.1
2025-03-30 18:01:08,407:INFO:          ipywidgets: 8.1.5
2025-03-30 18:01:08,407:INFO:                tqdm: 4.67.1
2025-03-30 18:01:08,407:INFO:               numpy: 1.26.4
2025-03-30 18:01:08,407:INFO:              pandas: 1.5.3
2025-03-30 18:01:08,407:INFO:              jinja2: 3.1.6
2025-03-30 18:01:08,407:INFO:               scipy: 1.11.4
2025-03-30 18:01:08,407:INFO:              joblib: 1.3.2
2025-03-30 18:01:08,407:INFO:             sklearn: 1.4.2
2025-03-30 18:01:08,407:INFO:                pyod: 2.0.3
2025-03-30 18:01:08,407:INFO:            imblearn: 0.12.4
2025-03-30 18:01:08,407:INFO:   category_encoders: 2.6.4
2025-03-30 18:01:08,407:INFO:            lightgbm: 4.6.0
2025-03-30 18:01:08,407:INFO:               numba: 0.60.0
2025-03-30 18:01:08,407:INFO:            requests: 2.32.3
2025-03-30 18:01:08,407:INFO:          matplotlib: 3.7.5
2025-03-30 18:01:08,407:INFO:          scikitplot: 0.3.7
2025-03-30 18:01:08,407:INFO:         yellowbrick: 1.5
2025-03-30 18:01:08,407:INFO:              plotly: 5.24.1
2025-03-30 18:01:08,407:INFO:    plotly-resampler: Not installed
2025-03-30 18:01:08,407:INFO:             kaleido: 0.2.1
2025-03-30 18:01:08,407:INFO:           schemdraw: 0.15
2025-03-30 18:01:08,407:INFO:         statsmodels: 0.14.4
2025-03-30 18:01:08,407:INFO:              sktime: 0.26.0
2025-03-30 18:01:08,407:INFO:               tbats: 1.1.3
2025-03-30 18:01:08,407:INFO:            pmdarima: 2.0.4
2025-03-30 18:01:08,407:INFO:              psutil: 7.0.0
2025-03-30 18:01:08,407:INFO:          markupsafe: 3.0.2
2025-03-30 18:01:08,407:INFO:             pickle5: Not installed
2025-03-30 18:01:08,407:INFO:         cloudpickle: 2.2.1
2025-03-30 18:01:08,407:INFO:         deprecation: 2.1.0
2025-03-30 18:01:08,407:INFO:              xxhash: 3.5.0
2025-03-30 18:01:08,407:INFO:           wurlitzer: Not installed
2025-03-30 18:01:08,407:INFO:PyCaret optional dependencies:
2025-03-30 18:01:08,723:INFO:                shap: 0.47.1
2025-03-30 18:01:08,723:INFO:           interpret: Not installed
2025-03-30 18:01:08,723:INFO:                umap: Not installed
2025-03-30 18:01:08,723:INFO:     ydata_profiling: Not installed
2025-03-30 18:01:08,723:INFO:  explainerdashboard: Not installed
2025-03-30 18:01:08,723:INFO:             autoviz: Not installed
2025-03-30 18:01:08,723:INFO:           fairlearn: Not installed
2025-03-30 18:01:08,723:INFO:          deepchecks: Not installed
2025-03-30 18:01:08,723:INFO:             xgboost: Not installed
2025-03-30 18:01:08,723:INFO:            catboost: Not installed
2025-03-30 18:01:08,723:INFO:              kmodes: Not installed
2025-03-30 18:01:08,723:INFO:             mlxtend: Not installed
2025-03-30 18:01:08,723:INFO:       statsforecast: Not installed
2025-03-30 18:01:08,723:INFO:        tune_sklearn: Not installed
2025-03-30 18:01:08,723:INFO:                 ray: Not installed
2025-03-30 18:01:08,723:INFO:            hyperopt: Not installed
2025-03-30 18:01:08,723:INFO:              optuna: Not installed
2025-03-30 18:01:08,723:INFO:               skopt: Not installed
2025-03-30 18:01:08,723:INFO:              mlflow: 2.21.0
2025-03-30 18:01:08,723:INFO:              gradio: Not installed
2025-03-30 18:01:08,723:INFO:             fastapi: 0.115.11
2025-03-30 18:01:08,723:INFO:             uvicorn: 0.34.0
2025-03-30 18:01:08,723:INFO:              m2cgen: Not installed
2025-03-30 18:01:08,723:INFO:           evidently: Not installed
2025-03-30 18:01:08,723:INFO:               fugue: Not installed
2025-03-30 18:01:08,723:INFO:           streamlit: 1.43.2
2025-03-30 18:01:08,723:INFO:             prophet: Not installed
2025-03-30 18:01:08,723:INFO:None
2025-03-30 18:01:08,723:INFO:Set up data.
2025-03-30 18:01:08,740:INFO:Set up folding strategy.
2025-03-30 18:01:08,740:INFO:Set up train/test split.
2025-03-30 18:01:08,740:INFO:Set up index.
2025-03-30 18:01:08,740:INFO:Assigning column types.
2025-03-30 18:01:08,740:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:01:08,779:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,856:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:01:08,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:01:08,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:08,954:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:01:09,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,056:INFO:Preparing preprocessing pipeline...
2025-03-30 18:01:09,056:INFO:Set up simple imputation.
2025-03-30 18:01:09,080:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:01:09,080:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:01:09,080:INFO:Creating final display dataframe.
2025-03-30 18:01:09,119:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             0620
2025-03-30 18:01:09,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:01:09,214:INFO:Logging experiment in loggers
2025-03-30 18:01:09,462:INFO:SubProcess save_model() called ==================================
2025-03-30 18:01:09,465:INFO:Initializing save_model()
2025-03-30 18:01:09,465:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmplp3zjkcv\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:01:09,466:INFO:Adding model into prep_pipe
2025-03-30 18:01:09,466:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:01:09,473:INFO:C:\Users\Ian\AppData\Local\Temp\tmplp3zjkcv\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:01:09,473:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:01:09,473:INFO:save_model() successfully completed......................................
2025-03-30 18:01:09,554:INFO:SubProcess save_model() end ==================================
2025-03-30 18:01:09,589:INFO:setup() successfully completed in 0.86s...............
2025-03-30 18:01:09,589:INFO:Initializing create_model()
2025-03-30 18:01:09,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:09,589:INFO:Checking exceptions
2025-03-30 18:01:09,589:INFO:Importing libraries
2025-03-30 18:01:09,589:INFO:Copying training dataset
2025-03-30 18:01:09,589:INFO:Defining folds
2025-03-30 18:01:09,589:INFO:Declaring metric variables
2025-03-30 18:01:09,589:INFO:Importing untrained model
2025-03-30 18:01:09,589:INFO:Logistic Regression Imported successfully
2025-03-30 18:01:09,589:INFO:Starting cross validation
2025-03-30 18:01:09,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:01:13,159:INFO:Calculating mean and std
2025-03-30 18:01:13,159:INFO:Creating metrics dataframe
2025-03-30 18:01:13,163:INFO:Finalizing model
2025-03-30 18:01:13,206:INFO:Creating Dashboard logs
2025-03-30 18:01:13,206:INFO:Model: Logistic Regression
2025-03-30 18:01:13,258:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:01:13,414:INFO:Initializing predict_model()
2025-03-30 18:01:13,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A559A639D0>)
2025-03-30 18:01:13,414:INFO:Checking exceptions
2025-03-30 18:01:13,414:INFO:Preloading libraries
2025-03-30 18:01:13,568:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:01:13,584:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:13,584:INFO:Uploading results into container
2025-03-30 18:01:13,584:INFO:Uploading model into container now
2025-03-30 18:01:13,596:INFO:_master_model_container: 1
2025-03-30 18:01:13,596:INFO:_display_container: 2
2025-03-30 18:01:13,596:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:01:13,596:INFO:create_model() successfully completed......................................
2025-03-30 18:01:13,696:INFO:Initializing calibrate_model()
2025-03-30 18:01:13,696:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:01:13,697:INFO:Checking exceptions
2025-03-30 18:01:13,699:INFO:Preloading libraries
2025-03-30 18:01:13,700:INFO:Preparing display monitor
2025-03-30 18:01:13,701:INFO:Getting model name
2025-03-30 18:01:13,701:INFO:Base model : Logistic Regression
2025-03-30 18:01:13,702:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:01:13,702:INFO:SubProcess create_model() called ==================================
2025-03-30 18:01:13,704:INFO:Initializing create_model()
2025-03-30 18:01:13,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A5582E2AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:13,704:INFO:Checking exceptions
2025-03-30 18:01:13,704:INFO:Importing libraries
2025-03-30 18:01:13,704:INFO:Copying training dataset
2025-03-30 18:01:13,711:INFO:Defining folds
2025-03-30 18:01:13,711:INFO:Declaring metric variables
2025-03-30 18:01:13,711:INFO:Importing untrained model
2025-03-30 18:01:13,711:INFO:Declaring custom model
2025-03-30 18:01:13,711:INFO:Logistic Regression Imported successfully
2025-03-30 18:01:13,712:INFO:Starting cross validation
2025-03-30 18:01:13,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:01:15,679:INFO:Calculating mean and std
2025-03-30 18:01:15,679:INFO:Creating metrics dataframe
2025-03-30 18:01:15,679:INFO:Finalizing model
2025-03-30 18:01:15,806:INFO:Uploading results into container
2025-03-30 18:01:15,806:INFO:Uploading model into container now
2025-03-30 18:01:15,806:INFO:_master_model_container: 2
2025-03-30 18:01:15,806:INFO:_display_container: 3
2025-03-30 18:01:15,806:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:15,806:INFO:create_model() successfully completed......................................
2025-03-30 18:01:15,892:INFO:SubProcess create_model() end ==================================
2025-03-30 18:01:15,907:INFO:Creating Dashboard logs
2025-03-30 18:01:15,907:INFO:Model: Logistic Regression
2025-03-30 18:01:15,956:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:01:16,091:INFO:Initializing predict_model()
2025-03-30 18:01:16,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A559C61B80>)
2025-03-30 18:01:16,091:INFO:Checking exceptions
2025-03-30 18:01:16,091:INFO:Preloading libraries
2025-03-30 18:01:16,245:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:16,256:INFO:_master_model_container: 2
2025-03-30 18:01:16,256:INFO:_display_container: 3
2025-03-30 18:01:16,260:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:16,260:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:01:16,340:INFO:Initializing finalize_model()
2025-03-30 18:01:16,340:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:01:16,340:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:16,340:INFO:Initializing create_model()
2025-03-30 18:01:16,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:16,340:INFO:Checking exceptions
2025-03-30 18:01:16,340:INFO:Importing libraries
2025-03-30 18:01:16,340:INFO:Copying training dataset
2025-03-30 18:01:16,340:INFO:Defining folds
2025-03-30 18:01:16,340:INFO:Declaring metric variables
2025-03-30 18:01:16,340:INFO:Importing untrained model
2025-03-30 18:01:16,340:INFO:Declaring custom model
2025-03-30 18:01:16,340:INFO:Logistic Regression Imported successfully
2025-03-30 18:01:16,340:INFO:Cross validation set to False
2025-03-30 18:01:16,340:INFO:Fitting Model
2025-03-30 18:01:16,502:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:01:16,502:INFO:create_model() successfully completed......................................
2025-03-30 18:01:16,582:INFO:Creating Dashboard logs
2025-03-30 18:01:16,582:INFO:Model: Logistic Regression
2025-03-30 18:01:16,644:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:01:16,782:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:16,782:INFO:_master_model_container: 2
2025-03-30 18:01:16,782:INFO:_display_container: 3
2025-03-30 18:01:16,785:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:01:16,785:INFO:finalize_model() successfully completed......................................
2025-03-30 18:01:16,890:INFO:Initializing create_model()
2025-03-30 18:01:16,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:16,890:INFO:Checking exceptions
2025-03-30 18:01:16,890:INFO:Importing libraries
2025-03-30 18:01:16,890:INFO:Copying training dataset
2025-03-30 18:01:16,890:INFO:Defining folds
2025-03-30 18:01:16,890:INFO:Declaring metric variables
2025-03-30 18:01:16,890:INFO:Importing untrained model
2025-03-30 18:01:16,890:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:01:16,890:INFO:Starting cross validation
2025-03-30 18:01:16,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:01:17,023:INFO:Calculating mean and std
2025-03-30 18:01:17,023:INFO:Creating metrics dataframe
2025-03-30 18:01:17,023:INFO:Finalizing model
2025-03-30 18:01:17,057:INFO:Creating Dashboard logs
2025-03-30 18:01:17,057:INFO:Model: Decision Tree Classifier
2025-03-30 18:01:17,106:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:01:17,295:INFO:Initializing predict_model()
2025-03-30 18:01:17,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A559D8E940>)
2025-03-30 18:01:17,295:INFO:Checking exceptions
2025-03-30 18:01:17,295:INFO:Preloading libraries
2025-03-30 18:01:17,457:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:17,457:INFO:Uploading results into container
2025-03-30 18:01:17,457:INFO:Uploading model into container now
2025-03-30 18:01:17,474:INFO:_master_model_container: 3
2025-03-30 18:01:17,474:INFO:_display_container: 4
2025-03-30 18:01:17,474:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:01:17,474:INFO:create_model() successfully completed......................................
2025-03-30 18:01:17,572:INFO:Initializing calibrate_model()
2025-03-30 18:01:17,572:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:01:17,572:INFO:Checking exceptions
2025-03-30 18:01:17,575:INFO:Preloading libraries
2025-03-30 18:01:17,575:INFO:Preparing display monitor
2025-03-30 18:01:17,576:INFO:Getting model name
2025-03-30 18:01:17,577:INFO:Base model : Decision Tree Classifier
2025-03-30 18:01:17,577:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:01:17,577:INFO:SubProcess create_model() called ==================================
2025-03-30 18:01:17,577:INFO:Initializing create_model()
2025-03-30 18:01:17,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A5570C8A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:17,577:INFO:Checking exceptions
2025-03-30 18:01:17,577:INFO:Importing libraries
2025-03-30 18:01:17,577:INFO:Copying training dataset
2025-03-30 18:01:17,577:INFO:Defining folds
2025-03-30 18:01:17,577:INFO:Declaring metric variables
2025-03-30 18:01:17,577:INFO:Importing untrained model
2025-03-30 18:01:17,577:INFO:Declaring custom model
2025-03-30 18:01:17,577:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:01:17,577:INFO:Starting cross validation
2025-03-30 18:01:17,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:01:17,835:INFO:Calculating mean and std
2025-03-30 18:01:17,835:INFO:Creating metrics dataframe
2025-03-30 18:01:17,837:INFO:Finalizing model
2025-03-30 18:01:17,977:INFO:Uploading results into container
2025-03-30 18:01:17,977:INFO:Uploading model into container now
2025-03-30 18:01:17,978:INFO:_master_model_container: 4
2025-03-30 18:01:17,978:INFO:_display_container: 5
2025-03-30 18:01:17,978:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:17,978:INFO:create_model() successfully completed......................................
2025-03-30 18:01:18,080:INFO:SubProcess create_model() end ==================================
2025-03-30 18:01:18,080:INFO:Creating Dashboard logs
2025-03-30 18:01:18,080:INFO:Model: Decision Tree Classifier
2025-03-30 18:01:18,140:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:01:18,326:INFO:Initializing predict_model()
2025-03-30 18:01:18,326:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A559D8E160>)
2025-03-30 18:01:18,326:INFO:Checking exceptions
2025-03-30 18:01:18,326:INFO:Preloading libraries
2025-03-30 18:01:18,506:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:18,513:INFO:_master_model_container: 4
2025-03-30 18:01:18,513:INFO:_display_container: 5
2025-03-30 18:01:18,513:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:18,513:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:01:18,595:INFO:Initializing finalize_model()
2025-03-30 18:01:18,595:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:01:18,595:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:01:18,595:INFO:Initializing create_model()
2025-03-30 18:01:18,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A557FBACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:01:18,595:INFO:Checking exceptions
2025-03-30 18:01:18,595:INFO:Importing libraries
2025-03-30 18:01:18,595:INFO:Copying training dataset
2025-03-30 18:01:18,606:INFO:Defining folds
2025-03-30 18:01:18,606:INFO:Declaring metric variables
2025-03-30 18:01:18,606:INFO:Importing untrained model
2025-03-30 18:01:18,606:INFO:Declaring custom model
2025-03-30 18:01:18,606:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:01:18,607:INFO:Cross validation set to False
2025-03-30 18:01:18,607:INFO:Fitting Model
2025-03-30 18:01:18,803:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:01:18,803:INFO:create_model() successfully completed......................................
2025-03-30 18:01:18,884:INFO:Creating Dashboard logs
2025-03-30 18:01:18,885:INFO:Model: Decision Tree Classifier
2025-03-30 18:01:18,923:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:01:19,123:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:01:19,123:INFO:_master_model_container: 4
2025-03-30 18:01:19,123:INFO:_display_container: 5
2025-03-30 18:01:19,123:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:01:19,123:INFO:finalize_model() successfully completed......................................
2025-03-30 18:01:19,252:INFO:Initializing save_model()
2025-03-30 18:01:19,252:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:01:19,252:INFO:Adding model into prep_pipe
2025-03-30 18:01:19,252:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:01:19,259:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:01:19,259:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:01:19,259:INFO:save_model() successfully completed......................................
2025-03-30 18:01:22,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:22,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:22,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:22,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:01:23,296:INFO:Initializing load_model()
2025-03-30 18:01:23,296:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:06:43,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:43,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:43,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:43,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:44,124:INFO:PyCaret ClassificationExperiment
2025-03-30 18:06:44,124:INFO:Logging name: Treinamento
2025-03-30 18:06:44,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:06:44,124:INFO:version 3.3.2
2025-03-30 18:06:44,124:INFO:Initializing setup()
2025-03-30 18:06:44,124:INFO:self.USI: 9106
2025-03-30 18:06:44,124:INFO:self._variable_keys: {'gpu_n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'y_test', 'logging_param', 'idx', 'target_param', 'pipeline', 'X_test', 'html_param', 'X', 'seed', 'y_train', 'USI', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'data', 'fix_imbalance', '_ml_usecase', 'fold_generator', 'exp_id', 'exp_name_log', 'is_multiclass', 'memory', 'X_train', 'gpu_param', 'y'}
2025-03-30 18:06:44,124:INFO:Checking environment
2025-03-30 18:06:44,124:INFO:python_version: 3.9.21
2025-03-30 18:06:44,124:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:06:44,124:INFO:machine: AMD64
2025-03-30 18:06:44,153:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:06:44,156:INFO:Memory: svmem(total=33685155840, available=21794942976, percent=35.3, used=11890212864, free=21794942976)
2025-03-30 18:06:44,156:INFO:Physical Core: 6
2025-03-30 18:06:44,156:INFO:Logical Core: 12
2025-03-30 18:06:44,156:INFO:Checking libraries
2025-03-30 18:06:44,156:INFO:System:
2025-03-30 18:06:44,156:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:06:44,156:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:06:44,156:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:06:44,156:INFO:PyCaret required dependencies:
2025-03-30 18:06:44,190:INFO:                 pip: 25.0
2025-03-30 18:06:44,190:INFO:          setuptools: 75.8.0
2025-03-30 18:06:44,190:INFO:             pycaret: 3.3.2
2025-03-30 18:06:44,190:INFO:             IPython: 8.18.1
2025-03-30 18:06:44,190:INFO:          ipywidgets: 8.1.5
2025-03-30 18:06:44,190:INFO:                tqdm: 4.67.1
2025-03-30 18:06:44,190:INFO:               numpy: 1.26.4
2025-03-30 18:06:44,190:INFO:              pandas: 1.5.3
2025-03-30 18:06:44,190:INFO:              jinja2: 3.1.6
2025-03-30 18:06:44,190:INFO:               scipy: 1.11.4
2025-03-30 18:06:44,190:INFO:              joblib: 1.3.2
2025-03-30 18:06:44,190:INFO:             sklearn: 1.4.2
2025-03-30 18:06:44,190:INFO:                pyod: 2.0.3
2025-03-30 18:06:44,190:INFO:            imblearn: 0.12.4
2025-03-30 18:06:44,190:INFO:   category_encoders: 2.6.4
2025-03-30 18:06:44,190:INFO:            lightgbm: 4.6.0
2025-03-30 18:06:44,190:INFO:               numba: 0.60.0
2025-03-30 18:06:44,190:INFO:            requests: 2.32.3
2025-03-30 18:06:44,190:INFO:          matplotlib: 3.7.5
2025-03-30 18:06:44,190:INFO:          scikitplot: 0.3.7
2025-03-30 18:06:44,190:INFO:         yellowbrick: 1.5
2025-03-30 18:06:44,190:INFO:              plotly: 5.24.1
2025-03-30 18:06:44,190:INFO:    plotly-resampler: Not installed
2025-03-30 18:06:44,190:INFO:             kaleido: 0.2.1
2025-03-30 18:06:44,190:INFO:           schemdraw: 0.15
2025-03-30 18:06:44,190:INFO:         statsmodels: 0.14.4
2025-03-30 18:06:44,190:INFO:              sktime: 0.26.0
2025-03-30 18:06:44,190:INFO:               tbats: 1.1.3
2025-03-30 18:06:44,190:INFO:            pmdarima: 2.0.4
2025-03-30 18:06:44,190:INFO:              psutil: 7.0.0
2025-03-30 18:06:44,190:INFO:          markupsafe: 3.0.2
2025-03-30 18:06:44,190:INFO:             pickle5: Not installed
2025-03-30 18:06:44,190:INFO:         cloudpickle: 2.2.1
2025-03-30 18:06:44,190:INFO:         deprecation: 2.1.0
2025-03-30 18:06:44,190:INFO:              xxhash: 3.5.0
2025-03-30 18:06:44,190:INFO:           wurlitzer: Not installed
2025-03-30 18:06:44,190:INFO:PyCaret optional dependencies:
2025-03-30 18:06:44,508:INFO:                shap: 0.47.1
2025-03-30 18:06:44,508:INFO:           interpret: Not installed
2025-03-30 18:06:44,508:INFO:                umap: Not installed
2025-03-30 18:06:44,508:INFO:     ydata_profiling: Not installed
2025-03-30 18:06:44,508:INFO:  explainerdashboard: Not installed
2025-03-30 18:06:44,508:INFO:             autoviz: Not installed
2025-03-30 18:06:44,508:INFO:           fairlearn: Not installed
2025-03-30 18:06:44,508:INFO:          deepchecks: Not installed
2025-03-30 18:06:44,508:INFO:             xgboost: Not installed
2025-03-30 18:06:44,508:INFO:            catboost: Not installed
2025-03-30 18:06:44,508:INFO:              kmodes: Not installed
2025-03-30 18:06:44,508:INFO:             mlxtend: Not installed
2025-03-30 18:06:44,508:INFO:       statsforecast: Not installed
2025-03-30 18:06:44,508:INFO:        tune_sklearn: Not installed
2025-03-30 18:06:44,508:INFO:                 ray: Not installed
2025-03-30 18:06:44,508:INFO:            hyperopt: Not installed
2025-03-30 18:06:44,508:INFO:              optuna: Not installed
2025-03-30 18:06:44,508:INFO:               skopt: Not installed
2025-03-30 18:06:44,508:INFO:              mlflow: 2.21.0
2025-03-30 18:06:44,508:INFO:              gradio: Not installed
2025-03-30 18:06:44,508:INFO:             fastapi: 0.115.11
2025-03-30 18:06:44,508:INFO:             uvicorn: 0.34.0
2025-03-30 18:06:44,508:INFO:              m2cgen: Not installed
2025-03-30 18:06:44,508:INFO:           evidently: Not installed
2025-03-30 18:06:44,508:INFO:               fugue: Not installed
2025-03-30 18:06:44,508:INFO:           streamlit: 1.43.2
2025-03-30 18:06:44,508:INFO:             prophet: Not installed
2025-03-30 18:06:44,508:INFO:None
2025-03-30 18:06:44,508:INFO:Set up data.
2025-03-30 18:06:44,524:INFO:Set up folding strategy.
2025-03-30 18:06:44,524:INFO:Set up train/test split.
2025-03-30 18:06:44,524:INFO:Set up index.
2025-03-30 18:06:44,524:INFO:Assigning column types.
2025-03-30 18:06:44,524:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:06:44,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,557:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,626:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,645:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:06:44,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:06:44,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,736:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:06:44,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,835:INFO:Preparing preprocessing pipeline...
2025-03-30 18:06:44,835:INFO:Set up simple imputation.
2025-03-30 18:06:44,862:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:06:44,865:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:06:44,865:INFO:Creating final display dataframe.
2025-03-30 18:06:44,906:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             9106
2025-03-30 18:06:44,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:44,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:45,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:45,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:06:45,010:INFO:Logging experiment in loggers
2025-03-30 18:06:45,252:INFO:SubProcess save_model() called ==================================
2025-03-30 18:06:45,256:INFO:Initializing save_model()
2025-03-30 18:06:45,256:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmp9a9u0rsx\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:06:45,256:INFO:Adding model into prep_pipe
2025-03-30 18:06:45,256:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:06:45,257:INFO:C:\Users\Ian\AppData\Local\Temp\tmp9a9u0rsx\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:06:45,260:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:06:45,260:INFO:save_model() successfully completed......................................
2025-03-30 18:06:45,344:INFO:SubProcess save_model() end ==================================
2025-03-30 18:06:45,372:INFO:setup() successfully completed in 0.89s...............
2025-03-30 18:06:45,373:INFO:Initializing create_model()
2025-03-30 18:06:45,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:45,373:INFO:Checking exceptions
2025-03-30 18:06:45,374:INFO:Importing libraries
2025-03-30 18:06:45,375:INFO:Copying training dataset
2025-03-30 18:06:45,378:INFO:Defining folds
2025-03-30 18:06:45,378:INFO:Declaring metric variables
2025-03-30 18:06:45,378:INFO:Importing untrained model
2025-03-30 18:06:45,379:INFO:Logistic Regression Imported successfully
2025-03-30 18:06:45,379:INFO:Starting cross validation
2025-03-30 18:06:45,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:06:48,872:INFO:Calculating mean and std
2025-03-30 18:06:48,874:INFO:Creating metrics dataframe
2025-03-30 18:06:48,874:INFO:Finalizing model
2025-03-30 18:06:48,911:INFO:Creating Dashboard logs
2025-03-30 18:06:48,911:INFO:Model: Logistic Regression
2025-03-30 18:06:48,957:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:06:49,096:INFO:Initializing predict_model()
2025-03-30 18:06:49,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E03CD19D0>)
2025-03-30 18:06:49,096:INFO:Checking exceptions
2025-03-30 18:06:49,096:INFO:Preloading libraries
2025-03-30 18:06:49,246:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:06:49,263:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:49,263:INFO:Uploading results into container
2025-03-30 18:06:49,264:INFO:Uploading model into container now
2025-03-30 18:06:49,270:INFO:_master_model_container: 1
2025-03-30 18:06:49,270:INFO:_display_container: 2
2025-03-30 18:06:49,270:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:06:49,270:INFO:create_model() successfully completed......................................
2025-03-30 18:06:49,341:INFO:Initializing calibrate_model()
2025-03-30 18:06:49,356:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:06:49,356:INFO:Checking exceptions
2025-03-30 18:06:49,357:INFO:Preloading libraries
2025-03-30 18:06:49,357:INFO:Preparing display monitor
2025-03-30 18:06:49,358:INFO:Getting model name
2025-03-30 18:06:49,358:INFO:Base model : Logistic Regression
2025-03-30 18:06:49,358:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:06:49,358:INFO:SubProcess create_model() called ==================================
2025-03-30 18:06:49,358:INFO:Initializing create_model()
2025-03-30 18:06:49,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026E03CCF9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:49,358:INFO:Checking exceptions
2025-03-30 18:06:49,358:INFO:Importing libraries
2025-03-30 18:06:49,358:INFO:Copying training dataset
2025-03-30 18:06:49,358:INFO:Defining folds
2025-03-30 18:06:49,358:INFO:Declaring metric variables
2025-03-30 18:06:49,358:INFO:Importing untrained model
2025-03-30 18:06:49,358:INFO:Declaring custom model
2025-03-30 18:06:49,358:INFO:Logistic Regression Imported successfully
2025-03-30 18:06:49,358:INFO:Starting cross validation
2025-03-30 18:06:49,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:06:51,186:INFO:Calculating mean and std
2025-03-30 18:06:51,186:INFO:Creating metrics dataframe
2025-03-30 18:06:51,186:INFO:Finalizing model
2025-03-30 18:06:51,319:INFO:Uploading results into container
2025-03-30 18:06:51,319:INFO:Uploading model into container now
2025-03-30 18:06:51,319:INFO:_master_model_container: 2
2025-03-30 18:06:51,319:INFO:_display_container: 3
2025-03-30 18:06:51,319:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:51,319:INFO:create_model() successfully completed......................................
2025-03-30 18:06:51,412:INFO:SubProcess create_model() end ==================================
2025-03-30 18:06:51,412:INFO:Creating Dashboard logs
2025-03-30 18:06:51,412:INFO:Model: Logistic Regression
2025-03-30 18:06:51,462:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:06:51,586:INFO:Initializing predict_model()
2025-03-30 18:06:51,586:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E03ED9B80>)
2025-03-30 18:06:51,586:INFO:Checking exceptions
2025-03-30 18:06:51,586:INFO:Preloading libraries
2025-03-30 18:06:51,735:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:51,739:INFO:_master_model_container: 2
2025-03-30 18:06:51,739:INFO:_display_container: 3
2025-03-30 18:06:51,739:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:51,739:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:06:51,824:INFO:Initializing finalize_model()
2025-03-30 18:06:51,824:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:06:51,824:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:51,824:INFO:Initializing create_model()
2025-03-30 18:06:51,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:51,824:INFO:Checking exceptions
2025-03-30 18:06:51,824:INFO:Importing libraries
2025-03-30 18:06:51,824:INFO:Copying training dataset
2025-03-30 18:06:51,824:INFO:Defining folds
2025-03-30 18:06:51,824:INFO:Declaring metric variables
2025-03-30 18:06:51,824:INFO:Importing untrained model
2025-03-30 18:06:51,824:INFO:Declaring custom model
2025-03-30 18:06:51,824:INFO:Logistic Regression Imported successfully
2025-03-30 18:06:51,824:INFO:Cross validation set to False
2025-03-30 18:06:51,824:INFO:Fitting Model
2025-03-30 18:06:52,002:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:06:52,002:INFO:create_model() successfully completed......................................
2025-03-30 18:06:52,081:INFO:Creating Dashboard logs
2025-03-30 18:06:52,081:INFO:Model: Logistic Regression
2025-03-30 18:06:52,131:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:06:52,238:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:52,238:INFO:_master_model_container: 2
2025-03-30 18:06:52,238:INFO:_display_container: 3
2025-03-30 18:06:52,254:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:06:52,254:INFO:finalize_model() successfully completed......................................
2025-03-30 18:06:52,349:INFO:Initializing create_model()
2025-03-30 18:06:52,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:52,349:INFO:Checking exceptions
2025-03-30 18:06:52,349:INFO:Importing libraries
2025-03-30 18:06:52,349:INFO:Copying training dataset
2025-03-30 18:06:52,349:INFO:Defining folds
2025-03-30 18:06:52,349:INFO:Declaring metric variables
2025-03-30 18:06:52,349:INFO:Importing untrained model
2025-03-30 18:06:52,349:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:06:52,349:INFO:Starting cross validation
2025-03-30 18:06:52,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:06:52,455:INFO:Calculating mean and std
2025-03-30 18:06:52,456:INFO:Creating metrics dataframe
2025-03-30 18:06:52,456:INFO:Finalizing model
2025-03-30 18:06:52,490:INFO:Creating Dashboard logs
2025-03-30 18:06:52,490:INFO:Model: Decision Tree Classifier
2025-03-30 18:06:52,533:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:06:52,682:INFO:Initializing predict_model()
2025-03-30 18:06:52,682:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E040009D0>)
2025-03-30 18:06:52,682:INFO:Checking exceptions
2025-03-30 18:06:52,682:INFO:Preloading libraries
2025-03-30 18:06:52,818:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:52,834:INFO:Uploading results into container
2025-03-30 18:06:52,834:INFO:Uploading model into container now
2025-03-30 18:06:52,838:INFO:_master_model_container: 3
2025-03-30 18:06:52,838:INFO:_display_container: 4
2025-03-30 18:06:52,838:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:06:52,838:INFO:create_model() successfully completed......................................
2025-03-30 18:06:52,946:INFO:Initializing calibrate_model()
2025-03-30 18:06:52,946:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:06:52,946:INFO:Checking exceptions
2025-03-30 18:06:52,948:INFO:Preloading libraries
2025-03-30 18:06:52,948:INFO:Preparing display monitor
2025-03-30 18:06:52,950:INFO:Getting model name
2025-03-30 18:06:52,950:INFO:Base model : Decision Tree Classifier
2025-03-30 18:06:52,950:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:06:52,950:INFO:SubProcess create_model() called ==================================
2025-03-30 18:06:52,951:INFO:Initializing create_model()
2025-03-30 18:06:52,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026E0406AE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:52,951:INFO:Checking exceptions
2025-03-30 18:06:52,951:INFO:Importing libraries
2025-03-30 18:06:52,951:INFO:Copying training dataset
2025-03-30 18:06:52,954:INFO:Defining folds
2025-03-30 18:06:52,954:INFO:Declaring metric variables
2025-03-30 18:06:52,954:INFO:Importing untrained model
2025-03-30 18:06:52,954:INFO:Declaring custom model
2025-03-30 18:06:52,955:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:06:52,955:INFO:Starting cross validation
2025-03-30 18:06:52,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:06:53,254:INFO:Calculating mean and std
2025-03-30 18:06:53,254:INFO:Creating metrics dataframe
2025-03-30 18:06:53,254:INFO:Finalizing model
2025-03-30 18:06:53,404:INFO:Uploading results into container
2025-03-30 18:06:53,404:INFO:Uploading model into container now
2025-03-30 18:06:53,405:INFO:_master_model_container: 4
2025-03-30 18:06:53,405:INFO:_display_container: 5
2025-03-30 18:06:53,405:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:53,405:INFO:create_model() successfully completed......................................
2025-03-30 18:06:53,505:INFO:SubProcess create_model() end ==================================
2025-03-30 18:06:53,507:INFO:Creating Dashboard logs
2025-03-30 18:06:53,507:INFO:Model: Decision Tree Classifier
2025-03-30 18:06:53,557:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:06:53,743:INFO:Initializing predict_model()
2025-03-30 18:06:53,743:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E04000A60>)
2025-03-30 18:06:53,743:INFO:Checking exceptions
2025-03-30 18:06:53,743:INFO:Preloading libraries
2025-03-30 18:06:53,924:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:53,932:INFO:_master_model_container: 4
2025-03-30 18:06:53,932:INFO:_display_container: 5
2025-03-30 18:06:53,932:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:53,933:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:06:54,023:INFO:Initializing finalize_model()
2025-03-30 18:06:54,023:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:06:54,024:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:06:54,027:INFO:Initializing create_model()
2025-03-30 18:06:54,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E0221ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:06:54,027:INFO:Checking exceptions
2025-03-30 18:06:54,027:INFO:Importing libraries
2025-03-30 18:06:54,027:INFO:Copying training dataset
2025-03-30 18:06:54,027:INFO:Defining folds
2025-03-30 18:06:54,027:INFO:Declaring metric variables
2025-03-30 18:06:54,027:INFO:Importing untrained model
2025-03-30 18:06:54,027:INFO:Declaring custom model
2025-03-30 18:06:54,027:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:06:54,027:INFO:Cross validation set to False
2025-03-30 18:06:54,027:INFO:Fitting Model
2025-03-30 18:06:54,222:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:06:54,222:INFO:create_model() successfully completed......................................
2025-03-30 18:06:54,306:INFO:Creating Dashboard logs
2025-03-30 18:06:54,306:INFO:Model: Decision Tree Classifier
2025-03-30 18:06:54,360:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:06:54,538:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:06:54,538:INFO:_master_model_container: 4
2025-03-30 18:06:54,538:INFO:_display_container: 5
2025-03-30 18:06:54,538:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:06:54,538:INFO:finalize_model() successfully completed......................................
2025-03-30 18:06:54,656:INFO:Initializing save_model()
2025-03-30 18:06:54,656:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:06:54,656:INFO:Adding model into prep_pipe
2025-03-30 18:06:54,656:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:06:54,656:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:06:54,666:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:06:54,666:INFO:save_model() successfully completed......................................
2025-03-30 18:06:57,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:57,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:57,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:57,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:06:58,540:INFO:Initializing load_model()
2025-03-30 18:06:58,540:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:11:39,811:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:39,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:39,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:39,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:40,294:INFO:PyCaret ClassificationExperiment
2025-03-30 18:11:40,294:INFO:Logging name: Treinamento
2025-03-30 18:11:40,294:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:11:40,294:INFO:version 3.3.2
2025-03-30 18:11:40,294:INFO:Initializing setup()
2025-03-30 18:11:40,294:INFO:self.USI: 6732
2025-03-30 18:11:40,294:INFO:self._variable_keys: {'fix_imbalance', 'target_param', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'logging_param', 'y', 'is_multiclass', 'exp_id', 'gpu_param', 'X_test', '_available_plots', 'data', 'fold_groups_param', 'X', 'X_train', 'fold_generator', '_ml_usecase', 'idx', 'gpu_n_jobs_param', 'html_param', 'seed', 'memory', 'USI', 'pipeline', 'log_plots_param', 'y_test', 'n_jobs_param'}
2025-03-30 18:11:40,294:INFO:Checking environment
2025-03-30 18:11:40,294:INFO:python_version: 3.9.21
2025-03-30 18:11:40,294:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:11:40,295:INFO:machine: AMD64
2025-03-30 18:11:40,310:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:11:40,314:INFO:Memory: svmem(total=33685155840, available=21727920128, percent=35.5, used=11957235712, free=21727920128)
2025-03-30 18:11:40,314:INFO:Physical Core: 6
2025-03-30 18:11:40,314:INFO:Logical Core: 12
2025-03-30 18:11:40,315:INFO:Checking libraries
2025-03-30 18:11:40,315:INFO:System:
2025-03-30 18:11:40,315:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:11:40,315:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:11:40,315:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:11:40,315:INFO:PyCaret required dependencies:
2025-03-30 18:11:40,350:INFO:                 pip: 25.0
2025-03-30 18:11:40,350:INFO:          setuptools: 75.8.0
2025-03-30 18:11:40,350:INFO:             pycaret: 3.3.2
2025-03-30 18:11:40,350:INFO:             IPython: 8.18.1
2025-03-30 18:11:40,350:INFO:          ipywidgets: 8.1.5
2025-03-30 18:11:40,350:INFO:                tqdm: 4.67.1
2025-03-30 18:11:40,350:INFO:               numpy: 1.26.4
2025-03-30 18:11:40,350:INFO:              pandas: 1.5.3
2025-03-30 18:11:40,350:INFO:              jinja2: 3.1.6
2025-03-30 18:11:40,350:INFO:               scipy: 1.11.4
2025-03-30 18:11:40,350:INFO:              joblib: 1.3.2
2025-03-30 18:11:40,350:INFO:             sklearn: 1.4.2
2025-03-30 18:11:40,350:INFO:                pyod: 2.0.3
2025-03-30 18:11:40,350:INFO:            imblearn: 0.12.4
2025-03-30 18:11:40,350:INFO:   category_encoders: 2.6.4
2025-03-30 18:11:40,350:INFO:            lightgbm: 4.6.0
2025-03-30 18:11:40,350:INFO:               numba: 0.60.0
2025-03-30 18:11:40,350:INFO:            requests: 2.32.3
2025-03-30 18:11:40,350:INFO:          matplotlib: 3.7.5
2025-03-30 18:11:40,350:INFO:          scikitplot: 0.3.7
2025-03-30 18:11:40,350:INFO:         yellowbrick: 1.5
2025-03-30 18:11:40,350:INFO:              plotly: 5.24.1
2025-03-30 18:11:40,350:INFO:    plotly-resampler: Not installed
2025-03-30 18:11:40,350:INFO:             kaleido: 0.2.1
2025-03-30 18:11:40,350:INFO:           schemdraw: 0.15
2025-03-30 18:11:40,350:INFO:         statsmodels: 0.14.4
2025-03-30 18:11:40,351:INFO:              sktime: 0.26.0
2025-03-30 18:11:40,351:INFO:               tbats: 1.1.3
2025-03-30 18:11:40,351:INFO:            pmdarima: 2.0.4
2025-03-30 18:11:40,351:INFO:              psutil: 7.0.0
2025-03-30 18:11:40,351:INFO:          markupsafe: 3.0.2
2025-03-30 18:11:40,351:INFO:             pickle5: Not installed
2025-03-30 18:11:40,351:INFO:         cloudpickle: 2.2.1
2025-03-30 18:11:40,351:INFO:         deprecation: 2.1.0
2025-03-30 18:11:40,351:INFO:              xxhash: 3.5.0
2025-03-30 18:11:40,351:INFO:           wurlitzer: Not installed
2025-03-30 18:11:40,351:INFO:PyCaret optional dependencies:
2025-03-30 18:11:40,693:INFO:                shap: 0.47.1
2025-03-30 18:11:40,693:INFO:           interpret: Not installed
2025-03-30 18:11:40,693:INFO:                umap: Not installed
2025-03-30 18:11:40,693:INFO:     ydata_profiling: Not installed
2025-03-30 18:11:40,693:INFO:  explainerdashboard: Not installed
2025-03-30 18:11:40,693:INFO:             autoviz: Not installed
2025-03-30 18:11:40,693:INFO:           fairlearn: Not installed
2025-03-30 18:11:40,693:INFO:          deepchecks: Not installed
2025-03-30 18:11:40,693:INFO:             xgboost: Not installed
2025-03-30 18:11:40,693:INFO:            catboost: Not installed
2025-03-30 18:11:40,693:INFO:              kmodes: Not installed
2025-03-30 18:11:40,693:INFO:             mlxtend: Not installed
2025-03-30 18:11:40,693:INFO:       statsforecast: Not installed
2025-03-30 18:11:40,693:INFO:        tune_sklearn: Not installed
2025-03-30 18:11:40,693:INFO:                 ray: Not installed
2025-03-30 18:11:40,693:INFO:            hyperopt: Not installed
2025-03-30 18:11:40,693:INFO:              optuna: Not installed
2025-03-30 18:11:40,693:INFO:               skopt: Not installed
2025-03-30 18:11:40,695:INFO:              mlflow: 2.21.0
2025-03-30 18:11:40,695:INFO:              gradio: Not installed
2025-03-30 18:11:40,695:INFO:             fastapi: 0.115.11
2025-03-30 18:11:40,695:INFO:             uvicorn: 0.34.0
2025-03-30 18:11:40,695:INFO:              m2cgen: Not installed
2025-03-30 18:11:40,695:INFO:           evidently: Not installed
2025-03-30 18:11:40,695:INFO:               fugue: Not installed
2025-03-30 18:11:40,695:INFO:           streamlit: 1.43.2
2025-03-30 18:11:40,695:INFO:             prophet: Not installed
2025-03-30 18:11:40,695:INFO:None
2025-03-30 18:11:40,695:INFO:Set up data.
2025-03-30 18:11:40,699:INFO:Set up folding strategy.
2025-03-30 18:11:40,699:INFO:Set up train/test split.
2025-03-30 18:11:40,705:INFO:Set up index.
2025-03-30 18:11:40,706:INFO:Assigning column types.
2025-03-30 18:11:40,708:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:11:40,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,809:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:11:40,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:11:40,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,923:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:11:40,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:40,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,022:INFO:Preparing preprocessing pipeline...
2025-03-30 18:11:41,022:INFO:Set up simple imputation.
2025-03-30 18:11:41,039:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:11:41,049:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:11:41,049:INFO:Creating final display dataframe.
2025-03-30 18:11:41,089:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             6732
2025-03-30 18:11:41,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:11:41,189:INFO:Logging experiment in loggers
2025-03-30 18:11:41,423:INFO:SubProcess save_model() called ==================================
2025-03-30 18:11:41,423:INFO:Initializing save_model()
2025-03-30 18:11:41,423:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmppatuwrq1\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:11:41,423:INFO:Adding model into prep_pipe
2025-03-30 18:11:41,423:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:11:41,423:INFO:C:\Users\Ian\AppData\Local\Temp\tmppatuwrq1\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:11:41,439:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:11:41,439:INFO:save_model() successfully completed......................................
2025-03-30 18:11:41,523:INFO:SubProcess save_model() end ==================================
2025-03-30 18:11:41,539:INFO:setup() successfully completed in 0.9s...............
2025-03-30 18:11:41,539:INFO:Initializing create_model()
2025-03-30 18:11:41,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:41,539:INFO:Checking exceptions
2025-03-30 18:11:41,549:INFO:Importing libraries
2025-03-30 18:11:41,549:INFO:Copying training dataset
2025-03-30 18:11:41,549:INFO:Defining folds
2025-03-30 18:11:41,549:INFO:Declaring metric variables
2025-03-30 18:11:41,549:INFO:Importing untrained model
2025-03-30 18:11:41,549:INFO:Logistic Regression Imported successfully
2025-03-30 18:11:41,549:INFO:Starting cross validation
2025-03-30 18:11:41,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:11:45,038:INFO:Calculating mean and std
2025-03-30 18:11:45,040:INFO:Creating metrics dataframe
2025-03-30 18:11:45,044:INFO:Finalizing model
2025-03-30 18:11:45,085:INFO:Creating Dashboard logs
2025-03-30 18:11:45,085:INFO:Model: Logistic Regression
2025-03-30 18:11:45,131:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:11:45,256:INFO:Initializing predict_model()
2025-03-30 18:11:45,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EEC19029D0>)
2025-03-30 18:11:45,256:INFO:Checking exceptions
2025-03-30 18:11:45,256:INFO:Preloading libraries
2025-03-30 18:11:45,407:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:11:45,438:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:45,439:INFO:Uploading results into container
2025-03-30 18:11:45,440:INFO:Uploading model into container now
2025-03-30 18:11:45,443:INFO:_master_model_container: 1
2025-03-30 18:11:45,443:INFO:_display_container: 2
2025-03-30 18:11:45,443:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:11:45,443:INFO:create_model() successfully completed......................................
2025-03-30 18:11:45,523:INFO:Initializing calibrate_model()
2025-03-30 18:11:45,523:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:11:45,523:INFO:Checking exceptions
2025-03-30 18:11:45,523:INFO:Preloading libraries
2025-03-30 18:11:45,523:INFO:Preparing display monitor
2025-03-30 18:11:45,523:INFO:Getting model name
2025-03-30 18:11:45,523:INFO:Base model : Logistic Regression
2025-03-30 18:11:45,523:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:11:45,523:INFO:SubProcess create_model() called ==================================
2025-03-30 18:11:45,523:INFO:Initializing create_model()
2025-03-30 18:11:45,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EEC02304C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:45,523:INFO:Checking exceptions
2025-03-30 18:11:45,523:INFO:Importing libraries
2025-03-30 18:11:45,523:INFO:Copying training dataset
2025-03-30 18:11:45,539:INFO:Defining folds
2025-03-30 18:11:45,539:INFO:Declaring metric variables
2025-03-30 18:11:45,539:INFO:Importing untrained model
2025-03-30 18:11:45,539:INFO:Declaring custom model
2025-03-30 18:11:45,539:INFO:Logistic Regression Imported successfully
2025-03-30 18:11:45,539:INFO:Starting cross validation
2025-03-30 18:11:45,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:11:47,363:INFO:Calculating mean and std
2025-03-30 18:11:47,363:INFO:Creating metrics dataframe
2025-03-30 18:11:47,363:INFO:Finalizing model
2025-03-30 18:11:47,499:INFO:Uploading results into container
2025-03-30 18:11:47,499:INFO:Uploading model into container now
2025-03-30 18:11:47,501:INFO:_master_model_container: 2
2025-03-30 18:11:47,501:INFO:_display_container: 3
2025-03-30 18:11:47,501:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:47,501:INFO:create_model() successfully completed......................................
2025-03-30 18:11:47,573:INFO:SubProcess create_model() end ==================================
2025-03-30 18:11:47,573:INFO:Creating Dashboard logs
2025-03-30 18:11:47,573:INFO:Model: Logistic Regression
2025-03-30 18:11:47,625:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:11:47,770:INFO:Initializing predict_model()
2025-03-30 18:11:47,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EEC0117EE0>)
2025-03-30 18:11:47,770:INFO:Checking exceptions
2025-03-30 18:11:47,770:INFO:Preloading libraries
2025-03-30 18:11:47,918:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:47,926:INFO:_master_model_container: 2
2025-03-30 18:11:47,926:INFO:_display_container: 3
2025-03-30 18:11:47,926:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:47,926:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:11:48,022:INFO:Initializing finalize_model()
2025-03-30 18:11:48,022:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:11:48,023:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:48,023:INFO:Initializing create_model()
2025-03-30 18:11:48,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:48,023:INFO:Checking exceptions
2025-03-30 18:11:48,023:INFO:Importing libraries
2025-03-30 18:11:48,023:INFO:Copying training dataset
2025-03-30 18:11:48,023:INFO:Defining folds
2025-03-30 18:11:48,023:INFO:Declaring metric variables
2025-03-30 18:11:48,023:INFO:Importing untrained model
2025-03-30 18:11:48,023:INFO:Declaring custom model
2025-03-30 18:11:48,023:INFO:Logistic Regression Imported successfully
2025-03-30 18:11:48,023:INFO:Cross validation set to False
2025-03-30 18:11:48,023:INFO:Fitting Model
2025-03-30 18:11:48,184:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:11:48,184:INFO:create_model() successfully completed......................................
2025-03-30 18:11:48,264:INFO:Creating Dashboard logs
2025-03-30 18:11:48,264:INFO:Model: Logistic Regression
2025-03-30 18:11:48,311:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:11:48,438:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:48,438:INFO:_master_model_container: 2
2025-03-30 18:11:48,438:INFO:_display_container: 3
2025-03-30 18:11:48,438:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:11:48,438:INFO:finalize_model() successfully completed......................................
2025-03-30 18:11:48,539:INFO:Initializing create_model()
2025-03-30 18:11:48,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:48,539:INFO:Checking exceptions
2025-03-30 18:11:48,539:INFO:Importing libraries
2025-03-30 18:11:48,539:INFO:Copying training dataset
2025-03-30 18:11:48,556:INFO:Defining folds
2025-03-30 18:11:48,556:INFO:Declaring metric variables
2025-03-30 18:11:48,556:INFO:Importing untrained model
2025-03-30 18:11:48,556:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:11:48,556:INFO:Starting cross validation
2025-03-30 18:11:48,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:11:48,637:INFO:Calculating mean and std
2025-03-30 18:11:48,637:INFO:Creating metrics dataframe
2025-03-30 18:11:48,639:INFO:Finalizing model
2025-03-30 18:11:48,657:INFO:Creating Dashboard logs
2025-03-30 18:11:48,657:INFO:Model: Decision Tree Classifier
2025-03-30 18:11:48,708:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:11:48,862:INFO:Initializing predict_model()
2025-03-30 18:11:48,862:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EEC1C2DE50>)
2025-03-30 18:11:48,862:INFO:Checking exceptions
2025-03-30 18:11:48,862:INFO:Preloading libraries
2025-03-30 18:11:49,022:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:49,022:INFO:Uploading results into container
2025-03-30 18:11:49,023:INFO:Uploading model into container now
2025-03-30 18:11:49,031:INFO:_master_model_container: 3
2025-03-30 18:11:49,031:INFO:_display_container: 4
2025-03-30 18:11:49,032:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:11:49,032:INFO:create_model() successfully completed......................................
2025-03-30 18:11:49,131:INFO:Initializing calibrate_model()
2025-03-30 18:11:49,131:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:11:49,131:INFO:Checking exceptions
2025-03-30 18:11:49,135:INFO:Preloading libraries
2025-03-30 18:11:49,135:INFO:Preparing display monitor
2025-03-30 18:11:49,136:INFO:Getting model name
2025-03-30 18:11:49,136:INFO:Base model : Decision Tree Classifier
2025-03-30 18:11:49,136:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:11:49,136:INFO:SubProcess create_model() called ==================================
2025-03-30 18:11:49,137:INFO:Initializing create_model()
2025-03-30 18:11:49,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EEBEF48AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:49,137:INFO:Checking exceptions
2025-03-30 18:11:49,137:INFO:Importing libraries
2025-03-30 18:11:49,137:INFO:Copying training dataset
2025-03-30 18:11:49,140:INFO:Defining folds
2025-03-30 18:11:49,140:INFO:Declaring metric variables
2025-03-30 18:11:49,140:INFO:Importing untrained model
2025-03-30 18:11:49,140:INFO:Declaring custom model
2025-03-30 18:11:49,141:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:11:49,141:INFO:Starting cross validation
2025-03-30 18:11:49,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:11:49,387:INFO:Calculating mean and std
2025-03-30 18:11:49,387:INFO:Creating metrics dataframe
2025-03-30 18:11:49,387:INFO:Finalizing model
2025-03-30 18:11:49,520:INFO:Uploading results into container
2025-03-30 18:11:49,520:INFO:Uploading model into container now
2025-03-30 18:11:49,520:INFO:_master_model_container: 4
2025-03-30 18:11:49,520:INFO:_display_container: 5
2025-03-30 18:11:49,520:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:49,520:INFO:create_model() successfully completed......................................
2025-03-30 18:11:49,657:INFO:SubProcess create_model() end ==================================
2025-03-30 18:11:49,657:INFO:Creating Dashboard logs
2025-03-30 18:11:49,657:INFO:Model: Decision Tree Classifier
2025-03-30 18:11:49,710:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:11:49,906:INFO:Initializing predict_model()
2025-03-30 18:11:49,906:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EEC1C2D160>)
2025-03-30 18:11:49,906:INFO:Checking exceptions
2025-03-30 18:11:49,906:INFO:Preloading libraries
2025-03-30 18:11:50,073:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:50,073:INFO:_master_model_container: 4
2025-03-30 18:11:50,073:INFO:_display_container: 5
2025-03-30 18:11:50,073:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:50,073:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:11:50,175:INFO:Initializing finalize_model()
2025-03-30 18:11:50,175:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:11:50,175:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:11:50,175:INFO:Initializing create_model()
2025-03-30 18:11:50,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEBFE3ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:11:50,175:INFO:Checking exceptions
2025-03-30 18:11:50,175:INFO:Importing libraries
2025-03-30 18:11:50,175:INFO:Copying training dataset
2025-03-30 18:11:50,175:INFO:Defining folds
2025-03-30 18:11:50,175:INFO:Declaring metric variables
2025-03-30 18:11:50,175:INFO:Importing untrained model
2025-03-30 18:11:50,175:INFO:Declaring custom model
2025-03-30 18:11:50,175:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:11:50,175:INFO:Cross validation set to False
2025-03-30 18:11:50,175:INFO:Fitting Model
2025-03-30 18:11:50,370:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:11:50,370:INFO:create_model() successfully completed......................................
2025-03-30 18:11:50,462:INFO:Creating Dashboard logs
2025-03-30 18:11:50,462:INFO:Model: Decision Tree Classifier
2025-03-30 18:11:50,497:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:11:50,690:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:11:50,690:INFO:_master_model_container: 4
2025-03-30 18:11:50,690:INFO:_display_container: 5
2025-03-30 18:11:50,690:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:11:50,690:INFO:finalize_model() successfully completed......................................
2025-03-30 18:11:50,807:INFO:Initializing save_model()
2025-03-30 18:11:50,807:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:11:50,807:INFO:Adding model into prep_pipe
2025-03-30 18:11:50,807:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:11:50,807:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:11:50,817:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:11:50,817:INFO:save_model() successfully completed......................................
2025-03-30 18:11:53,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:53,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:53,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:53,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:11:54,785:INFO:Initializing load_model()
2025-03-30 18:11:54,785:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:12:15,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:15,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:15,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:15,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:16,564:INFO:Initializing load_model()
2025-03-30 18:12:16,565:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:12:30,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:30,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:30,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:30,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:12:31,298:INFO:Initializing load_model()
2025-03-30 18:12:31,298:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:13:01,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:01,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:01,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:01,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:02,589:INFO:Initializing load_model()
2025-03-30 18:13:02,589:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:13:21,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:21,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:21,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:21,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:22,904:INFO:Initializing load_model()
2025-03-30 18:13:22,904:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:13:50,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:50,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:50,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:50,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:13:51,090:INFO:PyCaret ClassificationExperiment
2025-03-30 18:13:51,090:INFO:Logging name: Treinamento
2025-03-30 18:13:51,090:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:13:51,090:INFO:version 3.3.2
2025-03-30 18:13:51,090:INFO:Initializing setup()
2025-03-30 18:13:51,090:INFO:self.USI: 80c4
2025-03-30 18:13:51,090:INFO:self._variable_keys: {'pipeline', 'X_test', 'gpu_param', 'data', 'html_param', 'logging_param', 'idx', 'USI', 'seed', 'n_jobs_param', 'target_param', 'memory', 'fix_imbalance', '_available_plots', 'y', 'fold_generator', 'exp_name_log', 'is_multiclass', 'X', 'log_plots_param', 'gpu_n_jobs_param', 'exp_id', 'X_train', '_ml_usecase', 'y_train', 'fold_groups_param', 'fold_shuffle_param', 'y_test'}
2025-03-30 18:13:51,090:INFO:Checking environment
2025-03-30 18:13:51,090:INFO:python_version: 3.9.21
2025-03-30 18:13:51,090:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:13:51,090:INFO:machine: AMD64
2025-03-30 18:13:51,110:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:13:51,112:INFO:Memory: svmem(total=33685155840, available=21601697792, percent=35.9, used=12083458048, free=21601697792)
2025-03-30 18:13:51,112:INFO:Physical Core: 6
2025-03-30 18:13:51,112:INFO:Logical Core: 12
2025-03-30 18:13:51,112:INFO:Checking libraries
2025-03-30 18:13:51,112:INFO:System:
2025-03-30 18:13:51,112:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:13:51,112:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:13:51,112:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:13:51,112:INFO:PyCaret required dependencies:
2025-03-30 18:13:51,140:INFO:                 pip: 25.0
2025-03-30 18:13:51,140:INFO:          setuptools: 75.8.0
2025-03-30 18:13:51,140:INFO:             pycaret: 3.3.2
2025-03-30 18:13:51,140:INFO:             IPython: 8.18.1
2025-03-30 18:13:51,140:INFO:          ipywidgets: 8.1.5
2025-03-30 18:13:51,140:INFO:                tqdm: 4.67.1
2025-03-30 18:13:51,140:INFO:               numpy: 1.26.4
2025-03-30 18:13:51,140:INFO:              pandas: 1.5.3
2025-03-30 18:13:51,140:INFO:              jinja2: 3.1.6
2025-03-30 18:13:51,140:INFO:               scipy: 1.11.4
2025-03-30 18:13:51,140:INFO:              joblib: 1.3.2
2025-03-30 18:13:51,140:INFO:             sklearn: 1.4.2
2025-03-30 18:13:51,140:INFO:                pyod: 2.0.3
2025-03-30 18:13:51,140:INFO:            imblearn: 0.12.4
2025-03-30 18:13:51,140:INFO:   category_encoders: 2.6.4
2025-03-30 18:13:51,140:INFO:            lightgbm: 4.6.0
2025-03-30 18:13:51,140:INFO:               numba: 0.60.0
2025-03-30 18:13:51,140:INFO:            requests: 2.32.3
2025-03-30 18:13:51,140:INFO:          matplotlib: 3.7.5
2025-03-30 18:13:51,140:INFO:          scikitplot: 0.3.7
2025-03-30 18:13:51,140:INFO:         yellowbrick: 1.5
2025-03-30 18:13:51,140:INFO:              plotly: 5.24.1
2025-03-30 18:13:51,140:INFO:    plotly-resampler: Not installed
2025-03-30 18:13:51,140:INFO:             kaleido: 0.2.1
2025-03-30 18:13:51,140:INFO:           schemdraw: 0.15
2025-03-30 18:13:51,140:INFO:         statsmodels: 0.14.4
2025-03-30 18:13:51,140:INFO:              sktime: 0.26.0
2025-03-30 18:13:51,140:INFO:               tbats: 1.1.3
2025-03-30 18:13:51,140:INFO:            pmdarima: 2.0.4
2025-03-30 18:13:51,140:INFO:              psutil: 7.0.0
2025-03-30 18:13:51,140:INFO:          markupsafe: 3.0.2
2025-03-30 18:13:51,140:INFO:             pickle5: Not installed
2025-03-30 18:13:51,140:INFO:         cloudpickle: 2.2.1
2025-03-30 18:13:51,140:INFO:         deprecation: 2.1.0
2025-03-30 18:13:51,140:INFO:              xxhash: 3.5.0
2025-03-30 18:13:51,140:INFO:           wurlitzer: Not installed
2025-03-30 18:13:51,140:INFO:PyCaret optional dependencies:
2025-03-30 18:13:51,456:INFO:                shap: 0.47.1
2025-03-30 18:13:51,456:INFO:           interpret: Not installed
2025-03-30 18:13:51,456:INFO:                umap: Not installed
2025-03-30 18:13:51,456:INFO:     ydata_profiling: Not installed
2025-03-30 18:13:51,456:INFO:  explainerdashboard: Not installed
2025-03-30 18:13:51,456:INFO:             autoviz: Not installed
2025-03-30 18:13:51,456:INFO:           fairlearn: Not installed
2025-03-30 18:13:51,456:INFO:          deepchecks: Not installed
2025-03-30 18:13:51,456:INFO:             xgboost: Not installed
2025-03-30 18:13:51,456:INFO:            catboost: Not installed
2025-03-30 18:13:51,456:INFO:              kmodes: Not installed
2025-03-30 18:13:51,456:INFO:             mlxtend: Not installed
2025-03-30 18:13:51,456:INFO:       statsforecast: Not installed
2025-03-30 18:13:51,456:INFO:        tune_sklearn: Not installed
2025-03-30 18:13:51,456:INFO:                 ray: Not installed
2025-03-30 18:13:51,456:INFO:            hyperopt: Not installed
2025-03-30 18:13:51,456:INFO:              optuna: Not installed
2025-03-30 18:13:51,456:INFO:               skopt: Not installed
2025-03-30 18:13:51,456:INFO:              mlflow: 2.21.0
2025-03-30 18:13:51,456:INFO:              gradio: Not installed
2025-03-30 18:13:51,456:INFO:             fastapi: 0.115.11
2025-03-30 18:13:51,456:INFO:             uvicorn: 0.34.0
2025-03-30 18:13:51,456:INFO:              m2cgen: Not installed
2025-03-30 18:13:51,456:INFO:           evidently: Not installed
2025-03-30 18:13:51,456:INFO:               fugue: Not installed
2025-03-30 18:13:51,456:INFO:           streamlit: 1.43.2
2025-03-30 18:13:51,456:INFO:             prophet: Not installed
2025-03-30 18:13:51,456:INFO:None
2025-03-30 18:13:51,456:INFO:Set up data.
2025-03-30 18:13:51,456:INFO:Set up folding strategy.
2025-03-30 18:13:51,456:INFO:Set up train/test split.
2025-03-30 18:13:51,473:INFO:Set up index.
2025-03-30 18:13:51,473:INFO:Assigning column types.
2025-03-30 18:13:51,473:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:13:51,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,569:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:13:51,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:13:51,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,683:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:13:51,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,795:INFO:Preparing preprocessing pipeline...
2025-03-30 18:13:51,795:INFO:Set up simple imputation.
2025-03-30 18:13:51,811:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:13:51,811:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:13:51,811:INFO:Creating final display dataframe.
2025-03-30 18:13:51,842:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             80c4
2025-03-30 18:13:51,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:13:51,955:INFO:Logging experiment in loggers
2025-03-30 18:13:52,181:INFO:SubProcess save_model() called ==================================
2025-03-30 18:13:52,181:INFO:Initializing save_model()
2025-03-30 18:13:52,181:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpuknho5mi\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:13:52,181:INFO:Adding model into prep_pipe
2025-03-30 18:13:52,181:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:13:52,197:INFO:C:\Users\Ian\AppData\Local\Temp\tmpuknho5mi\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:13:52,197:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:13:52,197:INFO:save_model() successfully completed......................................
2025-03-30 18:13:52,278:INFO:SubProcess save_model() end ==================================
2025-03-30 18:13:52,292:INFO:setup() successfully completed in 0.86s...............
2025-03-30 18:13:52,292:INFO:Initializing create_model()
2025-03-30 18:13:52,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:13:52,308:INFO:Checking exceptions
2025-03-30 18:13:52,308:INFO:Importing libraries
2025-03-30 18:13:52,308:INFO:Copying training dataset
2025-03-30 18:13:52,308:INFO:Defining folds
2025-03-30 18:13:52,308:INFO:Declaring metric variables
2025-03-30 18:13:52,308:INFO:Importing untrained model
2025-03-30 18:13:52,308:INFO:Logistic Regression Imported successfully
2025-03-30 18:13:52,308:INFO:Starting cross validation
2025-03-30 18:13:52,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:13:55,888:INFO:Calculating mean and std
2025-03-30 18:13:55,889:INFO:Creating metrics dataframe
2025-03-30 18:13:55,890:INFO:Finalizing model
2025-03-30 18:13:55,924:INFO:Creating Dashboard logs
2025-03-30 18:13:55,924:INFO:Model: Logistic Regression
2025-03-30 18:13:55,973:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:13:56,090:INFO:Initializing predict_model()
2025-03-30 18:13:56,090:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017F61D439D0>)
2025-03-30 18:13:56,090:INFO:Checking exceptions
2025-03-30 18:13:56,090:INFO:Preloading libraries
2025-03-30 18:13:56,242:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:13:56,258:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:13:56,258:INFO:Uploading results into container
2025-03-30 18:13:56,258:INFO:Uploading model into container now
2025-03-30 18:13:56,258:INFO:_master_model_container: 1
2025-03-30 18:13:56,258:INFO:_display_container: 2
2025-03-30 18:13:56,258:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:13:56,258:INFO:create_model() successfully completed......................................
2025-03-30 18:13:56,347:INFO:Initializing calibrate_model()
2025-03-30 18:13:56,347:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:13:56,347:INFO:Checking exceptions
2025-03-30 18:13:56,347:INFO:Preloading libraries
2025-03-30 18:13:56,347:INFO:Preparing display monitor
2025-03-30 18:13:56,347:INFO:Getting model name
2025-03-30 18:13:56,347:INFO:Base model : Logistic Regression
2025-03-30 18:13:56,356:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:13:56,356:INFO:SubProcess create_model() called ==================================
2025-03-30 18:13:56,356:INFO:Initializing create_model()
2025-03-30 18:13:56,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F605C2AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:13:56,356:INFO:Checking exceptions
2025-03-30 18:13:56,356:INFO:Importing libraries
2025-03-30 18:13:56,356:INFO:Copying training dataset
2025-03-30 18:13:56,359:INFO:Defining folds
2025-03-30 18:13:56,359:INFO:Declaring metric variables
2025-03-30 18:13:56,359:INFO:Importing untrained model
2025-03-30 18:13:56,359:INFO:Declaring custom model
2025-03-30 18:13:56,359:INFO:Logistic Regression Imported successfully
2025-03-30 18:13:56,359:INFO:Starting cross validation
2025-03-30 18:13:56,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:13:58,157:INFO:Calculating mean and std
2025-03-30 18:13:58,157:INFO:Creating metrics dataframe
2025-03-30 18:13:58,157:INFO:Finalizing model
2025-03-30 18:13:58,287:INFO:Uploading results into container
2025-03-30 18:13:58,287:INFO:Uploading model into container now
2025-03-30 18:13:58,287:INFO:_master_model_container: 2
2025-03-30 18:13:58,287:INFO:_display_container: 3
2025-03-30 18:13:58,287:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:13:58,287:INFO:create_model() successfully completed......................................
2025-03-30 18:13:58,373:INFO:SubProcess create_model() end ==================================
2025-03-30 18:13:58,388:INFO:Creating Dashboard logs
2025-03-30 18:13:58,389:INFO:Model: Logistic Regression
2025-03-30 18:13:58,428:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:13:58,570:INFO:Initializing predict_model()
2025-03-30 18:13:58,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017F60557EE0>)
2025-03-30 18:13:58,570:INFO:Checking exceptions
2025-03-30 18:13:58,570:INFO:Preloading libraries
2025-03-30 18:13:58,718:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:13:58,729:INFO:_master_model_container: 2
2025-03-30 18:13:58,729:INFO:_display_container: 3
2025-03-30 18:13:58,729:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:13:58,729:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:13:58,820:INFO:Initializing finalize_model()
2025-03-30 18:13:58,820:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:13:58,821:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:13:58,824:INFO:Initializing create_model()
2025-03-30 18:13:58,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:13:58,824:INFO:Checking exceptions
2025-03-30 18:13:58,824:INFO:Importing libraries
2025-03-30 18:13:58,824:INFO:Copying training dataset
2025-03-30 18:13:58,824:INFO:Defining folds
2025-03-30 18:13:58,824:INFO:Declaring metric variables
2025-03-30 18:13:58,824:INFO:Importing untrained model
2025-03-30 18:13:58,824:INFO:Declaring custom model
2025-03-30 18:13:58,824:INFO:Logistic Regression Imported successfully
2025-03-30 18:13:58,824:INFO:Cross validation set to False
2025-03-30 18:13:58,824:INFO:Fitting Model
2025-03-30 18:13:58,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:13:58,985:INFO:create_model() successfully completed......................................
2025-03-30 18:13:59,065:INFO:Creating Dashboard logs
2025-03-30 18:13:59,065:INFO:Model: Logistic Regression
2025-03-30 18:13:59,113:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:13:59,239:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:13:59,239:INFO:_master_model_container: 2
2025-03-30 18:13:59,239:INFO:_display_container: 3
2025-03-30 18:13:59,239:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:13:59,239:INFO:finalize_model() successfully completed......................................
2025-03-30 18:13:59,349:INFO:Initializing create_model()
2025-03-30 18:13:59,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:13:59,349:INFO:Checking exceptions
2025-03-30 18:13:59,349:INFO:Importing libraries
2025-03-30 18:13:59,349:INFO:Copying training dataset
2025-03-30 18:13:59,349:INFO:Defining folds
2025-03-30 18:13:59,349:INFO:Declaring metric variables
2025-03-30 18:13:59,349:INFO:Importing untrained model
2025-03-30 18:13:59,349:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:13:59,349:INFO:Starting cross validation
2025-03-30 18:13:59,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:13:59,438:INFO:Calculating mean and std
2025-03-30 18:13:59,439:INFO:Creating metrics dataframe
2025-03-30 18:13:59,440:INFO:Finalizing model
2025-03-30 18:13:59,472:INFO:Creating Dashboard logs
2025-03-30 18:13:59,472:INFO:Model: Decision Tree Classifier
2025-03-30 18:13:59,504:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:13:59,662:INFO:Initializing predict_model()
2025-03-30 18:13:59,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017F6206DE50>)
2025-03-30 18:13:59,662:INFO:Checking exceptions
2025-03-30 18:13:59,662:INFO:Preloading libraries
2025-03-30 18:13:59,806:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:13:59,806:INFO:Uploading results into container
2025-03-30 18:13:59,806:INFO:Uploading model into container now
2025-03-30 18:13:59,806:INFO:_master_model_container: 3
2025-03-30 18:13:59,806:INFO:_display_container: 4
2025-03-30 18:13:59,806:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:13:59,806:INFO:create_model() successfully completed......................................
2025-03-30 18:13:59,905:INFO:Initializing calibrate_model()
2025-03-30 18:13:59,905:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:13:59,905:INFO:Checking exceptions
2025-03-30 18:13:59,905:INFO:Preloading libraries
2025-03-30 18:13:59,905:INFO:Preparing display monitor
2025-03-30 18:13:59,905:INFO:Getting model name
2025-03-30 18:13:59,905:INFO:Base model : Decision Tree Classifier
2025-03-30 18:13:59,905:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:13:59,905:INFO:SubProcess create_model() called ==================================
2025-03-30 18:13:59,905:INFO:Initializing create_model()
2025-03-30 18:13:59,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F621651C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:13:59,905:INFO:Checking exceptions
2025-03-30 18:13:59,905:INFO:Importing libraries
2025-03-30 18:13:59,905:INFO:Copying training dataset
2025-03-30 18:13:59,924:INFO:Defining folds
2025-03-30 18:13:59,924:INFO:Declaring metric variables
2025-03-30 18:13:59,924:INFO:Importing untrained model
2025-03-30 18:13:59,924:INFO:Declaring custom model
2025-03-30 18:13:59,925:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:13:59,925:INFO:Starting cross validation
2025-03-30 18:13:59,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:14:00,190:INFO:Calculating mean and std
2025-03-30 18:14:00,190:INFO:Creating metrics dataframe
2025-03-30 18:14:00,190:INFO:Finalizing model
2025-03-30 18:14:00,321:INFO:Uploading results into container
2025-03-30 18:14:00,321:INFO:Uploading model into container now
2025-03-30 18:14:00,321:INFO:_master_model_container: 4
2025-03-30 18:14:00,321:INFO:_display_container: 5
2025-03-30 18:14:00,321:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:14:00,321:INFO:create_model() successfully completed......................................
2025-03-30 18:14:00,416:INFO:SubProcess create_model() end ==================================
2025-03-30 18:14:00,416:INFO:Creating Dashboard logs
2025-03-30 18:14:00,416:INFO:Model: Decision Tree Classifier
2025-03-30 18:14:00,481:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:14:00,671:INFO:Initializing predict_model()
2025-03-30 18:14:00,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017F6206D160>)
2025-03-30 18:14:00,671:INFO:Checking exceptions
2025-03-30 18:14:00,671:INFO:Preloading libraries
2025-03-30 18:14:00,837:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:14:00,837:INFO:_master_model_container: 4
2025-03-30 18:14:00,837:INFO:_display_container: 5
2025-03-30 18:14:00,837:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:14:00,837:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:14:00,939:INFO:Initializing finalize_model()
2025-03-30 18:14:00,939:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:14:00,940:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:14:00,942:INFO:Initializing create_model()
2025-03-30 18:14:00,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F6028ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:14:00,942:INFO:Checking exceptions
2025-03-30 18:14:00,944:INFO:Importing libraries
2025-03-30 18:14:00,944:INFO:Copying training dataset
2025-03-30 18:14:00,944:INFO:Defining folds
2025-03-30 18:14:00,945:INFO:Declaring metric variables
2025-03-30 18:14:00,945:INFO:Importing untrained model
2025-03-30 18:14:00,945:INFO:Declaring custom model
2025-03-30 18:14:00,945:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:14:00,946:INFO:Cross validation set to False
2025-03-30 18:14:00,946:INFO:Fitting Model
2025-03-30 18:14:01,160:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:14:01,160:INFO:create_model() successfully completed......................................
2025-03-30 18:14:01,250:INFO:Creating Dashboard logs
2025-03-30 18:14:01,250:INFO:Model: Decision Tree Classifier
2025-03-30 18:14:01,288:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:14:01,463:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:14:01,463:INFO:_master_model_container: 4
2025-03-30 18:14:01,463:INFO:_display_container: 5
2025-03-30 18:14:01,463:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:14:01,463:INFO:finalize_model() successfully completed......................................
2025-03-30 18:14:01,596:INFO:Initializing save_model()
2025-03-30 18:14:01,596:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:14:01,596:INFO:Adding model into prep_pipe
2025-03-30 18:14:01,596:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:14:01,596:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:14:01,609:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:14:01,609:INFO:save_model() successfully completed......................................
2025-03-30 18:14:04,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:14:04,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:14:04,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:14:04,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:14:05,467:INFO:Initializing load_model()
2025-03-30 18:14:05,467:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:26:26,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:26,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:26,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:26,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:26,555:INFO:PyCaret ClassificationExperiment
2025-03-30 18:26:26,555:INFO:Logging name: Treinamento
2025-03-30 18:26:26,555:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:26:26,555:INFO:version 3.3.2
2025-03-30 18:26:26,555:INFO:Initializing setup()
2025-03-30 18:26:26,555:INFO:self.USI: b960
2025-03-30 18:26:26,555:INFO:self._variable_keys: {'memory', 'y_test', 'data', 'seed', 'logging_param', '_ml_usecase', 'fold_generator', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'html_param', 'y', 'fix_imbalance', 'X_test', 'idx', 'X_train', 'gpu_n_jobs_param', '_available_plots', 'y_train', 'is_multiclass', 'exp_id', 'pipeline', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'gpu_param', 'X', 'USI'}
2025-03-30 18:26:26,555:INFO:Checking environment
2025-03-30 18:26:26,555:INFO:python_version: 3.9.21
2025-03-30 18:26:26,555:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:26:26,555:INFO:machine: AMD64
2025-03-30 18:26:26,576:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:26:26,582:INFO:Memory: svmem(total=33685155840, available=21393645568, percent=36.5, used=12291510272, free=21393645568)
2025-03-30 18:26:26,582:INFO:Physical Core: 6
2025-03-30 18:26:26,582:INFO:Logical Core: 12
2025-03-30 18:26:26,582:INFO:Checking libraries
2025-03-30 18:26:26,584:INFO:System:
2025-03-30 18:26:26,584:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:26:26,584:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:26:26,584:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:26:26,584:INFO:PyCaret required dependencies:
2025-03-30 18:26:26,619:INFO:                 pip: 25.0
2025-03-30 18:26:26,619:INFO:          setuptools: 75.8.0
2025-03-30 18:26:26,619:INFO:             pycaret: 3.3.2
2025-03-30 18:26:26,619:INFO:             IPython: 8.18.1
2025-03-30 18:26:26,619:INFO:          ipywidgets: 8.1.5
2025-03-30 18:26:26,619:INFO:                tqdm: 4.67.1
2025-03-30 18:26:26,619:INFO:               numpy: 1.26.4
2025-03-30 18:26:26,619:INFO:              pandas: 1.5.3
2025-03-30 18:26:26,619:INFO:              jinja2: 3.1.6
2025-03-30 18:26:26,619:INFO:               scipy: 1.11.4
2025-03-30 18:26:26,619:INFO:              joblib: 1.3.2
2025-03-30 18:26:26,619:INFO:             sklearn: 1.4.2
2025-03-30 18:26:26,619:INFO:                pyod: 2.0.3
2025-03-30 18:26:26,619:INFO:            imblearn: 0.12.4
2025-03-30 18:26:26,619:INFO:   category_encoders: 2.6.4
2025-03-30 18:26:26,619:INFO:            lightgbm: 4.6.0
2025-03-30 18:26:26,619:INFO:               numba: 0.60.0
2025-03-30 18:26:26,619:INFO:            requests: 2.32.3
2025-03-30 18:26:26,619:INFO:          matplotlib: 3.7.5
2025-03-30 18:26:26,619:INFO:          scikitplot: 0.3.7
2025-03-30 18:26:26,619:INFO:         yellowbrick: 1.5
2025-03-30 18:26:26,619:INFO:              plotly: 5.24.1
2025-03-30 18:26:26,619:INFO:    plotly-resampler: Not installed
2025-03-30 18:26:26,619:INFO:             kaleido: 0.2.1
2025-03-30 18:26:26,619:INFO:           schemdraw: 0.15
2025-03-30 18:26:26,619:INFO:         statsmodels: 0.14.4
2025-03-30 18:26:26,619:INFO:              sktime: 0.26.0
2025-03-30 18:26:26,619:INFO:               tbats: 1.1.3
2025-03-30 18:26:26,619:INFO:            pmdarima: 2.0.4
2025-03-30 18:26:26,619:INFO:              psutil: 7.0.0
2025-03-30 18:26:26,619:INFO:          markupsafe: 3.0.2
2025-03-30 18:26:26,619:INFO:             pickle5: Not installed
2025-03-30 18:26:26,619:INFO:         cloudpickle: 2.2.1
2025-03-30 18:26:26,619:INFO:         deprecation: 2.1.0
2025-03-30 18:26:26,619:INFO:              xxhash: 3.5.0
2025-03-30 18:26:26,619:INFO:           wurlitzer: Not installed
2025-03-30 18:26:26,619:INFO:PyCaret optional dependencies:
2025-03-30 18:26:26,943:INFO:                shap: 0.47.1
2025-03-30 18:26:26,943:INFO:           interpret: Not installed
2025-03-30 18:26:26,943:INFO:                umap: Not installed
2025-03-30 18:26:26,943:INFO:     ydata_profiling: Not installed
2025-03-30 18:26:26,943:INFO:  explainerdashboard: Not installed
2025-03-30 18:26:26,943:INFO:             autoviz: Not installed
2025-03-30 18:26:26,943:INFO:           fairlearn: Not installed
2025-03-30 18:26:26,943:INFO:          deepchecks: Not installed
2025-03-30 18:26:26,943:INFO:             xgboost: Not installed
2025-03-30 18:26:26,943:INFO:            catboost: Not installed
2025-03-30 18:26:26,943:INFO:              kmodes: Not installed
2025-03-30 18:26:26,943:INFO:             mlxtend: Not installed
2025-03-30 18:26:26,943:INFO:       statsforecast: Not installed
2025-03-30 18:26:26,943:INFO:        tune_sklearn: Not installed
2025-03-30 18:26:26,943:INFO:                 ray: Not installed
2025-03-30 18:26:26,943:INFO:            hyperopt: Not installed
2025-03-30 18:26:26,943:INFO:              optuna: Not installed
2025-03-30 18:26:26,943:INFO:               skopt: Not installed
2025-03-30 18:26:26,943:INFO:              mlflow: 2.21.0
2025-03-30 18:26:26,943:INFO:              gradio: Not installed
2025-03-30 18:26:26,943:INFO:             fastapi: 0.115.11
2025-03-30 18:26:26,943:INFO:             uvicorn: 0.34.0
2025-03-30 18:26:26,943:INFO:              m2cgen: Not installed
2025-03-30 18:26:26,943:INFO:           evidently: Not installed
2025-03-30 18:26:26,943:INFO:               fugue: Not installed
2025-03-30 18:26:26,943:INFO:           streamlit: 1.43.2
2025-03-30 18:26:26,943:INFO:             prophet: Not installed
2025-03-30 18:26:26,943:INFO:None
2025-03-30 18:26:26,943:INFO:Set up data.
2025-03-30 18:26:26,956:INFO:Set up folding strategy.
2025-03-30 18:26:26,956:INFO:Set up train/test split.
2025-03-30 18:26:26,956:INFO:Set up index.
2025-03-30 18:26:26,956:INFO:Assigning column types.
2025-03-30 18:26:26,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:26:26,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,075:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:26:27,106:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:26:27,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,172:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:26:27,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,278:INFO:Preparing preprocessing pipeline...
2025-03-30 18:26:27,278:INFO:Set up simple imputation.
2025-03-30 18:26:27,297:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:26:27,300:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:26:27,300:INFO:Creating final display dataframe.
2025-03-30 18:26:27,339:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             b960
2025-03-30 18:26:27,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:26:27,439:INFO:Logging experiment in loggers
2025-03-30 18:26:27,684:INFO:SubProcess save_model() called ==================================
2025-03-30 18:26:27,688:INFO:Initializing save_model()
2025-03-30 18:26:27,688:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpxen4t1eu\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:26:27,688:INFO:Adding model into prep_pipe
2025-03-30 18:26:27,688:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:26:27,689:INFO:C:\Users\Ian\AppData\Local\Temp\tmpxen4t1eu\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:26:27,689:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:26:27,689:INFO:save_model() successfully completed......................................
2025-03-30 18:26:27,772:INFO:SubProcess save_model() end ==================================
2025-03-30 18:26:27,806:INFO:setup() successfully completed in 0.88s...............
2025-03-30 18:26:27,806:INFO:Initializing create_model()
2025-03-30 18:26:27,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:27,806:INFO:Checking exceptions
2025-03-30 18:26:27,806:INFO:Importing libraries
2025-03-30 18:26:27,806:INFO:Copying training dataset
2025-03-30 18:26:27,818:INFO:Defining folds
2025-03-30 18:26:27,818:INFO:Declaring metric variables
2025-03-30 18:26:27,818:INFO:Importing untrained model
2025-03-30 18:26:27,818:INFO:Logistic Regression Imported successfully
2025-03-30 18:26:27,820:INFO:Starting cross validation
2025-03-30 18:26:27,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:26:31,090:INFO:Calculating mean and std
2025-03-30 18:26:31,092:INFO:Creating metrics dataframe
2025-03-30 18:26:31,094:INFO:Finalizing model
2025-03-30 18:26:31,129:INFO:Creating Dashboard logs
2025-03-30 18:26:31,139:INFO:Model: Logistic Regression
2025-03-30 18:26:31,184:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:26:31,307:INFO:Initializing predict_model()
2025-03-30 18:26:31,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4B5DB29D0>)
2025-03-30 18:26:31,307:INFO:Checking exceptions
2025-03-30 18:26:31,307:INFO:Preloading libraries
2025-03-30 18:26:31,456:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:26:31,472:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:31,472:INFO:Uploading results into container
2025-03-30 18:26:31,472:INFO:Uploading model into container now
2025-03-30 18:26:31,472:INFO:_master_model_container: 1
2025-03-30 18:26:31,472:INFO:_display_container: 2
2025-03-30 18:26:31,472:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:26:31,472:INFO:create_model() successfully completed......................................
2025-03-30 18:26:31,569:INFO:Initializing calibrate_model()
2025-03-30 18:26:31,571:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:26:31,571:INFO:Checking exceptions
2025-03-30 18:26:31,572:INFO:Preloading libraries
2025-03-30 18:26:31,572:INFO:Preparing display monitor
2025-03-30 18:26:31,573:INFO:Getting model name
2025-03-30 18:26:31,573:INFO:Base model : Logistic Regression
2025-03-30 18:26:31,573:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:26:31,573:INFO:SubProcess create_model() called ==================================
2025-03-30 18:26:31,573:INFO:Initializing create_model()
2025-03-30 18:26:31,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B4B5DB09D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:31,573:INFO:Checking exceptions
2025-03-30 18:26:31,573:INFO:Importing libraries
2025-03-30 18:26:31,573:INFO:Copying training dataset
2025-03-30 18:26:31,577:INFO:Defining folds
2025-03-30 18:26:31,577:INFO:Declaring metric variables
2025-03-30 18:26:31,577:INFO:Importing untrained model
2025-03-30 18:26:31,577:INFO:Declaring custom model
2025-03-30 18:26:31,577:INFO:Logistic Regression Imported successfully
2025-03-30 18:26:31,577:INFO:Starting cross validation
2025-03-30 18:26:31,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:26:33,388:INFO:Calculating mean and std
2025-03-30 18:26:33,388:INFO:Creating metrics dataframe
2025-03-30 18:26:33,390:INFO:Finalizing model
2025-03-30 18:26:33,537:INFO:Uploading results into container
2025-03-30 18:26:33,537:INFO:Uploading model into container now
2025-03-30 18:26:33,537:INFO:_master_model_container: 2
2025-03-30 18:26:33,537:INFO:_display_container: 3
2025-03-30 18:26:33,537:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:33,537:INFO:create_model() successfully completed......................................
2025-03-30 18:26:33,622:INFO:SubProcess create_model() end ==================================
2025-03-30 18:26:33,622:INFO:Creating Dashboard logs
2025-03-30 18:26:33,622:INFO:Model: Logistic Regression
2025-03-30 18:26:33,673:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:26:33,820:INFO:Initializing predict_model()
2025-03-30 18:26:33,820:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4B5DB2790>)
2025-03-30 18:26:33,820:INFO:Checking exceptions
2025-03-30 18:26:33,820:INFO:Preloading libraries
2025-03-30 18:26:33,976:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:33,976:INFO:_master_model_container: 2
2025-03-30 18:26:33,976:INFO:_display_container: 3
2025-03-30 18:26:33,976:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:33,976:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:26:34,073:INFO:Initializing finalize_model()
2025-03-30 18:26:34,073:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:26:34,073:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:34,080:INFO:Initializing create_model()
2025-03-30 18:26:34,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:34,080:INFO:Checking exceptions
2025-03-30 18:26:34,080:INFO:Importing libraries
2025-03-30 18:26:34,080:INFO:Copying training dataset
2025-03-30 18:26:34,080:INFO:Defining folds
2025-03-30 18:26:34,080:INFO:Declaring metric variables
2025-03-30 18:26:34,080:INFO:Importing untrained model
2025-03-30 18:26:34,082:INFO:Declaring custom model
2025-03-30 18:26:34,082:INFO:Logistic Regression Imported successfully
2025-03-30 18:26:34,082:INFO:Cross validation set to False
2025-03-30 18:26:34,082:INFO:Fitting Model
2025-03-30 18:26:34,259:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:26:34,259:INFO:create_model() successfully completed......................................
2025-03-30 18:26:34,341:INFO:Creating Dashboard logs
2025-03-30 18:26:34,341:INFO:Model: Logistic Regression
2025-03-30 18:26:34,389:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:26:34,536:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:34,536:INFO:_master_model_container: 2
2025-03-30 18:26:34,536:INFO:_display_container: 3
2025-03-30 18:26:34,540:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:26:34,540:INFO:finalize_model() successfully completed......................................
2025-03-30 18:26:34,637:INFO:Initializing create_model()
2025-03-30 18:26:34,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:34,637:INFO:Checking exceptions
2025-03-30 18:26:34,637:INFO:Importing libraries
2025-03-30 18:26:34,637:INFO:Copying training dataset
2025-03-30 18:26:34,637:INFO:Defining folds
2025-03-30 18:26:34,637:INFO:Declaring metric variables
2025-03-30 18:26:34,637:INFO:Importing untrained model
2025-03-30 18:26:34,637:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:26:34,637:INFO:Starting cross validation
2025-03-30 18:26:34,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:26:34,738:INFO:Calculating mean and std
2025-03-30 18:26:34,739:INFO:Creating metrics dataframe
2025-03-30 18:26:34,740:INFO:Finalizing model
2025-03-30 18:26:34,773:INFO:Creating Dashboard logs
2025-03-30 18:26:34,773:INFO:Model: Decision Tree Classifier
2025-03-30 18:26:34,823:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:26:34,981:INFO:Initializing predict_model()
2025-03-30 18:26:34,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4B60DF160>)
2025-03-30 18:26:34,981:INFO:Checking exceptions
2025-03-30 18:26:34,981:INFO:Preloading libraries
2025-03-30 18:26:35,124:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:35,124:INFO:Uploading results into container
2025-03-30 18:26:35,124:INFO:Uploading model into container now
2025-03-30 18:26:35,130:INFO:_master_model_container: 3
2025-03-30 18:26:35,130:INFO:_display_container: 4
2025-03-30 18:26:35,132:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:26:35,132:INFO:create_model() successfully completed......................................
2025-03-30 18:26:35,206:INFO:Initializing calibrate_model()
2025-03-30 18:26:35,206:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:26:35,206:INFO:Checking exceptions
2025-03-30 18:26:35,222:INFO:Preloading libraries
2025-03-30 18:26:35,222:INFO:Preparing display monitor
2025-03-30 18:26:35,222:INFO:Getting model name
2025-03-30 18:26:35,222:INFO:Base model : Decision Tree Classifier
2025-03-30 18:26:35,222:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:26:35,222:INFO:SubProcess create_model() called ==================================
2025-03-30 18:26:35,222:INFO:Initializing create_model()
2025-03-30 18:26:35,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B4B489B430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:35,222:INFO:Checking exceptions
2025-03-30 18:26:35,222:INFO:Importing libraries
2025-03-30 18:26:35,222:INFO:Copying training dataset
2025-03-30 18:26:35,222:INFO:Defining folds
2025-03-30 18:26:35,222:INFO:Declaring metric variables
2025-03-30 18:26:35,222:INFO:Importing untrained model
2025-03-30 18:26:35,222:INFO:Declaring custom model
2025-03-30 18:26:35,222:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:26:35,222:INFO:Starting cross validation
2025-03-30 18:26:35,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:26:35,481:INFO:Calculating mean and std
2025-03-30 18:26:35,481:INFO:Creating metrics dataframe
2025-03-30 18:26:35,483:INFO:Finalizing model
2025-03-30 18:26:35,625:INFO:Uploading results into container
2025-03-30 18:26:35,625:INFO:Uploading model into container now
2025-03-30 18:26:35,625:INFO:_master_model_container: 4
2025-03-30 18:26:35,625:INFO:_display_container: 5
2025-03-30 18:26:35,625:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:35,625:INFO:create_model() successfully completed......................................
2025-03-30 18:26:35,718:INFO:SubProcess create_model() end ==================================
2025-03-30 18:26:35,718:INFO:Creating Dashboard logs
2025-03-30 18:26:35,718:INFO:Model: Decision Tree Classifier
2025-03-30 18:26:35,772:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:26:35,973:INFO:Initializing predict_model()
2025-03-30 18:26:35,973:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B4B60DFC10>)
2025-03-30 18:26:35,973:INFO:Checking exceptions
2025-03-30 18:26:35,973:INFO:Preloading libraries
2025-03-30 18:26:36,132:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:36,148:INFO:_master_model_container: 4
2025-03-30 18:26:36,148:INFO:_display_container: 5
2025-03-30 18:26:36,148:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:36,148:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:26:36,239:INFO:Initializing finalize_model()
2025-03-30 18:26:36,239:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:26:36,240:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:26:36,242:INFO:Initializing create_model()
2025-03-30 18:26:36,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B4B42FACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:26:36,242:INFO:Checking exceptions
2025-03-30 18:26:36,243:INFO:Importing libraries
2025-03-30 18:26:36,243:INFO:Copying training dataset
2025-03-30 18:26:36,243:INFO:Defining folds
2025-03-30 18:26:36,243:INFO:Declaring metric variables
2025-03-30 18:26:36,243:INFO:Importing untrained model
2025-03-30 18:26:36,243:INFO:Declaring custom model
2025-03-30 18:26:36,244:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:26:36,244:INFO:Cross validation set to False
2025-03-30 18:26:36,244:INFO:Fitting Model
2025-03-30 18:26:36,439:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:26:36,439:INFO:create_model() successfully completed......................................
2025-03-30 18:26:36,522:INFO:Creating Dashboard logs
2025-03-30 18:26:36,522:INFO:Model: Decision Tree Classifier
2025-03-30 18:26:36,572:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:26:36,762:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:26:36,762:INFO:_master_model_container: 4
2025-03-30 18:26:36,762:INFO:_display_container: 5
2025-03-30 18:26:36,772:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:26:36,772:INFO:finalize_model() successfully completed......................................
2025-03-30 18:26:36,889:INFO:Initializing save_model()
2025-03-30 18:26:36,889:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:26:36,889:INFO:Adding model into prep_pipe
2025-03-30 18:26:36,889:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:26:36,889:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:26:36,898:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:26:36,898:INFO:save_model() successfully completed......................................
2025-03-30 18:26:39,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:39,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:39,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:39,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:26:41,000:INFO:Initializing load_model()
2025-03-30 18:26:41,000:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:27:33,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:27:33,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:27:33,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:27:33,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:27:34,505:INFO:Initializing load_model()
2025-03-30 18:27:34,505:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:27:34,595:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(

2025-03-30 18:29:38,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:29:38,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:29:38,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:29:38,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:29:39,808:INFO:Initializing load_model()
2025-03-30 18:29:39,808:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:30:03,343:INFO:Initializing load_model()
2025-03-30 18:30:03,343:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:30:04,031:INFO:Initializing load_model()
2025-03-30 18:30:04,032:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:30:04,741:INFO:Initializing load_model()
2025-03-30 18:30:04,741:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:30:07,252:INFO:Initializing load_model()
2025-03-30 18:30:07,252:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:30:08,116:INFO:Initializing load_model()
2025-03-30 18:30:08,116:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:40,271:INFO:Initializing load_model()
2025-03-30 18:32:40,271:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:42,725:INFO:Initializing load_model()
2025-03-30 18:32:42,725:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:43,392:INFO:Initializing load_model()
2025-03-30 18:32:43,392:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:44,018:INFO:Initializing load_model()
2025-03-30 18:32:44,018:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:45,802:INFO:Initializing load_model()
2025-03-30 18:32:45,802:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:32:46,772:INFO:Initializing load_model()
2025-03-30 18:32:46,772:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 18:35:55,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:35:55,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:35:55,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:35:55,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:35:56,458:INFO:PyCaret ClassificationExperiment
2025-03-30 18:35:56,458:INFO:Logging name: Treinamento
2025-03-30 18:35:56,459:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 18:35:56,459:INFO:version 3.3.2
2025-03-30 18:35:56,459:INFO:Initializing setup()
2025-03-30 18:35:56,459:INFO:self.USI: 117d
2025-03-30 18:35:56,459:INFO:self._variable_keys: {'n_jobs_param', 'X_train', 'fix_imbalance', 'fold_generator', 'is_multiclass', 'memory', '_ml_usecase', 'fold_shuffle_param', 'logging_param', 'X', 'data', 'fold_groups_param', 'html_param', 'y_train', 'target_param', 'y', '_available_plots', 'seed', 'X_test', 'idx', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'gpu_param', 'exp_name_log', 'exp_id', 'USI', 'y_test'}
2025-03-30 18:35:56,459:INFO:Checking environment
2025-03-30 18:35:56,459:INFO:python_version: 3.9.21
2025-03-30 18:35:56,459:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 18:35:56,459:INFO:machine: AMD64
2025-03-30 18:35:56,474:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 18:35:56,479:INFO:Memory: svmem(total=33685155840, available=19972472832, percent=40.7, used=13712683008, free=19972472832)
2025-03-30 18:35:56,479:INFO:Physical Core: 6
2025-03-30 18:35:56,479:INFO:Logical Core: 12
2025-03-30 18:35:56,479:INFO:Checking libraries
2025-03-30 18:35:56,479:INFO:System:
2025-03-30 18:35:56,479:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 18:35:56,479:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 18:35:56,479:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 18:35:56,479:INFO:PyCaret required dependencies:
2025-03-30 18:35:56,506:INFO:                 pip: 25.0
2025-03-30 18:35:56,506:INFO:          setuptools: 75.8.0
2025-03-30 18:35:56,506:INFO:             pycaret: 3.3.2
2025-03-30 18:35:56,506:INFO:             IPython: 8.18.1
2025-03-30 18:35:56,506:INFO:          ipywidgets: 8.1.5
2025-03-30 18:35:56,506:INFO:                tqdm: 4.67.1
2025-03-30 18:35:56,506:INFO:               numpy: 1.26.4
2025-03-30 18:35:56,506:INFO:              pandas: 1.5.3
2025-03-30 18:35:56,506:INFO:              jinja2: 3.1.6
2025-03-30 18:35:56,506:INFO:               scipy: 1.11.4
2025-03-30 18:35:56,506:INFO:              joblib: 1.3.2
2025-03-30 18:35:56,506:INFO:             sklearn: 1.4.2
2025-03-30 18:35:56,506:INFO:                pyod: 2.0.3
2025-03-30 18:35:56,506:INFO:            imblearn: 0.12.4
2025-03-30 18:35:56,506:INFO:   category_encoders: 2.6.4
2025-03-30 18:35:56,506:INFO:            lightgbm: 4.6.0
2025-03-30 18:35:56,506:INFO:               numba: 0.60.0
2025-03-30 18:35:56,506:INFO:            requests: 2.32.3
2025-03-30 18:35:56,506:INFO:          matplotlib: 3.7.5
2025-03-30 18:35:56,506:INFO:          scikitplot: 0.3.7
2025-03-30 18:35:56,506:INFO:         yellowbrick: 1.5
2025-03-30 18:35:56,506:INFO:              plotly: 5.24.1
2025-03-30 18:35:56,506:INFO:    plotly-resampler: Not installed
2025-03-30 18:35:56,506:INFO:             kaleido: 0.2.1
2025-03-30 18:35:56,506:INFO:           schemdraw: 0.15
2025-03-30 18:35:56,506:INFO:         statsmodels: 0.14.4
2025-03-30 18:35:56,506:INFO:              sktime: 0.26.0
2025-03-30 18:35:56,506:INFO:               tbats: 1.1.3
2025-03-30 18:35:56,506:INFO:            pmdarima: 2.0.4
2025-03-30 18:35:56,506:INFO:              psutil: 7.0.0
2025-03-30 18:35:56,506:INFO:          markupsafe: 3.0.2
2025-03-30 18:35:56,506:INFO:             pickle5: Not installed
2025-03-30 18:35:56,506:INFO:         cloudpickle: 2.2.1
2025-03-30 18:35:56,506:INFO:         deprecation: 2.1.0
2025-03-30 18:35:56,506:INFO:              xxhash: 3.5.0
2025-03-30 18:35:56,506:INFO:           wurlitzer: Not installed
2025-03-30 18:35:56,506:INFO:PyCaret optional dependencies:
2025-03-30 18:35:56,832:INFO:                shap: 0.47.1
2025-03-30 18:35:56,832:INFO:           interpret: Not installed
2025-03-30 18:35:56,832:INFO:                umap: Not installed
2025-03-30 18:35:56,832:INFO:     ydata_profiling: Not installed
2025-03-30 18:35:56,832:INFO:  explainerdashboard: Not installed
2025-03-30 18:35:56,832:INFO:             autoviz: Not installed
2025-03-30 18:35:56,832:INFO:           fairlearn: Not installed
2025-03-30 18:35:56,832:INFO:          deepchecks: Not installed
2025-03-30 18:35:56,832:INFO:             xgboost: Not installed
2025-03-30 18:35:56,832:INFO:            catboost: Not installed
2025-03-30 18:35:56,832:INFO:              kmodes: Not installed
2025-03-30 18:35:56,832:INFO:             mlxtend: Not installed
2025-03-30 18:35:56,832:INFO:       statsforecast: Not installed
2025-03-30 18:35:56,832:INFO:        tune_sklearn: Not installed
2025-03-30 18:35:56,832:INFO:                 ray: Not installed
2025-03-30 18:35:56,832:INFO:            hyperopt: Not installed
2025-03-30 18:35:56,832:INFO:              optuna: Not installed
2025-03-30 18:35:56,832:INFO:               skopt: Not installed
2025-03-30 18:35:56,832:INFO:              mlflow: 2.21.0
2025-03-30 18:35:56,832:INFO:              gradio: Not installed
2025-03-30 18:35:56,832:INFO:             fastapi: 0.115.11
2025-03-30 18:35:56,832:INFO:             uvicorn: 0.34.0
2025-03-30 18:35:56,832:INFO:              m2cgen: Not installed
2025-03-30 18:35:56,832:INFO:           evidently: Not installed
2025-03-30 18:35:56,832:INFO:               fugue: Not installed
2025-03-30 18:35:56,832:INFO:           streamlit: 1.43.2
2025-03-30 18:35:56,832:INFO:             prophet: Not installed
2025-03-30 18:35:56,832:INFO:None
2025-03-30 18:35:56,833:INFO:Set up data.
2025-03-30 18:35:56,837:INFO:Set up folding strategy.
2025-03-30 18:35:56,837:INFO:Set up train/test split.
2025-03-30 18:35:56,844:INFO:Set up index.
2025-03-30 18:35:56,844:INFO:Assigning column types.
2025-03-30 18:35:56,846:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 18:35:56,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:35:56,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:35:56,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:56,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:56,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 18:35:56,937:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:35:56,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:56,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:56,956:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 18:35:56,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:35:57,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 18:35:57,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,058:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 18:35:57,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,168:INFO:Preparing preprocessing pipeline...
2025-03-30 18:35:57,169:INFO:Set up simple imputation.
2025-03-30 18:35:57,183:INFO:Finished creating preprocessing pipeline.
2025-03-30 18:35:57,187:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:35:57,187:INFO:Creating final display dataframe.
2025-03-30 18:35:57,229:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             117d
2025-03-30 18:35:57,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 18:35:57,331:INFO:Logging experiment in loggers
2025-03-30 18:35:57,590:INFO:SubProcess save_model() called ==================================
2025-03-30 18:35:57,594:INFO:Initializing save_model()
2025-03-30 18:35:57,594:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmphp98w96h\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:35:57,594:INFO:Adding model into prep_pipe
2025-03-30 18:35:57,594:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:35:57,598:INFO:C:\Users\Ian\AppData\Local\Temp\tmphp98w96h\Transformation Pipeline.pkl saved in current working directory
2025-03-30 18:35:57,600:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 18:35:57,600:INFO:save_model() successfully completed......................................
2025-03-30 18:35:57,685:INFO:SubProcess save_model() end ==================================
2025-03-30 18:35:57,712:INFO:setup() successfully completed in 0.88s...............
2025-03-30 18:35:57,713:INFO:Initializing create_model()
2025-03-30 18:35:57,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:35:57,713:INFO:Checking exceptions
2025-03-30 18:35:57,714:INFO:Importing libraries
2025-03-30 18:35:57,714:INFO:Copying training dataset
2025-03-30 18:35:57,718:INFO:Defining folds
2025-03-30 18:35:57,718:INFO:Declaring metric variables
2025-03-30 18:35:57,718:INFO:Importing untrained model
2025-03-30 18:35:57,718:INFO:Logistic Regression Imported successfully
2025-03-30 18:35:57,718:INFO:Starting cross validation
2025-03-30 18:35:57,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:36:01,087:INFO:Calculating mean and std
2025-03-30 18:36:01,090:INFO:Creating metrics dataframe
2025-03-30 18:36:01,093:INFO:Finalizing model
2025-03-30 18:36:01,134:INFO:Creating Dashboard logs
2025-03-30 18:36:01,134:INFO:Model: Logistic Regression
2025-03-30 18:36:01,184:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 18:36:01,319:INFO:Initializing predict_model()
2025-03-30 18:36:01,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000287A38B39D0>)
2025-03-30 18:36:01,319:INFO:Checking exceptions
2025-03-30 18:36:01,319:INFO:Preloading libraries
2025-03-30 18:36:01,461:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 18:36:01,479:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:01,480:INFO:Uploading results into container
2025-03-30 18:36:01,480:INFO:Uploading model into container now
2025-03-30 18:36:01,486:INFO:_master_model_container: 1
2025-03-30 18:36:01,486:INFO:_display_container: 2
2025-03-30 18:36:01,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 18:36:01,487:INFO:create_model() successfully completed......................................
2025-03-30 18:36:01,573:INFO:Initializing calibrate_model()
2025-03-30 18:36:01,573:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:36:01,573:INFO:Checking exceptions
2025-03-30 18:36:01,575:INFO:Preloading libraries
2025-03-30 18:36:01,575:INFO:Preparing display monitor
2025-03-30 18:36:01,576:INFO:Getting model name
2025-03-30 18:36:01,576:INFO:Base model : Logistic Regression
2025-03-30 18:36:01,576:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:36:01,576:INFO:SubProcess create_model() called ==================================
2025-03-30 18:36:01,577:INFO:Initializing create_model()
2025-03-30 18:36:01,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000287A38B1CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:36:01,577:INFO:Checking exceptions
2025-03-30 18:36:01,577:INFO:Importing libraries
2025-03-30 18:36:01,577:INFO:Copying training dataset
2025-03-30 18:36:01,580:INFO:Defining folds
2025-03-30 18:36:01,580:INFO:Declaring metric variables
2025-03-30 18:36:01,580:INFO:Importing untrained model
2025-03-30 18:36:01,580:INFO:Declaring custom model
2025-03-30 18:36:01,580:INFO:Logistic Regression Imported successfully
2025-03-30 18:36:01,580:INFO:Starting cross validation
2025-03-30 18:36:01,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:36:03,464:INFO:Calculating mean and std
2025-03-30 18:36:03,464:INFO:Creating metrics dataframe
2025-03-30 18:36:03,466:INFO:Finalizing model
2025-03-30 18:36:03,607:INFO:Uploading results into container
2025-03-30 18:36:03,607:INFO:Uploading model into container now
2025-03-30 18:36:03,607:INFO:_master_model_container: 2
2025-03-30 18:36:03,607:INFO:_display_container: 3
2025-03-30 18:36:03,607:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:03,607:INFO:create_model() successfully completed......................................
2025-03-30 18:36:03,687:INFO:SubProcess create_model() end ==================================
2025-03-30 18:36:03,687:INFO:Creating Dashboard logs
2025-03-30 18:36:03,687:INFO:Model: Logistic Regression
2025-03-30 18:36:03,735:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:36:03,893:INFO:Initializing predict_model()
2025-03-30 18:36:03,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000287A20C7EE0>)
2025-03-30 18:36:03,893:INFO:Checking exceptions
2025-03-30 18:36:03,893:INFO:Preloading libraries
2025-03-30 18:36:04,057:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:04,072:INFO:_master_model_container: 2
2025-03-30 18:36:04,072:INFO:_display_container: 3
2025-03-30 18:36:04,073:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:04,073:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:36:04,165:INFO:Initializing finalize_model()
2025-03-30 18:36:04,165:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:36:04,165:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:04,168:INFO:Initializing create_model()
2025-03-30 18:36:04,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:36:04,168:INFO:Checking exceptions
2025-03-30 18:36:04,169:INFO:Importing libraries
2025-03-30 18:36:04,169:INFO:Copying training dataset
2025-03-30 18:36:04,169:INFO:Defining folds
2025-03-30 18:36:04,169:INFO:Declaring metric variables
2025-03-30 18:36:04,169:INFO:Importing untrained model
2025-03-30 18:36:04,169:INFO:Declaring custom model
2025-03-30 18:36:04,169:INFO:Logistic Regression Imported successfully
2025-03-30 18:36:04,170:INFO:Cross validation set to False
2025-03-30 18:36:04,170:INFO:Fitting Model
2025-03-30 18:36:04,340:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:36:04,340:INFO:create_model() successfully completed......................................
2025-03-30 18:36:04,424:INFO:Creating Dashboard logs
2025-03-30 18:36:04,424:INFO:Model: Logistic Regression
2025-03-30 18:36:04,485:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:36:04,632:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:04,632:INFO:_master_model_container: 2
2025-03-30 18:36:04,632:INFO:_display_container: 3
2025-03-30 18:36:04,635:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:36:04,635:INFO:finalize_model() successfully completed......................................
2025-03-30 18:36:04,746:INFO:Initializing create_model()
2025-03-30 18:36:04,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:36:04,746:INFO:Checking exceptions
2025-03-30 18:36:04,747:INFO:Importing libraries
2025-03-30 18:36:04,747:INFO:Copying training dataset
2025-03-30 18:36:04,750:INFO:Defining folds
2025-03-30 18:36:04,750:INFO:Declaring metric variables
2025-03-30 18:36:04,750:INFO:Importing untrained model
2025-03-30 18:36:04,751:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:36:04,751:INFO:Starting cross validation
2025-03-30 18:36:04,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:36:04,837:INFO:Calculating mean and std
2025-03-30 18:36:04,837:INFO:Creating metrics dataframe
2025-03-30 18:36:04,838:INFO:Finalizing model
2025-03-30 18:36:04,870:INFO:Creating Dashboard logs
2025-03-30 18:36:04,870:INFO:Model: Decision Tree Classifier
2025-03-30 18:36:04,917:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 18:36:05,092:INFO:Initializing predict_model()
2025-03-30 18:36:05,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000287A3BDDE50>)
2025-03-30 18:36:05,092:INFO:Checking exceptions
2025-03-30 18:36:05,092:INFO:Preloading libraries
2025-03-30 18:36:05,250:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:05,250:INFO:Uploading results into container
2025-03-30 18:36:05,250:INFO:Uploading model into container now
2025-03-30 18:36:05,250:INFO:_master_model_container: 3
2025-03-30 18:36:05,250:INFO:_display_container: 4
2025-03-30 18:36:05,250:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 18:36:05,250:INFO:create_model() successfully completed......................................
2025-03-30 18:36:05,345:INFO:Initializing calibrate_model()
2025-03-30 18:36:05,345:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 18:36:05,345:INFO:Checking exceptions
2025-03-30 18:36:05,345:INFO:Preloading libraries
2025-03-30 18:36:05,345:INFO:Preparing display monitor
2025-03-30 18:36:05,345:INFO:Getting model name
2025-03-30 18:36:05,345:INFO:Base model : Decision Tree Classifier
2025-03-30 18:36:05,345:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 18:36:05,345:INFO:SubProcess create_model() called ==================================
2025-03-30 18:36:05,345:INFO:Initializing create_model()
2025-03-30 18:36:05,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000287A2132AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:36:05,345:INFO:Checking exceptions
2025-03-30 18:36:05,345:INFO:Importing libraries
2025-03-30 18:36:05,345:INFO:Copying training dataset
2025-03-30 18:36:05,345:INFO:Defining folds
2025-03-30 18:36:05,345:INFO:Declaring metric variables
2025-03-30 18:36:05,345:INFO:Importing untrained model
2025-03-30 18:36:05,345:INFO:Declaring custom model
2025-03-30 18:36:05,345:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:36:05,345:INFO:Starting cross validation
2025-03-30 18:36:05,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 18:36:05,586:INFO:Calculating mean and std
2025-03-30 18:36:05,587:INFO:Creating metrics dataframe
2025-03-30 18:36:05,588:INFO:Finalizing model
2025-03-30 18:36:05,734:INFO:Uploading results into container
2025-03-30 18:36:05,734:INFO:Uploading model into container now
2025-03-30 18:36:05,734:INFO:_master_model_container: 4
2025-03-30 18:36:05,734:INFO:_display_container: 5
2025-03-30 18:36:05,734:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:05,734:INFO:create_model() successfully completed......................................
2025-03-30 18:36:05,824:INFO:SubProcess create_model() end ==================================
2025-03-30 18:36:05,827:INFO:Creating Dashboard logs
2025-03-30 18:36:05,827:INFO:Model: Decision Tree Classifier
2025-03-30 18:36:05,871:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:36:06,084:INFO:Initializing predict_model()
2025-03-30 18:36:06,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000287A3BDD160>)
2025-03-30 18:36:06,084:INFO:Checking exceptions
2025-03-30 18:36:06,084:INFO:Preloading libraries
2025-03-30 18:36:06,258:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:06,258:INFO:_master_model_container: 4
2025-03-30 18:36:06,258:INFO:_display_container: 5
2025-03-30 18:36:06,258:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:06,258:INFO:calibrate_model() successfully completed......................................
2025-03-30 18:36:06,340:INFO:Initializing finalize_model()
2025-03-30 18:36:06,340:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 18:36:06,340:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 18:36:06,357:INFO:Initializing create_model()
2025-03-30 18:36:06,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000287A1DEACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 18:36:06,357:INFO:Checking exceptions
2025-03-30 18:36:06,357:INFO:Importing libraries
2025-03-30 18:36:06,357:INFO:Copying training dataset
2025-03-30 18:36:06,357:INFO:Defining folds
2025-03-30 18:36:06,357:INFO:Declaring metric variables
2025-03-30 18:36:06,357:INFO:Importing untrained model
2025-03-30 18:36:06,357:INFO:Declaring custom model
2025-03-30 18:36:06,357:INFO:Decision Tree Classifier Imported successfully
2025-03-30 18:36:06,357:INFO:Cross validation set to False
2025-03-30 18:36:06,357:INFO:Fitting Model
2025-03-30 18:36:06,546:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:36:06,546:INFO:create_model() successfully completed......................................
2025-03-30 18:36:06,610:INFO:Creating Dashboard logs
2025-03-30 18:36:06,610:INFO:Model: Decision Tree Classifier
2025-03-30 18:36:06,674:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 18:36:06,864:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 18:36:06,864:INFO:_master_model_container: 4
2025-03-30 18:36:06,864:INFO:_display_container: 5
2025-03-30 18:36:06,868:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:36:06,868:INFO:finalize_model() successfully completed......................................
2025-03-30 18:36:06,985:INFO:Initializing save_model()
2025-03-30 18:36:06,985:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 18:36:06,985:INFO:Adding model into prep_pipe
2025-03-30 18:36:06,985:WARNING:Only Model saved as it was a pipeline.
2025-03-30 18:36:06,985:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 18:36:06,990:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 18:36:06,990:INFO:save_model() successfully completed......................................
2025-03-30 18:36:09,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:36:09,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:36:09,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:36:09,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 18:36:10,982:INFO:Initializing load_model()
2025-03-30 18:36:10,982:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:04:26,683:INFO:Initializing load_model()
2025-03-30 19:04:26,684:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:04:26,715:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(

2025-03-30 19:15:44,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:44,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:44,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:44,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:44,606:INFO:PyCaret ClassificationExperiment
2025-03-30 19:15:44,606:INFO:Logging name: Treinamento
2025-03-30 19:15:44,606:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 19:15:44,606:INFO:version 3.3.2
2025-03-30 19:15:44,606:INFO:Initializing setup()
2025-03-30 19:15:44,606:INFO:self.USI: caf1
2025-03-30 19:15:44,606:INFO:self._variable_keys: {'idx', 'data', 'gpu_param', 'X_train', '_ml_usecase', 'fold_shuffle_param', '_available_plots', 'exp_name_log', 'html_param', 'fold_groups_param', 'memory', 'target_param', 'pipeline', 'fix_imbalance', 'gpu_n_jobs_param', 'log_plots_param', 'is_multiclass', 'y_train', 'logging_param', 'n_jobs_param', 'X_test', 'fold_generator', 'seed', 'exp_id', 'y_test', 'y', 'X', 'USI'}
2025-03-30 19:15:44,606:INFO:Checking environment
2025-03-30 19:15:44,606:INFO:python_version: 3.9.21
2025-03-30 19:15:44,606:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 19:15:44,606:INFO:machine: AMD64
2025-03-30 19:15:44,628:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 19:15:44,628:INFO:Memory: svmem(total=33685155840, available=19782098944, percent=41.3, used=13903056896, free=19782098944)
2025-03-30 19:15:44,628:INFO:Physical Core: 6
2025-03-30 19:15:44,628:INFO:Logical Core: 12
2025-03-30 19:15:44,628:INFO:Checking libraries
2025-03-30 19:15:44,628:INFO:System:
2025-03-30 19:15:44,628:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 19:15:44,628:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 19:15:44,628:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 19:15:44,628:INFO:PyCaret required dependencies:
2025-03-30 19:15:44,656:INFO:                 pip: 25.0
2025-03-30 19:15:44,656:INFO:          setuptools: 75.8.0
2025-03-30 19:15:44,656:INFO:             pycaret: 3.3.2
2025-03-30 19:15:44,656:INFO:             IPython: 8.18.1
2025-03-30 19:15:44,656:INFO:          ipywidgets: 8.1.5
2025-03-30 19:15:44,656:INFO:                tqdm: 4.67.1
2025-03-30 19:15:44,656:INFO:               numpy: 1.26.4
2025-03-30 19:15:44,656:INFO:              pandas: 1.5.3
2025-03-30 19:15:44,656:INFO:              jinja2: 3.1.6
2025-03-30 19:15:44,656:INFO:               scipy: 1.11.4
2025-03-30 19:15:44,656:INFO:              joblib: 1.3.2
2025-03-30 19:15:44,656:INFO:             sklearn: 1.4.2
2025-03-30 19:15:44,656:INFO:                pyod: 2.0.3
2025-03-30 19:15:44,656:INFO:            imblearn: 0.12.4
2025-03-30 19:15:44,656:INFO:   category_encoders: 2.6.4
2025-03-30 19:15:44,656:INFO:            lightgbm: 4.6.0
2025-03-30 19:15:44,656:INFO:               numba: 0.60.0
2025-03-30 19:15:44,656:INFO:            requests: 2.32.3
2025-03-30 19:15:44,656:INFO:          matplotlib: 3.7.5
2025-03-30 19:15:44,656:INFO:          scikitplot: 0.3.7
2025-03-30 19:15:44,656:INFO:         yellowbrick: 1.5
2025-03-30 19:15:44,656:INFO:              plotly: 5.24.1
2025-03-30 19:15:44,656:INFO:    plotly-resampler: Not installed
2025-03-30 19:15:44,671:INFO:             kaleido: 0.2.1
2025-03-30 19:15:44,671:INFO:           schemdraw: 0.15
2025-03-30 19:15:44,671:INFO:         statsmodels: 0.14.4
2025-03-30 19:15:44,671:INFO:              sktime: 0.26.0
2025-03-30 19:15:44,671:INFO:               tbats: 1.1.3
2025-03-30 19:15:44,671:INFO:            pmdarima: 2.0.4
2025-03-30 19:15:44,671:INFO:              psutil: 7.0.0
2025-03-30 19:15:44,671:INFO:          markupsafe: 3.0.2
2025-03-30 19:15:44,671:INFO:             pickle5: Not installed
2025-03-30 19:15:44,671:INFO:         cloudpickle: 2.2.1
2025-03-30 19:15:44,671:INFO:         deprecation: 2.1.0
2025-03-30 19:15:44,671:INFO:              xxhash: 3.5.0
2025-03-30 19:15:44,671:INFO:           wurlitzer: Not installed
2025-03-30 19:15:44,671:INFO:PyCaret optional dependencies:
2025-03-30 19:15:44,987:INFO:                shap: 0.47.1
2025-03-30 19:15:44,987:INFO:           interpret: Not installed
2025-03-30 19:15:44,987:INFO:                umap: Not installed
2025-03-30 19:15:44,987:INFO:     ydata_profiling: Not installed
2025-03-30 19:15:44,987:INFO:  explainerdashboard: Not installed
2025-03-30 19:15:44,987:INFO:             autoviz: Not installed
2025-03-30 19:15:44,987:INFO:           fairlearn: Not installed
2025-03-30 19:15:44,987:INFO:          deepchecks: Not installed
2025-03-30 19:15:44,987:INFO:             xgboost: Not installed
2025-03-30 19:15:44,987:INFO:            catboost: Not installed
2025-03-30 19:15:44,987:INFO:              kmodes: Not installed
2025-03-30 19:15:44,987:INFO:             mlxtend: Not installed
2025-03-30 19:15:44,987:INFO:       statsforecast: Not installed
2025-03-30 19:15:44,987:INFO:        tune_sklearn: Not installed
2025-03-30 19:15:44,987:INFO:                 ray: Not installed
2025-03-30 19:15:44,987:INFO:            hyperopt: Not installed
2025-03-30 19:15:44,987:INFO:              optuna: Not installed
2025-03-30 19:15:44,987:INFO:               skopt: Not installed
2025-03-30 19:15:44,987:INFO:              mlflow: 2.21.0
2025-03-30 19:15:44,987:INFO:              gradio: Not installed
2025-03-30 19:15:44,987:INFO:             fastapi: 0.115.11
2025-03-30 19:15:44,987:INFO:             uvicorn: 0.34.0
2025-03-30 19:15:44,987:INFO:              m2cgen: Not installed
2025-03-30 19:15:44,987:INFO:           evidently: Not installed
2025-03-30 19:15:44,987:INFO:               fugue: Not installed
2025-03-30 19:15:44,987:INFO:           streamlit: 1.43.2
2025-03-30 19:15:44,987:INFO:             prophet: Not installed
2025-03-30 19:15:44,987:INFO:None
2025-03-30 19:15:44,987:INFO:Set up data.
2025-03-30 19:15:44,987:INFO:Set up folding strategy.
2025-03-30 19:15:44,987:INFO:Set up train/test split.
2025-03-30 19:15:44,987:INFO:Set up index.
2025-03-30 19:15:44,987:INFO:Assigning column types.
2025-03-30 19:15:45,003:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 19:15:45,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,034:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,081:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,097:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 19:15:45,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:15:45,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,208:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 19:15:45,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,303:INFO:Preparing preprocessing pipeline...
2025-03-30 19:15:45,303:INFO:Set up simple imputation.
2025-03-30 19:15:45,319:INFO:Finished creating preprocessing pipeline.
2025-03-30 19:15:45,319:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:15:45,319:INFO:Creating final display dataframe.
2025-03-30 19:15:45,366:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             caf1
2025-03-30 19:15:45,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:15:45,461:INFO:Logging experiment in loggers
2025-03-30 19:15:45,709:INFO:SubProcess save_model() called ==================================
2025-03-30 19:15:45,709:INFO:Initializing save_model()
2025-03-30 19:15:45,709:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpi9e5in81\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:15:45,709:INFO:Adding model into prep_pipe
2025-03-30 19:15:45,709:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:15:45,725:INFO:C:\Users\Ian\AppData\Local\Temp\tmpi9e5in81\Transformation Pipeline.pkl saved in current working directory
2025-03-30 19:15:45,725:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:15:45,725:INFO:save_model() successfully completed......................................
2025-03-30 19:15:45,804:INFO:SubProcess save_model() end ==================================
2025-03-30 19:15:45,836:INFO:setup() successfully completed in 0.85s...............
2025-03-30 19:15:45,836:INFO:Initializing create_model()
2025-03-30 19:15:45,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:45,836:INFO:Checking exceptions
2025-03-30 19:15:45,836:INFO:Importing libraries
2025-03-30 19:15:45,836:INFO:Copying training dataset
2025-03-30 19:15:45,836:INFO:Defining folds
2025-03-30 19:15:45,836:INFO:Declaring metric variables
2025-03-30 19:15:45,836:INFO:Importing untrained model
2025-03-30 19:15:45,836:INFO:Logistic Regression Imported successfully
2025-03-30 19:15:45,836:INFO:Starting cross validation
2025-03-30 19:15:45,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:15:49,354:INFO:Calculating mean and std
2025-03-30 19:15:49,356:INFO:Creating metrics dataframe
2025-03-30 19:15:49,356:INFO:Finalizing model
2025-03-30 19:15:49,391:INFO:Creating Dashboard logs
2025-03-30 19:15:49,391:INFO:Model: Logistic Regression
2025-03-30 19:15:49,438:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 19:15:49,588:INFO:Initializing predict_model()
2025-03-30 19:15:49,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2F2539D0>)
2025-03-30 19:15:49,588:INFO:Checking exceptions
2025-03-30 19:15:49,588:INFO:Preloading libraries
2025-03-30 19:15:49,722:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 19:15:49,738:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:49,738:INFO:Uploading results into container
2025-03-30 19:15:49,738:INFO:Uploading model into container now
2025-03-30 19:15:49,755:INFO:_master_model_container: 1
2025-03-30 19:15:49,755:INFO:_display_container: 2
2025-03-30 19:15:49,755:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 19:15:49,755:INFO:create_model() successfully completed......................................
2025-03-30 19:15:49,839:INFO:Initializing calibrate_model()
2025-03-30 19:15:49,839:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:15:49,839:INFO:Checking exceptions
2025-03-30 19:15:49,856:INFO:Preloading libraries
2025-03-30 19:15:49,856:INFO:Preparing display monitor
2025-03-30 19:15:49,857:INFO:Getting model name
2025-03-30 19:15:49,857:INFO:Base model : Logistic Regression
2025-03-30 19:15:49,857:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:15:49,857:INFO:SubProcess create_model() called ==================================
2025-03-30 19:15:49,858:INFO:Initializing create_model()
2025-03-30 19:15:49,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A2DAD2AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:49,858:INFO:Checking exceptions
2025-03-30 19:15:49,858:INFO:Importing libraries
2025-03-30 19:15:49,858:INFO:Copying training dataset
2025-03-30 19:15:49,861:INFO:Defining folds
2025-03-30 19:15:49,861:INFO:Declaring metric variables
2025-03-30 19:15:49,861:INFO:Importing untrained model
2025-03-30 19:15:49,861:INFO:Declaring custom model
2025-03-30 19:15:49,862:INFO:Logistic Regression Imported successfully
2025-03-30 19:15:49,862:INFO:Starting cross validation
2025-03-30 19:15:49,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:15:51,689:INFO:Calculating mean and std
2025-03-30 19:15:51,690:INFO:Creating metrics dataframe
2025-03-30 19:15:51,691:INFO:Finalizing model
2025-03-30 19:15:51,819:INFO:Uploading results into container
2025-03-30 19:15:51,819:INFO:Uploading model into container now
2025-03-30 19:15:51,819:INFO:_master_model_container: 2
2025-03-30 19:15:51,819:INFO:_display_container: 3
2025-03-30 19:15:51,819:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:51,819:INFO:create_model() successfully completed......................................
2025-03-30 19:15:51,917:INFO:SubProcess create_model() end ==================================
2025-03-30 19:15:51,919:INFO:Creating Dashboard logs
2025-03-30 19:15:51,919:INFO:Model: Logistic Regression
2025-03-30 19:15:51,971:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:15:52,128:INFO:Initializing predict_model()
2025-03-30 19:15:52,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2DA67EE0>)
2025-03-30 19:15:52,128:INFO:Checking exceptions
2025-03-30 19:15:52,128:INFO:Preloading libraries
2025-03-30 19:15:52,291:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:52,300:INFO:_master_model_container: 2
2025-03-30 19:15:52,300:INFO:_display_container: 3
2025-03-30 19:15:52,302:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:52,302:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:15:52,395:INFO:Initializing finalize_model()
2025-03-30 19:15:52,395:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:15:52,395:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:52,398:INFO:Initializing create_model()
2025-03-30 19:15:52,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:52,398:INFO:Checking exceptions
2025-03-30 19:15:52,398:INFO:Importing libraries
2025-03-30 19:15:52,399:INFO:Copying training dataset
2025-03-30 19:15:52,399:INFO:Defining folds
2025-03-30 19:15:52,399:INFO:Declaring metric variables
2025-03-30 19:15:52,399:INFO:Importing untrained model
2025-03-30 19:15:52,399:INFO:Declaring custom model
2025-03-30 19:15:52,399:INFO:Logistic Regression Imported successfully
2025-03-30 19:15:52,400:INFO:Cross validation set to False
2025-03-30 19:15:52,400:INFO:Fitting Model
2025-03-30 19:15:52,568:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:15:52,568:INFO:create_model() successfully completed......................................
2025-03-30 19:15:52,638:INFO:Creating Dashboard logs
2025-03-30 19:15:52,638:INFO:Model: Logistic Regression
2025-03-30 19:15:52,701:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:15:52,828:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:52,828:INFO:_master_model_container: 2
2025-03-30 19:15:52,828:INFO:_display_container: 3
2025-03-30 19:15:52,828:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:15:52,828:INFO:finalize_model() successfully completed......................................
2025-03-30 19:15:52,943:INFO:Initializing create_model()
2025-03-30 19:15:52,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:52,943:INFO:Checking exceptions
2025-03-30 19:15:52,943:INFO:Importing libraries
2025-03-30 19:15:52,943:INFO:Copying training dataset
2025-03-30 19:15:52,947:INFO:Defining folds
2025-03-30 19:15:52,947:INFO:Declaring metric variables
2025-03-30 19:15:52,947:INFO:Importing untrained model
2025-03-30 19:15:52,947:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:15:52,947:INFO:Starting cross validation
2025-03-30 19:15:52,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:15:53,037:INFO:Calculating mean and std
2025-03-30 19:15:53,037:INFO:Creating metrics dataframe
2025-03-30 19:15:53,038:INFO:Finalizing model
2025-03-30 19:15:53,070:INFO:Creating Dashboard logs
2025-03-30 19:15:53,070:INFO:Model: Decision Tree Classifier
2025-03-30 19:15:53,118:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 19:15:53,304:INFO:Initializing predict_model()
2025-03-30 19:15:53,304:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2F57EE50>)
2025-03-30 19:15:53,304:INFO:Checking exceptions
2025-03-30 19:15:53,304:INFO:Preloading libraries
2025-03-30 19:15:53,471:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:53,471:INFO:Uploading results into container
2025-03-30 19:15:53,471:INFO:Uploading model into container now
2025-03-30 19:15:53,475:INFO:_master_model_container: 3
2025-03-30 19:15:53,475:INFO:_display_container: 4
2025-03-30 19:15:53,475:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 19:15:53,475:INFO:create_model() successfully completed......................................
2025-03-30 19:15:53,574:INFO:Initializing calibrate_model()
2025-03-30 19:15:53,575:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:15:53,575:INFO:Checking exceptions
2025-03-30 19:15:53,577:INFO:Preloading libraries
2025-03-30 19:15:53,577:INFO:Preparing display monitor
2025-03-30 19:15:53,578:INFO:Getting model name
2025-03-30 19:15:53,578:INFO:Base model : Decision Tree Classifier
2025-03-30 19:15:53,578:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:15:53,578:INFO:SubProcess create_model() called ==================================
2025-03-30 19:15:53,579:INFO:Initializing create_model()
2025-03-30 19:15:53,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A2DD3B430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:53,579:INFO:Checking exceptions
2025-03-30 19:15:53,579:INFO:Importing libraries
2025-03-30 19:15:53,579:INFO:Copying training dataset
2025-03-30 19:15:53,581:INFO:Defining folds
2025-03-30 19:15:53,581:INFO:Declaring metric variables
2025-03-30 19:15:53,582:INFO:Importing untrained model
2025-03-30 19:15:53,582:INFO:Declaring custom model
2025-03-30 19:15:53,582:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:15:53,582:INFO:Starting cross validation
2025-03-30 19:15:53,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:15:53,830:INFO:Calculating mean and std
2025-03-30 19:15:53,830:INFO:Creating metrics dataframe
2025-03-30 19:15:53,830:INFO:Finalizing model
2025-03-30 19:15:53,970:INFO:Uploading results into container
2025-03-30 19:15:53,971:INFO:Uploading model into container now
2025-03-30 19:15:53,971:INFO:_master_model_container: 4
2025-03-30 19:15:53,971:INFO:_display_container: 5
2025-03-30 19:15:53,971:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:53,971:INFO:create_model() successfully completed......................................
2025-03-30 19:15:54,081:INFO:SubProcess create_model() end ==================================
2025-03-30 19:15:54,083:INFO:Creating Dashboard logs
2025-03-30 19:15:54,083:INFO:Model: Decision Tree Classifier
2025-03-30 19:15:54,128:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:15:54,337:INFO:Initializing predict_model()
2025-03-30 19:15:54,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2F57E160>)
2025-03-30 19:15:54,337:INFO:Checking exceptions
2025-03-30 19:15:54,337:INFO:Preloading libraries
2025-03-30 19:15:54,504:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:54,513:INFO:_master_model_container: 4
2025-03-30 19:15:54,513:INFO:_display_container: 5
2025-03-30 19:15:54,513:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:54,513:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:15:54,607:INFO:Initializing finalize_model()
2025-03-30 19:15:54,607:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:15:54,607:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:15:54,610:INFO:Initializing create_model()
2025-03-30 19:15:54,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A2D78ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:15:54,610:INFO:Checking exceptions
2025-03-30 19:15:54,611:INFO:Importing libraries
2025-03-30 19:15:54,611:INFO:Copying training dataset
2025-03-30 19:15:54,611:INFO:Defining folds
2025-03-30 19:15:54,611:INFO:Declaring metric variables
2025-03-30 19:15:54,611:INFO:Importing untrained model
2025-03-30 19:15:54,611:INFO:Declaring custom model
2025-03-30 19:15:54,611:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:15:54,612:INFO:Cross validation set to False
2025-03-30 19:15:54,612:INFO:Fitting Model
2025-03-30 19:15:54,805:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:15:54,805:INFO:create_model() successfully completed......................................
2025-03-30 19:15:54,889:INFO:Creating Dashboard logs
2025-03-30 19:15:54,889:INFO:Model: Decision Tree Classifier
2025-03-30 19:15:54,948:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:15:55,132:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:15:55,132:INFO:_master_model_container: 4
2025-03-30 19:15:55,132:INFO:_display_container: 5
2025-03-30 19:15:55,142:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:15:55,142:INFO:finalize_model() successfully completed......................................
2025-03-30 19:15:55,268:INFO:Initializing save_model()
2025-03-30 19:15:55,268:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:15:55,270:INFO:Adding model into prep_pipe
2025-03-30 19:15:55,270:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:15:55,274:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 19:15:55,281:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:15:55,281:INFO:save_model() successfully completed......................................
2025-03-30 19:15:58,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:58,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:58,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:58,020:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:15:59,192:INFO:Initializing load_model()
2025-03-30 19:15:59,192:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:48:44,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:44,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:44,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:44,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:44,926:INFO:PyCaret ClassificationExperiment
2025-03-30 19:48:44,926:INFO:Logging name: Treinamento
2025-03-30 19:48:44,926:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 19:48:44,926:INFO:version 3.3.2
2025-03-30 19:48:44,926:INFO:Initializing setup()
2025-03-30 19:48:44,926:INFO:self.USI: f399
2025-03-30 19:48:44,926:INFO:self._variable_keys: {'X_test', 'target_param', 'y_train', 'seed', 'fold_generator', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'log_plots_param', 'fold_groups_param', 'y_test', 'X_train', 'y', 'X', 'USI', 'gpu_param', 'exp_name_log', 'exp_id', 'idx', 'gpu_n_jobs_param', 'pipeline', 'n_jobs_param', 'is_multiclass', '_available_plots', 'memory', 'fix_imbalance', 'data', 'html_param'}
2025-03-30 19:48:44,926:INFO:Checking environment
2025-03-30 19:48:44,926:INFO:python_version: 3.9.21
2025-03-30 19:48:44,926:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 19:48:44,926:INFO:machine: AMD64
2025-03-30 19:48:44,943:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 19:48:44,943:INFO:Memory: svmem(total=33685155840, available=19525095424, percent=42.0, used=14160060416, free=19525095424)
2025-03-30 19:48:44,943:INFO:Physical Core: 6
2025-03-30 19:48:44,943:INFO:Logical Core: 12
2025-03-30 19:48:44,943:INFO:Checking libraries
2025-03-30 19:48:44,943:INFO:System:
2025-03-30 19:48:44,943:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 19:48:44,943:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 19:48:44,943:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 19:48:44,943:INFO:PyCaret required dependencies:
2025-03-30 19:48:44,971:INFO:                 pip: 25.0
2025-03-30 19:48:44,971:INFO:          setuptools: 75.8.0
2025-03-30 19:48:44,971:INFO:             pycaret: 3.3.2
2025-03-30 19:48:44,971:INFO:             IPython: 8.18.1
2025-03-30 19:48:44,971:INFO:          ipywidgets: 8.1.5
2025-03-30 19:48:44,971:INFO:                tqdm: 4.67.1
2025-03-30 19:48:44,971:INFO:               numpy: 1.26.4
2025-03-30 19:48:44,971:INFO:              pandas: 1.5.3
2025-03-30 19:48:44,971:INFO:              jinja2: 3.1.6
2025-03-30 19:48:44,971:INFO:               scipy: 1.11.4
2025-03-30 19:48:44,971:INFO:              joblib: 1.3.2
2025-03-30 19:48:44,971:INFO:             sklearn: 1.4.2
2025-03-30 19:48:44,971:INFO:                pyod: 2.0.3
2025-03-30 19:48:44,971:INFO:            imblearn: 0.12.4
2025-03-30 19:48:44,971:INFO:   category_encoders: 2.6.4
2025-03-30 19:48:44,971:INFO:            lightgbm: 4.6.0
2025-03-30 19:48:44,971:INFO:               numba: 0.60.0
2025-03-30 19:48:44,971:INFO:            requests: 2.32.3
2025-03-30 19:48:44,971:INFO:          matplotlib: 3.7.5
2025-03-30 19:48:44,971:INFO:          scikitplot: 0.3.7
2025-03-30 19:48:44,971:INFO:         yellowbrick: 1.5
2025-03-30 19:48:44,971:INFO:              plotly: 5.24.1
2025-03-30 19:48:44,971:INFO:    plotly-resampler: Not installed
2025-03-30 19:48:44,971:INFO:             kaleido: 0.2.1
2025-03-30 19:48:44,971:INFO:           schemdraw: 0.15
2025-03-30 19:48:44,971:INFO:         statsmodels: 0.14.4
2025-03-30 19:48:44,971:INFO:              sktime: 0.26.0
2025-03-30 19:48:44,971:INFO:               tbats: 1.1.3
2025-03-30 19:48:44,971:INFO:            pmdarima: 2.0.4
2025-03-30 19:48:44,971:INFO:              psutil: 7.0.0
2025-03-30 19:48:44,971:INFO:          markupsafe: 3.0.2
2025-03-30 19:48:44,971:INFO:             pickle5: Not installed
2025-03-30 19:48:44,971:INFO:         cloudpickle: 2.2.1
2025-03-30 19:48:44,971:INFO:         deprecation: 2.1.0
2025-03-30 19:48:44,971:INFO:              xxhash: 3.5.0
2025-03-30 19:48:44,971:INFO:           wurlitzer: Not installed
2025-03-30 19:48:44,971:INFO:PyCaret optional dependencies:
2025-03-30 19:48:45,288:INFO:                shap: 0.47.1
2025-03-30 19:48:45,288:INFO:           interpret: Not installed
2025-03-30 19:48:45,288:INFO:                umap: Not installed
2025-03-30 19:48:45,288:INFO:     ydata_profiling: Not installed
2025-03-30 19:48:45,288:INFO:  explainerdashboard: Not installed
2025-03-30 19:48:45,288:INFO:             autoviz: Not installed
2025-03-30 19:48:45,288:INFO:           fairlearn: Not installed
2025-03-30 19:48:45,288:INFO:          deepchecks: Not installed
2025-03-30 19:48:45,288:INFO:             xgboost: Not installed
2025-03-30 19:48:45,288:INFO:            catboost: Not installed
2025-03-30 19:48:45,288:INFO:              kmodes: Not installed
2025-03-30 19:48:45,288:INFO:             mlxtend: Not installed
2025-03-30 19:48:45,288:INFO:       statsforecast: Not installed
2025-03-30 19:48:45,288:INFO:        tune_sklearn: Not installed
2025-03-30 19:48:45,288:INFO:                 ray: Not installed
2025-03-30 19:48:45,288:INFO:            hyperopt: Not installed
2025-03-30 19:48:45,288:INFO:              optuna: Not installed
2025-03-30 19:48:45,303:INFO:               skopt: Not installed
2025-03-30 19:48:45,303:INFO:              mlflow: 2.21.0
2025-03-30 19:48:45,303:INFO:              gradio: Not installed
2025-03-30 19:48:45,303:INFO:             fastapi: 0.115.11
2025-03-30 19:48:45,303:INFO:             uvicorn: 0.34.0
2025-03-30 19:48:45,303:INFO:              m2cgen: Not installed
2025-03-30 19:48:45,303:INFO:           evidently: Not installed
2025-03-30 19:48:45,303:INFO:               fugue: Not installed
2025-03-30 19:48:45,303:INFO:           streamlit: 1.43.2
2025-03-30 19:48:45,303:INFO:             prophet: Not installed
2025-03-30 19:48:45,303:INFO:None
2025-03-30 19:48:45,303:INFO:Set up data.
2025-03-30 19:48:45,305:INFO:Set up folding strategy.
2025-03-30 19:48:45,305:INFO:Set up train/test split.
2025-03-30 19:48:45,305:INFO:Set up index.
2025-03-30 19:48:45,305:INFO:Assigning column types.
2025-03-30 19:48:45,305:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 19:48:45,338:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,338:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,405:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,421:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 19:48:45,453:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,505:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:48:45,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,525:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 19:48:45,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,625:INFO:Preparing preprocessing pipeline...
2025-03-30 19:48:45,626:INFO:Set up simple imputation.
2025-03-30 19:48:45,640:INFO:Finished creating preprocessing pipeline.
2025-03-30 19:48:45,642:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:48:45,642:INFO:Creating final display dataframe.
2025-03-30 19:48:45,680:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             f399
2025-03-30 19:48:45,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:48:45,784:INFO:Logging experiment in loggers
2025-03-30 19:48:46,031:INFO:SubProcess save_model() called ==================================
2025-03-30 19:48:46,034:INFO:Initializing save_model()
2025-03-30 19:48:46,035:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpabdxw6ux\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:48:46,035:INFO:Adding model into prep_pipe
2025-03-30 19:48:46,035:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:48:46,039:INFO:C:\Users\Ian\AppData\Local\Temp\tmpabdxw6ux\Transformation Pipeline.pkl saved in current working directory
2025-03-30 19:48:46,042:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:48:46,042:INFO:save_model() successfully completed......................................
2025-03-30 19:48:46,127:INFO:SubProcess save_model() end ==================================
2025-03-30 19:48:46,154:INFO:setup() successfully completed in 0.86s...............
2025-03-30 19:48:46,154:INFO:Initializing create_model()
2025-03-30 19:48:46,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:46,154:INFO:Checking exceptions
2025-03-30 19:48:46,156:INFO:Importing libraries
2025-03-30 19:48:46,156:INFO:Copying training dataset
2025-03-30 19:48:46,159:INFO:Defining folds
2025-03-30 19:48:46,159:INFO:Declaring metric variables
2025-03-30 19:48:46,159:INFO:Importing untrained model
2025-03-30 19:48:46,159:INFO:Logistic Regression Imported successfully
2025-03-30 19:48:46,160:INFO:Starting cross validation
2025-03-30 19:48:46,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:48:49,553:INFO:Calculating mean and std
2025-03-30 19:48:49,561:INFO:Creating metrics dataframe
2025-03-30 19:48:49,565:INFO:Finalizing model
2025-03-30 19:48:49,623:INFO:Creating Dashboard logs
2025-03-30 19:48:49,623:INFO:Model: Logistic Regression
2025-03-30 19:48:49,676:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 19:48:49,832:INFO:Initializing predict_model()
2025-03-30 19:48:49,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000237306C29D0>)
2025-03-30 19:48:49,832:INFO:Checking exceptions
2025-03-30 19:48:49,832:INFO:Preloading libraries
2025-03-30 19:48:49,969:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 19:48:49,988:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:49,988:INFO:Uploading results into container
2025-03-30 19:48:49,988:INFO:Uploading model into container now
2025-03-30 19:48:49,995:INFO:_master_model_container: 1
2025-03-30 19:48:49,995:INFO:_display_container: 2
2025-03-30 19:48:49,995:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 19:48:49,995:INFO:create_model() successfully completed......................................
2025-03-30 19:48:50,082:INFO:Initializing calibrate_model()
2025-03-30 19:48:50,082:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:48:50,082:INFO:Checking exceptions
2025-03-30 19:48:50,084:INFO:Preloading libraries
2025-03-30 19:48:50,084:INFO:Preparing display monitor
2025-03-30 19:48:50,084:INFO:Getting model name
2025-03-30 19:48:50,084:INFO:Base model : Logistic Regression
2025-03-30 19:48:50,084:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:48:50,084:INFO:SubProcess create_model() called ==================================
2025-03-30 19:48:50,084:INFO:Initializing create_model()
2025-03-30 19:48:50,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002372EF42AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:50,084:INFO:Checking exceptions
2025-03-30 19:48:50,087:INFO:Importing libraries
2025-03-30 19:48:50,087:INFO:Copying training dataset
2025-03-30 19:48:50,088:INFO:Defining folds
2025-03-30 19:48:50,088:INFO:Declaring metric variables
2025-03-30 19:48:50,088:INFO:Importing untrained model
2025-03-30 19:48:50,088:INFO:Declaring custom model
2025-03-30 19:48:50,088:INFO:Logistic Regression Imported successfully
2025-03-30 19:48:50,088:INFO:Starting cross validation
2025-03-30 19:48:50,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:48:51,954:INFO:Calculating mean and std
2025-03-30 19:48:51,954:INFO:Creating metrics dataframe
2025-03-30 19:48:51,954:INFO:Finalizing model
2025-03-30 19:48:52,085:INFO:Uploading results into container
2025-03-30 19:48:52,085:INFO:Uploading model into container now
2025-03-30 19:48:52,085:INFO:_master_model_container: 2
2025-03-30 19:48:52,085:INFO:_display_container: 3
2025-03-30 19:48:52,085:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:52,085:INFO:create_model() successfully completed......................................
2025-03-30 19:48:52,171:INFO:SubProcess create_model() end ==================================
2025-03-30 19:48:52,171:INFO:Creating Dashboard logs
2025-03-30 19:48:52,171:INFO:Model: Logistic Regression
2025-03-30 19:48:52,231:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:48:52,382:INFO:Initializing predict_model()
2025-03-30 19:48:52,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002372EED7EE0>)
2025-03-30 19:48:52,382:INFO:Checking exceptions
2025-03-30 19:48:52,382:INFO:Preloading libraries
2025-03-30 19:48:52,534:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:52,544:INFO:_master_model_container: 2
2025-03-30 19:48:52,544:INFO:_display_container: 3
2025-03-30 19:48:52,544:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:52,544:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:48:52,631:INFO:Initializing finalize_model()
2025-03-30 19:48:52,631:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:48:52,632:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:52,635:INFO:Initializing create_model()
2025-03-30 19:48:52,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:52,635:INFO:Checking exceptions
2025-03-30 19:48:52,635:INFO:Importing libraries
2025-03-30 19:48:52,635:INFO:Copying training dataset
2025-03-30 19:48:52,636:INFO:Defining folds
2025-03-30 19:48:52,636:INFO:Declaring metric variables
2025-03-30 19:48:52,636:INFO:Importing untrained model
2025-03-30 19:48:52,636:INFO:Declaring custom model
2025-03-30 19:48:52,636:INFO:Logistic Regression Imported successfully
2025-03-30 19:48:52,637:INFO:Cross validation set to False
2025-03-30 19:48:52,637:INFO:Fitting Model
2025-03-30 19:48:52,800:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:48:52,800:INFO:create_model() successfully completed......................................
2025-03-30 19:48:52,880:INFO:Creating Dashboard logs
2025-03-30 19:48:52,880:INFO:Model: Logistic Regression
2025-03-30 19:48:52,932:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:48:53,070:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:53,070:INFO:_master_model_container: 2
2025-03-30 19:48:53,070:INFO:_display_container: 3
2025-03-30 19:48:53,070:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:48:53,070:INFO:finalize_model() successfully completed......................................
2025-03-30 19:48:53,164:INFO:Initializing create_model()
2025-03-30 19:48:53,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:53,164:INFO:Checking exceptions
2025-03-30 19:48:53,164:INFO:Importing libraries
2025-03-30 19:48:53,164:INFO:Copying training dataset
2025-03-30 19:48:53,164:INFO:Defining folds
2025-03-30 19:48:53,164:INFO:Declaring metric variables
2025-03-30 19:48:53,164:INFO:Importing untrained model
2025-03-30 19:48:53,164:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:48:53,164:INFO:Starting cross validation
2025-03-30 19:48:53,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:48:53,267:INFO:Calculating mean and std
2025-03-30 19:48:53,267:INFO:Creating metrics dataframe
2025-03-30 19:48:53,270:INFO:Finalizing model
2025-03-30 19:48:53,291:INFO:Creating Dashboard logs
2025-03-30 19:48:53,291:INFO:Model: Decision Tree Classifier
2025-03-30 19:48:53,352:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 19:48:53,512:INFO:Initializing predict_model()
2025-03-30 19:48:53,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000237309EEE50>)
2025-03-30 19:48:53,512:INFO:Checking exceptions
2025-03-30 19:48:53,512:INFO:Preloading libraries
2025-03-30 19:48:53,654:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:53,654:INFO:Uploading results into container
2025-03-30 19:48:53,654:INFO:Uploading model into container now
2025-03-30 19:48:53,670:INFO:_master_model_container: 3
2025-03-30 19:48:53,670:INFO:_display_container: 4
2025-03-30 19:48:53,671:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 19:48:53,671:INFO:create_model() successfully completed......................................
2025-03-30 19:48:53,759:INFO:Initializing calibrate_model()
2025-03-30 19:48:53,759:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:48:53,759:INFO:Checking exceptions
2025-03-30 19:48:53,769:INFO:Preloading libraries
2025-03-30 19:48:53,769:INFO:Preparing display monitor
2025-03-30 19:48:53,769:INFO:Getting model name
2025-03-30 19:48:53,769:INFO:Base model : Decision Tree Classifier
2025-03-30 19:48:53,769:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:48:53,769:INFO:SubProcess create_model() called ==================================
2025-03-30 19:48:53,769:INFO:Initializing create_model()
2025-03-30 19:48:53,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237306C0CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:53,769:INFO:Checking exceptions
2025-03-30 19:48:53,769:INFO:Importing libraries
2025-03-30 19:48:53,769:INFO:Copying training dataset
2025-03-30 19:48:53,778:INFO:Defining folds
2025-03-30 19:48:53,778:INFO:Declaring metric variables
2025-03-30 19:48:53,778:INFO:Importing untrained model
2025-03-30 19:48:53,778:INFO:Declaring custom model
2025-03-30 19:48:53,778:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:48:53,780:INFO:Starting cross validation
2025-03-30 19:48:53,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:48:54,053:INFO:Calculating mean and std
2025-03-30 19:48:54,054:INFO:Creating metrics dataframe
2025-03-30 19:48:54,056:INFO:Finalizing model
2025-03-30 19:48:54,205:INFO:Uploading results into container
2025-03-30 19:48:54,205:INFO:Uploading model into container now
2025-03-30 19:48:54,205:INFO:_master_model_container: 4
2025-03-30 19:48:54,205:INFO:_display_container: 5
2025-03-30 19:48:54,205:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:54,205:INFO:create_model() successfully completed......................................
2025-03-30 19:48:54,281:INFO:SubProcess create_model() end ==================================
2025-03-30 19:48:54,296:INFO:Creating Dashboard logs
2025-03-30 19:48:54,296:INFO:Model: Decision Tree Classifier
2025-03-30 19:48:54,354:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:48:54,593:INFO:Initializing predict_model()
2025-03-30 19:48:54,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000237309EE160>)
2025-03-30 19:48:54,593:INFO:Checking exceptions
2025-03-30 19:48:54,593:INFO:Preloading libraries
2025-03-30 19:48:54,767:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:54,767:INFO:_master_model_container: 4
2025-03-30 19:48:54,767:INFO:_display_container: 5
2025-03-30 19:48:54,767:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:54,767:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:48:54,854:INFO:Initializing finalize_model()
2025-03-30 19:48:54,854:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:48:54,854:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:48:54,854:INFO:Initializing create_model()
2025-03-30 19:48:54,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002372EBFACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:48:54,854:INFO:Checking exceptions
2025-03-30 19:48:54,854:INFO:Importing libraries
2025-03-30 19:48:54,854:INFO:Copying training dataset
2025-03-30 19:48:54,854:INFO:Defining folds
2025-03-30 19:48:54,854:INFO:Declaring metric variables
2025-03-30 19:48:54,854:INFO:Importing untrained model
2025-03-30 19:48:54,854:INFO:Declaring custom model
2025-03-30 19:48:54,854:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:48:54,854:INFO:Cross validation set to False
2025-03-30 19:48:54,854:INFO:Fitting Model
2025-03-30 19:48:55,068:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:48:55,068:INFO:create_model() successfully completed......................................
2025-03-30 19:48:55,155:INFO:Creating Dashboard logs
2025-03-30 19:48:55,155:INFO:Model: Decision Tree Classifier
2025-03-30 19:48:55,217:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:48:55,403:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:48:55,403:INFO:_master_model_container: 4
2025-03-30 19:48:55,403:INFO:_display_container: 5
2025-03-30 19:48:55,403:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:48:55,403:INFO:finalize_model() successfully completed......................................
2025-03-30 19:48:55,514:INFO:Initializing save_model()
2025-03-30 19:48:55,514:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:48:55,514:INFO:Adding model into prep_pipe
2025-03-30 19:48:55,514:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:48:55,514:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 19:48:55,526:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:48:55,526:INFO:save_model() successfully completed......................................
2025-03-30 19:48:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:48:59,492:INFO:Initializing load_model()
2025-03-30 19:48:59,492:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:49:53,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:49:53,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:49:53,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:49:53,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:49:54,421:INFO:PyCaret ClassificationExperiment
2025-03-30 19:49:54,421:INFO:Logging name: Treinamento
2025-03-30 19:49:54,421:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 19:49:54,421:INFO:version 3.3.2
2025-03-30 19:49:54,421:INFO:Initializing setup()
2025-03-30 19:49:54,421:INFO:self.USI: 3e47
2025-03-30 19:49:54,421:INFO:self._variable_keys: {'fold_generator', '_ml_usecase', 'fold_groups_param', 'y_test', 'is_multiclass', 'y', 'X_train', 'fix_imbalance', 'X', '_available_plots', 'USI', 'X_test', 'pipeline', 'exp_name_log', 'seed', 'gpu_param', 'exp_id', 'target_param', 'idx', 'memory', 'n_jobs_param', 'gpu_n_jobs_param', 'data', 'html_param', 'logging_param', 'fold_shuffle_param', 'y_train', 'log_plots_param'}
2025-03-30 19:49:54,421:INFO:Checking environment
2025-03-30 19:49:54,421:INFO:python_version: 3.9.21
2025-03-30 19:49:54,421:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 19:49:54,421:INFO:machine: AMD64
2025-03-30 19:49:54,438:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 19:49:54,443:INFO:Memory: svmem(total=33685155840, available=19297030144, percent=42.7, used=14388125696, free=19297030144)
2025-03-30 19:49:54,443:INFO:Physical Core: 6
2025-03-30 19:49:54,443:INFO:Logical Core: 12
2025-03-30 19:49:54,443:INFO:Checking libraries
2025-03-30 19:49:54,443:INFO:System:
2025-03-30 19:49:54,443:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 19:49:54,443:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 19:49:54,443:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 19:49:54,443:INFO:PyCaret required dependencies:
2025-03-30 19:49:54,471:INFO:                 pip: 25.0
2025-03-30 19:49:54,471:INFO:          setuptools: 75.8.0
2025-03-30 19:49:54,471:INFO:             pycaret: 3.3.2
2025-03-30 19:49:54,471:INFO:             IPython: 8.18.1
2025-03-30 19:49:54,471:INFO:          ipywidgets: 8.1.5
2025-03-30 19:49:54,471:INFO:                tqdm: 4.67.1
2025-03-30 19:49:54,471:INFO:               numpy: 1.26.4
2025-03-30 19:49:54,471:INFO:              pandas: 1.5.3
2025-03-30 19:49:54,471:INFO:              jinja2: 3.1.6
2025-03-30 19:49:54,471:INFO:               scipy: 1.11.4
2025-03-30 19:49:54,471:INFO:              joblib: 1.3.2
2025-03-30 19:49:54,471:INFO:             sklearn: 1.4.2
2025-03-30 19:49:54,471:INFO:                pyod: 2.0.3
2025-03-30 19:49:54,471:INFO:            imblearn: 0.12.4
2025-03-30 19:49:54,471:INFO:   category_encoders: 2.6.4
2025-03-30 19:49:54,471:INFO:            lightgbm: 4.6.0
2025-03-30 19:49:54,471:INFO:               numba: 0.60.0
2025-03-30 19:49:54,471:INFO:            requests: 2.32.3
2025-03-30 19:49:54,471:INFO:          matplotlib: 3.7.5
2025-03-30 19:49:54,471:INFO:          scikitplot: 0.3.7
2025-03-30 19:49:54,471:INFO:         yellowbrick: 1.5
2025-03-30 19:49:54,471:INFO:              plotly: 5.24.1
2025-03-30 19:49:54,471:INFO:    plotly-resampler: Not installed
2025-03-30 19:49:54,471:INFO:             kaleido: 0.2.1
2025-03-30 19:49:54,471:INFO:           schemdraw: 0.15
2025-03-30 19:49:54,471:INFO:         statsmodels: 0.14.4
2025-03-30 19:49:54,471:INFO:              sktime: 0.26.0
2025-03-30 19:49:54,471:INFO:               tbats: 1.1.3
2025-03-30 19:49:54,471:INFO:            pmdarima: 2.0.4
2025-03-30 19:49:54,471:INFO:              psutil: 7.0.0
2025-03-30 19:49:54,471:INFO:          markupsafe: 3.0.2
2025-03-30 19:49:54,471:INFO:             pickle5: Not installed
2025-03-30 19:49:54,471:INFO:         cloudpickle: 2.2.1
2025-03-30 19:49:54,471:INFO:         deprecation: 2.1.0
2025-03-30 19:49:54,471:INFO:              xxhash: 3.5.0
2025-03-30 19:49:54,471:INFO:           wurlitzer: Not installed
2025-03-30 19:49:54,471:INFO:PyCaret optional dependencies:
2025-03-30 19:49:54,788:INFO:                shap: 0.47.1
2025-03-30 19:49:54,788:INFO:           interpret: Not installed
2025-03-30 19:49:54,788:INFO:                umap: Not installed
2025-03-30 19:49:54,788:INFO:     ydata_profiling: Not installed
2025-03-30 19:49:54,788:INFO:  explainerdashboard: Not installed
2025-03-30 19:49:54,788:INFO:             autoviz: Not installed
2025-03-30 19:49:54,788:INFO:           fairlearn: Not installed
2025-03-30 19:49:54,788:INFO:          deepchecks: Not installed
2025-03-30 19:49:54,788:INFO:             xgboost: Not installed
2025-03-30 19:49:54,788:INFO:            catboost: Not installed
2025-03-30 19:49:54,788:INFO:              kmodes: Not installed
2025-03-30 19:49:54,788:INFO:             mlxtend: Not installed
2025-03-30 19:49:54,788:INFO:       statsforecast: Not installed
2025-03-30 19:49:54,788:INFO:        tune_sklearn: Not installed
2025-03-30 19:49:54,788:INFO:                 ray: Not installed
2025-03-30 19:49:54,788:INFO:            hyperopt: Not installed
2025-03-30 19:49:54,788:INFO:              optuna: Not installed
2025-03-30 19:49:54,788:INFO:               skopt: Not installed
2025-03-30 19:49:54,788:INFO:              mlflow: 2.21.0
2025-03-30 19:49:54,788:INFO:              gradio: Not installed
2025-03-30 19:49:54,788:INFO:             fastapi: 0.115.11
2025-03-30 19:49:54,788:INFO:             uvicorn: 0.34.0
2025-03-30 19:49:54,788:INFO:              m2cgen: Not installed
2025-03-30 19:49:54,788:INFO:           evidently: Not installed
2025-03-30 19:49:54,788:INFO:               fugue: Not installed
2025-03-30 19:49:54,788:INFO:           streamlit: 1.43.2
2025-03-30 19:49:54,788:INFO:             prophet: Not installed
2025-03-30 19:49:54,788:INFO:None
2025-03-30 19:49:54,788:INFO:Set up data.
2025-03-30 19:49:54,788:INFO:Set up folding strategy.
2025-03-30 19:49:54,788:INFO:Set up train/test split.
2025-03-30 19:49:54,804:INFO:Set up index.
2025-03-30 19:49:54,804:INFO:Assigning column types.
2025-03-30 19:49:54,804:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 19:49:54,838:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:49:54,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:49:54,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,888:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 19:49:54,888:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:49:54,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,913:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 19:49:54,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:49:54,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:54,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 19:49:55,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,020:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 19:49:55,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,121:INFO:Preparing preprocessing pipeline...
2025-03-30 19:49:55,121:INFO:Set up simple imputation.
2025-03-30 19:49:55,138:INFO:Finished creating preprocessing pipeline.
2025-03-30 19:49:55,138:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:49:55,138:INFO:Creating final display dataframe.
2025-03-30 19:49:55,171:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             3e47
2025-03-30 19:49:55,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 19:49:55,287:INFO:Logging experiment in loggers
2025-03-30 19:49:55,537:INFO:SubProcess save_model() called ==================================
2025-03-30 19:49:55,537:INFO:Initializing save_model()
2025-03-30 19:49:55,537:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpwpscg5mo\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:49:55,537:INFO:Adding model into prep_pipe
2025-03-30 19:49:55,537:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:49:55,543:INFO:C:\Users\Ian\AppData\Local\Temp\tmpwpscg5mo\Transformation Pipeline.pkl saved in current working directory
2025-03-30 19:49:55,543:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 19:49:55,543:INFO:save_model() successfully completed......................................
2025-03-30 19:49:55,622:INFO:SubProcess save_model() end ==================================
2025-03-30 19:49:55,656:INFO:setup() successfully completed in 0.87s...............
2025-03-30 19:49:55,656:INFO:Initializing create_model()
2025-03-30 19:49:55,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:49:55,656:INFO:Checking exceptions
2025-03-30 19:49:55,656:INFO:Importing libraries
2025-03-30 19:49:55,656:INFO:Copying training dataset
2025-03-30 19:49:55,656:INFO:Defining folds
2025-03-30 19:49:55,656:INFO:Declaring metric variables
2025-03-30 19:49:55,656:INFO:Importing untrained model
2025-03-30 19:49:55,656:INFO:Logistic Regression Imported successfully
2025-03-30 19:49:55,656:INFO:Starting cross validation
2025-03-30 19:49:55,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:49:59,029:INFO:Calculating mean and std
2025-03-30 19:49:59,029:INFO:Creating metrics dataframe
2025-03-30 19:49:59,029:INFO:Finalizing model
2025-03-30 19:49:59,083:INFO:Creating Dashboard logs
2025-03-30 19:49:59,084:INFO:Model: Logistic Regression
2025-03-30 19:49:59,136:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 19:49:59,264:INFO:Initializing predict_model()
2025-03-30 19:49:59,264:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1862819D0>)
2025-03-30 19:49:59,264:INFO:Checking exceptions
2025-03-30 19:49:59,264:INFO:Preloading libraries
2025-03-30 19:49:59,437:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 19:49:59,463:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:49:59,463:INFO:Uploading results into container
2025-03-30 19:49:59,463:INFO:Uploading model into container now
2025-03-30 19:49:59,476:INFO:_master_model_container: 1
2025-03-30 19:49:59,476:INFO:_display_container: 2
2025-03-30 19:49:59,477:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 19:49:59,477:INFO:create_model() successfully completed......................................
2025-03-30 19:49:59,571:INFO:Initializing calibrate_model()
2025-03-30 19:49:59,571:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:49:59,571:INFO:Checking exceptions
2025-03-30 19:49:59,571:INFO:Preloading libraries
2025-03-30 19:49:59,571:INFO:Preparing display monitor
2025-03-30 19:49:59,571:INFO:Getting model name
2025-03-30 19:49:59,571:INFO:Base model : Logistic Regression
2025-03-30 19:49:59,571:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:49:59,571:INFO:SubProcess create_model() called ==================================
2025-03-30 19:49:59,571:INFO:Initializing create_model()
2025-03-30 19:49:59,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F184B02AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:49:59,571:INFO:Checking exceptions
2025-03-30 19:49:59,571:INFO:Importing libraries
2025-03-30 19:49:59,571:INFO:Copying training dataset
2025-03-30 19:49:59,571:INFO:Defining folds
2025-03-30 19:49:59,571:INFO:Declaring metric variables
2025-03-30 19:49:59,571:INFO:Importing untrained model
2025-03-30 19:49:59,571:INFO:Declaring custom model
2025-03-30 19:49:59,571:INFO:Logistic Regression Imported successfully
2025-03-30 19:49:59,571:INFO:Starting cross validation
2025-03-30 19:49:59,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:50:01,490:INFO:Calculating mean and std
2025-03-30 19:50:01,490:INFO:Creating metrics dataframe
2025-03-30 19:50:01,490:INFO:Finalizing model
2025-03-30 19:50:01,622:INFO:Uploading results into container
2025-03-30 19:50:01,622:INFO:Uploading model into container now
2025-03-30 19:50:01,622:INFO:_master_model_container: 2
2025-03-30 19:50:01,622:INFO:_display_container: 3
2025-03-30 19:50:01,622:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:01,622:INFO:create_model() successfully completed......................................
2025-03-30 19:50:01,705:INFO:SubProcess create_model() end ==================================
2025-03-30 19:50:01,705:INFO:Creating Dashboard logs
2025-03-30 19:50:01,705:INFO:Model: Logistic Regression
2025-03-30 19:50:01,764:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:50:01,920:INFO:Initializing predict_model()
2025-03-30 19:50:01,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F184A97EE0>)
2025-03-30 19:50:01,920:INFO:Checking exceptions
2025-03-30 19:50:01,920:INFO:Preloading libraries
2025-03-30 19:50:02,068:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:50:02,076:INFO:_master_model_container: 2
2025-03-30 19:50:02,076:INFO:_display_container: 3
2025-03-30 19:50:02,076:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:02,076:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:50:02,161:INFO:Initializing finalize_model()
2025-03-30 19:50:02,162:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:50:02,162:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:02,164:INFO:Initializing create_model()
2025-03-30 19:50:02,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:50:02,164:INFO:Checking exceptions
2025-03-30 19:50:02,165:INFO:Importing libraries
2025-03-30 19:50:02,165:INFO:Copying training dataset
2025-03-30 19:50:02,165:INFO:Defining folds
2025-03-30 19:50:02,165:INFO:Declaring metric variables
2025-03-30 19:50:02,165:INFO:Importing untrained model
2025-03-30 19:50:02,165:INFO:Declaring custom model
2025-03-30 19:50:02,166:INFO:Logistic Regression Imported successfully
2025-03-30 19:50:02,166:INFO:Cross validation set to False
2025-03-30 19:50:02,166:INFO:Fitting Model
2025-03-30 19:50:02,321:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:50:02,321:INFO:create_model() successfully completed......................................
2025-03-30 19:50:02,397:INFO:Creating Dashboard logs
2025-03-30 19:50:02,397:INFO:Model: Logistic Regression
2025-03-30 19:50:02,444:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:50:02,586:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:50:02,586:INFO:_master_model_container: 2
2025-03-30 19:50:02,586:INFO:_display_container: 3
2025-03-30 19:50:02,586:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:50:02,586:INFO:finalize_model() successfully completed......................................
2025-03-30 19:50:02,696:INFO:Initializing create_model()
2025-03-30 19:50:02,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:50:02,696:INFO:Checking exceptions
2025-03-30 19:50:02,696:INFO:Importing libraries
2025-03-30 19:50:02,696:INFO:Copying training dataset
2025-03-30 19:50:02,696:INFO:Defining folds
2025-03-30 19:50:02,696:INFO:Declaring metric variables
2025-03-30 19:50:02,696:INFO:Importing untrained model
2025-03-30 19:50:02,696:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:50:02,696:INFO:Starting cross validation
2025-03-30 19:50:02,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:50:02,803:INFO:Calculating mean and std
2025-03-30 19:50:02,804:INFO:Creating metrics dataframe
2025-03-30 19:50:02,805:INFO:Finalizing model
2025-03-30 19:50:02,837:INFO:Creating Dashboard logs
2025-03-30 19:50:02,837:INFO:Model: Decision Tree Classifier
2025-03-30 19:50:02,887:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 19:50:03,063:INFO:Initializing predict_model()
2025-03-30 19:50:03,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1865ADE50>)
2025-03-30 19:50:03,063:INFO:Checking exceptions
2025-03-30 19:50:03,063:INFO:Preloading libraries
2025-03-30 19:50:03,188:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:50:03,188:INFO:Uploading results into container
2025-03-30 19:50:03,188:INFO:Uploading model into container now
2025-03-30 19:50:03,204:INFO:_master_model_container: 3
2025-03-30 19:50:03,204:INFO:_display_container: 4
2025-03-30 19:50:03,204:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 19:50:03,204:INFO:create_model() successfully completed......................................
2025-03-30 19:50:03,294:INFO:Initializing calibrate_model()
2025-03-30 19:50:03,294:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 19:50:03,294:INFO:Checking exceptions
2025-03-30 19:50:03,296:INFO:Preloading libraries
2025-03-30 19:50:03,296:INFO:Preparing display monitor
2025-03-30 19:50:03,296:INFO:Getting model name
2025-03-30 19:50:03,296:INFO:Base model : Decision Tree Classifier
2025-03-30 19:50:03,298:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 19:50:03,298:INFO:SubProcess create_model() called ==================================
2025-03-30 19:50:03,298:INFO:Initializing create_model()
2025-03-30 19:50:03,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F18627FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:50:03,298:INFO:Checking exceptions
2025-03-30 19:50:03,298:INFO:Importing libraries
2025-03-30 19:50:03,298:INFO:Copying training dataset
2025-03-30 19:50:03,300:INFO:Defining folds
2025-03-30 19:50:03,300:INFO:Declaring metric variables
2025-03-30 19:50:03,300:INFO:Importing untrained model
2025-03-30 19:50:03,302:INFO:Declaring custom model
2025-03-30 19:50:03,302:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:50:03,302:INFO:Starting cross validation
2025-03-30 19:50:03,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 19:50:03,528:INFO:Calculating mean and std
2025-03-30 19:50:03,528:INFO:Creating metrics dataframe
2025-03-30 19:50:03,530:INFO:Finalizing model
2025-03-30 19:50:03,652:INFO:Uploading results into container
2025-03-30 19:50:03,652:INFO:Uploading model into container now
2025-03-30 19:50:03,652:INFO:_master_model_container: 4
2025-03-30 19:50:03,652:INFO:_display_container: 5
2025-03-30 19:50:03,652:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:03,652:INFO:create_model() successfully completed......................................
2025-03-30 19:50:03,748:INFO:SubProcess create_model() end ==================================
2025-03-30 19:50:03,748:INFO:Creating Dashboard logs
2025-03-30 19:50:03,748:INFO:Model: Decision Tree Classifier
2025-03-30 19:50:03,804:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:50:04,037:INFO:Initializing predict_model()
2025-03-30 19:50:04,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1865AD160>)
2025-03-30 19:50:04,039:INFO:Checking exceptions
2025-03-30 19:50:04,039:INFO:Preloading libraries
2025-03-30 19:50:04,201:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:50:04,223:INFO:_master_model_container: 4
2025-03-30 19:50:04,223:INFO:_display_container: 5
2025-03-30 19:50:04,223:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:04,223:INFO:calibrate_model() successfully completed......................................
2025-03-30 19:50:04,311:INFO:Initializing finalize_model()
2025-03-30 19:50:04,311:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 19:50:04,312:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 19:50:04,314:INFO:Initializing create_model()
2025-03-30 19:50:04,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F1847CACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 19:50:04,314:INFO:Checking exceptions
2025-03-30 19:50:04,314:INFO:Importing libraries
2025-03-30 19:50:04,315:INFO:Copying training dataset
2025-03-30 19:50:04,315:INFO:Defining folds
2025-03-30 19:50:04,315:INFO:Declaring metric variables
2025-03-30 19:50:04,315:INFO:Importing untrained model
2025-03-30 19:50:04,315:INFO:Declaring custom model
2025-03-30 19:50:04,315:INFO:Decision Tree Classifier Imported successfully
2025-03-30 19:50:04,316:INFO:Cross validation set to False
2025-03-30 19:50:04,316:INFO:Fitting Model
2025-03-30 19:50:04,508:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:50:04,508:INFO:create_model() successfully completed......................................
2025-03-30 19:50:04,595:INFO:Creating Dashboard logs
2025-03-30 19:50:04,595:INFO:Model: Decision Tree Classifier
2025-03-30 19:50:04,671:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 19:50:04,851:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 19:50:04,851:INFO:_master_model_container: 4
2025-03-30 19:50:04,851:INFO:_display_container: 5
2025-03-30 19:50:04,851:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:50:04,851:INFO:finalize_model() successfully completed......................................
2025-03-30 19:50:04,974:INFO:Initializing save_model()
2025-03-30 19:50:04,974:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 19:50:04,974:INFO:Adding model into prep_pipe
2025-03-30 19:50:04,974:WARNING:Only Model saved as it was a pipeline.
2025-03-30 19:50:04,986:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 19:50:04,990:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 19:50:04,990:INFO:save_model() successfully completed......................................
2025-03-30 19:50:08,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:50:08,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:50:08,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:50:08,045:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 19:50:09,196:INFO:Initializing load_model()
2025-03-30 19:50:09,197:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:57:38,071:INFO:Initializing load_model()
2025-03-30 19:57:38,071:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:57:38,103:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:80: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(

2025-03-30 19:57:41,691:INFO:Initializing load_model()
2025-03-30 19:57:41,691:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 19:57:43,415:INFO:Initializing load_model()
2025-03-30 19:57:43,415:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:09:05,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:09:05,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:09:05,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:09:05,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:09:06,736:INFO:Initializing load_model()
2025-03-30 20:09:06,736:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:15,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:22:15,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:22:15,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:22:15,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:22:16,736:INFO:Initializing load_model()
2025-03-30 20:22:16,736:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:18,905:INFO:Initializing load_model()
2025-03-30 20:22:18,905:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:19,589:INFO:Initializing load_model()
2025-03-30 20:22:19,589:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:21,672:INFO:Initializing load_model()
2025-03-30 20:22:21,673:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:22,280:INFO:Initializing load_model()
2025-03-30 20:22:22,281:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:24,651:INFO:Initializing load_model()
2025-03-30 20:22:24,651:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:26,271:INFO:Initializing load_model()
2025-03-30 20:22:26,271:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:28,723:INFO:Initializing load_model()
2025-03-30 20:22:28,723:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:22:50,134:INFO:Initializing load_model()
2025-03-30 20:22:50,134:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:27:27,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:27:27,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:27:27,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:27:27,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:27:28,556:INFO:Initializing load_model()
2025-03-30 20:27:28,556:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:27:30,288:INFO:Initializing load_model()
2025-03-30 20:27:30,288:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:27:52,976:INFO:Initializing load_model()
2025-03-30 20:27:52,976:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:35:55,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:35:55,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:35:55,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:35:55,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:35:56,386:INFO:Initializing load_model()
2025-03-30 20:35:56,386:INFO:load_model(model_name=Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:36:12,344:INFO:Initializing load_model()
2025-03-30 20:36:12,345:INFO:load_model(model_name=../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:36:22,295:INFO:Initializing load_model()
2025-03-30 20:36:22,295:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:36:22,412:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:78: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x=["Acertos Previstos", "Erros Previstos"],

2025-03-30 20:36:43,126:INFO:Initializing load_model()
2025-03-30 20:36:43,126:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:36:43,175:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:78: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x=["Acertos Previstos", "Erros Previstos"],

2025-03-30 20:38:25,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:25,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:25,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:25,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:25,654:INFO:PyCaret ClassificationExperiment
2025-03-30 20:38:25,654:INFO:Logging name: Treinamento
2025-03-30 20:38:25,654:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 20:38:25,654:INFO:version 3.3.2
2025-03-30 20:38:25,654:INFO:Initializing setup()
2025-03-30 20:38:25,654:INFO:self.USI: b409
2025-03-30 20:38:25,654:INFO:self._variable_keys: {'n_jobs_param', 'y', 'fold_groups_param', 'y_train', 'pipeline', 'gpu_param', 'idx', 'exp_id', 'gpu_n_jobs_param', 'y_test', 'X_train', 'seed', 'logging_param', 'X', 'fold_generator', 'exp_name_log', 'target_param', 'memory', 'fold_shuffle_param', 'is_multiclass', '_available_plots', 'X_test', 'data', 'fix_imbalance', 'html_param', 'USI', 'log_plots_param', '_ml_usecase'}
2025-03-30 20:38:25,654:INFO:Checking environment
2025-03-30 20:38:25,654:INFO:python_version: 3.9.21
2025-03-30 20:38:25,654:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 20:38:25,654:INFO:machine: AMD64
2025-03-30 20:38:25,670:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 20:38:25,687:INFO:Memory: svmem(total=33685155840, available=21507141632, percent=36.2, used=12178014208, free=21507141632)
2025-03-30 20:38:25,687:INFO:Physical Core: 6
2025-03-30 20:38:25,687:INFO:Logical Core: 12
2025-03-30 20:38:25,687:INFO:Checking libraries
2025-03-30 20:38:25,687:INFO:System:
2025-03-30 20:38:25,687:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 20:38:25,688:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 20:38:25,688:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 20:38:25,688:INFO:PyCaret required dependencies:
2025-03-30 20:38:25,720:INFO:                 pip: 25.0
2025-03-30 20:38:25,720:INFO:          setuptools: 75.8.0
2025-03-30 20:38:25,720:INFO:             pycaret: 3.3.2
2025-03-30 20:38:25,720:INFO:             IPython: 8.18.1
2025-03-30 20:38:25,720:INFO:          ipywidgets: 8.1.5
2025-03-30 20:38:25,720:INFO:                tqdm: 4.67.1
2025-03-30 20:38:25,720:INFO:               numpy: 1.26.4
2025-03-30 20:38:25,720:INFO:              pandas: 1.5.3
2025-03-30 20:38:25,720:INFO:              jinja2: 3.1.6
2025-03-30 20:38:25,720:INFO:               scipy: 1.11.4
2025-03-30 20:38:25,720:INFO:              joblib: 1.3.2
2025-03-30 20:38:25,720:INFO:             sklearn: 1.4.2
2025-03-30 20:38:25,720:INFO:                pyod: 2.0.3
2025-03-30 20:38:25,720:INFO:            imblearn: 0.12.4
2025-03-30 20:38:25,720:INFO:   category_encoders: 2.6.4
2025-03-30 20:38:25,720:INFO:            lightgbm: 4.6.0
2025-03-30 20:38:25,720:INFO:               numba: 0.60.0
2025-03-30 20:38:25,720:INFO:            requests: 2.32.3
2025-03-30 20:38:25,720:INFO:          matplotlib: 3.7.5
2025-03-30 20:38:25,720:INFO:          scikitplot: 0.3.7
2025-03-30 20:38:25,720:INFO:         yellowbrick: 1.5
2025-03-30 20:38:25,720:INFO:              plotly: 5.24.1
2025-03-30 20:38:25,720:INFO:    plotly-resampler: Not installed
2025-03-30 20:38:25,720:INFO:             kaleido: 0.2.1
2025-03-30 20:38:25,720:INFO:           schemdraw: 0.15
2025-03-30 20:38:25,720:INFO:         statsmodels: 0.14.4
2025-03-30 20:38:25,720:INFO:              sktime: 0.26.0
2025-03-30 20:38:25,720:INFO:               tbats: 1.1.3
2025-03-30 20:38:25,720:INFO:            pmdarima: 2.0.4
2025-03-30 20:38:25,720:INFO:              psutil: 7.0.0
2025-03-30 20:38:25,720:INFO:          markupsafe: 3.0.2
2025-03-30 20:38:25,720:INFO:             pickle5: Not installed
2025-03-30 20:38:25,720:INFO:         cloudpickle: 2.2.1
2025-03-30 20:38:25,720:INFO:         deprecation: 2.1.0
2025-03-30 20:38:25,720:INFO:              xxhash: 3.5.0
2025-03-30 20:38:25,720:INFO:           wurlitzer: Not installed
2025-03-30 20:38:25,720:INFO:PyCaret optional dependencies:
2025-03-30 20:38:26,039:INFO:                shap: 0.47.1
2025-03-30 20:38:26,039:INFO:           interpret: Not installed
2025-03-30 20:38:26,039:INFO:                umap: Not installed
2025-03-30 20:38:26,039:INFO:     ydata_profiling: Not installed
2025-03-30 20:38:26,039:INFO:  explainerdashboard: Not installed
2025-03-30 20:38:26,039:INFO:             autoviz: Not installed
2025-03-30 20:38:26,039:INFO:           fairlearn: Not installed
2025-03-30 20:38:26,039:INFO:          deepchecks: Not installed
2025-03-30 20:38:26,039:INFO:             xgboost: Not installed
2025-03-30 20:38:26,039:INFO:            catboost: Not installed
2025-03-30 20:38:26,039:INFO:              kmodes: Not installed
2025-03-30 20:38:26,039:INFO:             mlxtend: Not installed
2025-03-30 20:38:26,039:INFO:       statsforecast: Not installed
2025-03-30 20:38:26,039:INFO:        tune_sklearn: Not installed
2025-03-30 20:38:26,039:INFO:                 ray: Not installed
2025-03-30 20:38:26,039:INFO:            hyperopt: Not installed
2025-03-30 20:38:26,039:INFO:              optuna: Not installed
2025-03-30 20:38:26,039:INFO:               skopt: Not installed
2025-03-30 20:38:26,039:INFO:              mlflow: 2.21.0
2025-03-30 20:38:26,039:INFO:              gradio: Not installed
2025-03-30 20:38:26,039:INFO:             fastapi: 0.115.11
2025-03-30 20:38:26,039:INFO:             uvicorn: 0.34.0
2025-03-30 20:38:26,039:INFO:              m2cgen: Not installed
2025-03-30 20:38:26,039:INFO:           evidently: Not installed
2025-03-30 20:38:26,039:INFO:               fugue: Not installed
2025-03-30 20:38:26,039:INFO:           streamlit: 1.43.2
2025-03-30 20:38:26,039:INFO:             prophet: Not installed
2025-03-30 20:38:26,039:INFO:None
2025-03-30 20:38:26,039:INFO:Set up data.
2025-03-30 20:38:26,045:INFO:Set up folding strategy.
2025-03-30 20:38:26,045:INFO:Set up train/test split.
2025-03-30 20:38:26,049:INFO:Set up index.
2025-03-30 20:38:26,049:INFO:Assigning column types.
2025-03-30 20:38:26,053:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 20:38:26,070:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,136:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,153:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 20:38:26,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,235:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:38:26,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,250:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 20:38:26,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,361:INFO:Preparing preprocessing pipeline...
2025-03-30 20:38:26,361:INFO:Set up simple imputation.
2025-03-30 20:38:26,377:INFO:Finished creating preprocessing pipeline.
2025-03-30 20:38:26,384:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 20:38:26,384:INFO:Creating final display dataframe.
2025-03-30 20:38:26,424:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             b409
2025-03-30 20:38:26,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:38:26,518:INFO:Logging experiment in loggers
2025-03-30 20:38:26,774:INFO:SubProcess save_model() called ==================================
2025-03-30 20:38:26,777:INFO:Initializing save_model()
2025-03-30 20:38:26,777:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmpfxxublvw\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 20:38:26,777:INFO:Adding model into prep_pipe
2025-03-30 20:38:26,777:WARNING:Only Model saved as it was a pipeline.
2025-03-30 20:38:26,777:INFO:C:\Users\Ian\AppData\Local\Temp\tmpfxxublvw\Transformation Pipeline.pkl saved in current working directory
2025-03-30 20:38:26,783:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 20:38:26,783:INFO:save_model() successfully completed......................................
2025-03-30 20:38:26,869:INFO:SubProcess save_model() end ==================================
2025-03-30 20:38:26,904:INFO:setup() successfully completed in 0.86s...............
2025-03-30 20:38:26,904:INFO:Initializing create_model()
2025-03-30 20:38:26,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:26,904:INFO:Checking exceptions
2025-03-30 20:38:26,904:INFO:Importing libraries
2025-03-30 20:38:26,904:INFO:Copying training dataset
2025-03-30 20:38:26,915:INFO:Defining folds
2025-03-30 20:38:26,915:INFO:Declaring metric variables
2025-03-30 20:38:26,915:INFO:Importing untrained model
2025-03-30 20:38:26,915:INFO:Logistic Regression Imported successfully
2025-03-30 20:38:26,917:INFO:Starting cross validation
2025-03-30 20:38:26,917:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:38:30,401:INFO:Calculating mean and std
2025-03-30 20:38:30,401:INFO:Creating metrics dataframe
2025-03-30 20:38:30,404:INFO:Finalizing model
2025-03-30 20:38:30,450:INFO:Creating Dashboard logs
2025-03-30 20:38:30,450:INFO:Model: Logistic Regression
2025-03-30 20:38:30,503:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 20:38:30,674:INFO:Initializing predict_model()
2025-03-30 20:38:30,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A4B5139D0>)
2025-03-30 20:38:30,674:INFO:Checking exceptions
2025-03-30 20:38:30,674:INFO:Preloading libraries
2025-03-30 20:38:30,803:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 20:38:30,826:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:30,827:INFO:Uploading results into container
2025-03-30 20:38:30,827:INFO:Uploading model into container now
2025-03-30 20:38:30,834:INFO:_master_model_container: 1
2025-03-30 20:38:30,834:INFO:_display_container: 2
2025-03-30 20:38:30,835:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 20:38:30,835:INFO:create_model() successfully completed......................................
2025-03-30 20:38:30,919:INFO:Initializing calibrate_model()
2025-03-30 20:38:30,919:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 20:38:30,920:INFO:Checking exceptions
2025-03-30 20:38:30,920:INFO:Preloading libraries
2025-03-30 20:38:30,920:INFO:Preparing display monitor
2025-03-30 20:38:30,920:INFO:Getting model name
2025-03-30 20:38:30,920:INFO:Base model : Logistic Regression
2025-03-30 20:38:30,920:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 20:38:30,920:INFO:SubProcess create_model() called ==================================
2025-03-30 20:38:30,920:INFO:Initializing create_model()
2025-03-30 20:38:30,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023A4B511E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:30,920:INFO:Checking exceptions
2025-03-30 20:38:30,920:INFO:Importing libraries
2025-03-30 20:38:30,920:INFO:Copying training dataset
2025-03-30 20:38:30,920:INFO:Defining folds
2025-03-30 20:38:30,920:INFO:Declaring metric variables
2025-03-30 20:38:30,920:INFO:Importing untrained model
2025-03-30 20:38:30,920:INFO:Declaring custom model
2025-03-30 20:38:30,920:INFO:Logistic Regression Imported successfully
2025-03-30 20:38:30,920:INFO:Starting cross validation
2025-03-30 20:38:30,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:38:32,785:INFO:Calculating mean and std
2025-03-30 20:38:32,786:INFO:Creating metrics dataframe
2025-03-30 20:38:32,786:INFO:Finalizing model
2025-03-30 20:38:32,922:INFO:Uploading results into container
2025-03-30 20:38:32,923:INFO:Uploading model into container now
2025-03-30 20:38:32,923:INFO:_master_model_container: 2
2025-03-30 20:38:32,923:INFO:_display_container: 3
2025-03-30 20:38:32,923:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:32,923:INFO:create_model() successfully completed......................................
2025-03-30 20:38:33,005:INFO:SubProcess create_model() end ==================================
2025-03-30 20:38:33,007:INFO:Creating Dashboard logs
2025-03-30 20:38:33,007:INFO:Model: Logistic Regression
2025-03-30 20:38:33,053:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:38:33,203:INFO:Initializing predict_model()
2025-03-30 20:38:33,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A49D27EE0>)
2025-03-30 20:38:33,203:INFO:Checking exceptions
2025-03-30 20:38:33,203:INFO:Preloading libraries
2025-03-30 20:38:33,350:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:33,350:INFO:_master_model_container: 2
2025-03-30 20:38:33,350:INFO:_display_container: 3
2025-03-30 20:38:33,350:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:33,350:INFO:calibrate_model() successfully completed......................................
2025-03-30 20:38:33,436:INFO:Initializing finalize_model()
2025-03-30 20:38:33,436:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 20:38:33,452:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:33,453:INFO:Initializing create_model()
2025-03-30 20:38:33,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:33,453:INFO:Checking exceptions
2025-03-30 20:38:33,453:INFO:Importing libraries
2025-03-30 20:38:33,453:INFO:Copying training dataset
2025-03-30 20:38:33,453:INFO:Defining folds
2025-03-30 20:38:33,453:INFO:Declaring metric variables
2025-03-30 20:38:33,453:INFO:Importing untrained model
2025-03-30 20:38:33,453:INFO:Declaring custom model
2025-03-30 20:38:33,453:INFO:Logistic Regression Imported successfully
2025-03-30 20:38:33,453:INFO:Cross validation set to False
2025-03-30 20:38:33,453:INFO:Fitting Model
2025-03-30 20:38:33,617:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:38:33,617:INFO:create_model() successfully completed......................................
2025-03-30 20:38:33,699:INFO:Creating Dashboard logs
2025-03-30 20:38:33,699:INFO:Model: Logistic Regression
2025-03-30 20:38:33,747:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:38:33,908:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:33,908:INFO:_master_model_container: 2
2025-03-30 20:38:33,908:INFO:_display_container: 3
2025-03-30 20:38:33,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:38:33,920:INFO:finalize_model() successfully completed......................................
2025-03-30 20:38:34,053:INFO:Initializing create_model()
2025-03-30 20:38:34,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:34,053:INFO:Checking exceptions
2025-03-30 20:38:34,055:INFO:Importing libraries
2025-03-30 20:38:34,055:INFO:Copying training dataset
2025-03-30 20:38:34,059:INFO:Defining folds
2025-03-30 20:38:34,059:INFO:Declaring metric variables
2025-03-30 20:38:34,059:INFO:Importing untrained model
2025-03-30 20:38:34,059:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:38:34,059:INFO:Starting cross validation
2025-03-30 20:38:34,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:38:34,202:INFO:Calculating mean and std
2025-03-30 20:38:34,215:INFO:Creating metrics dataframe
2025-03-30 20:38:34,219:INFO:Finalizing model
2025-03-30 20:38:34,266:INFO:Creating Dashboard logs
2025-03-30 20:38:34,266:INFO:Model: Decision Tree Classifier
2025-03-30 20:38:34,340:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 20:38:34,579:INFO:Initializing predict_model()
2025-03-30 20:38:34,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A4B83DE50>)
2025-03-30 20:38:34,579:INFO:Checking exceptions
2025-03-30 20:38:34,579:INFO:Preloading libraries
2025-03-30 20:38:34,736:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:34,736:INFO:Uploading results into container
2025-03-30 20:38:34,736:INFO:Uploading model into container now
2025-03-30 20:38:34,736:INFO:_master_model_container: 3
2025-03-30 20:38:34,736:INFO:_display_container: 4
2025-03-30 20:38:34,736:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 20:38:34,736:INFO:create_model() successfully completed......................................
2025-03-30 20:38:34,839:INFO:Initializing calibrate_model()
2025-03-30 20:38:34,839:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 20:38:34,839:INFO:Checking exceptions
2025-03-30 20:38:34,839:INFO:Preloading libraries
2025-03-30 20:38:34,839:INFO:Preparing display monitor
2025-03-30 20:38:34,839:INFO:Getting model name
2025-03-30 20:38:34,839:INFO:Base model : Decision Tree Classifier
2025-03-30 20:38:34,839:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 20:38:34,839:INFO:SubProcess create_model() called ==================================
2025-03-30 20:38:34,839:INFO:Initializing create_model()
2025-03-30 20:38:34,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023A49FFB430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:34,839:INFO:Checking exceptions
2025-03-30 20:38:34,839:INFO:Importing libraries
2025-03-30 20:38:34,839:INFO:Copying training dataset
2025-03-30 20:38:34,847:INFO:Defining folds
2025-03-30 20:38:34,847:INFO:Declaring metric variables
2025-03-30 20:38:34,847:INFO:Importing untrained model
2025-03-30 20:38:34,847:INFO:Declaring custom model
2025-03-30 20:38:34,847:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:38:34,847:INFO:Starting cross validation
2025-03-30 20:38:34,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:38:35,096:INFO:Calculating mean and std
2025-03-30 20:38:35,096:INFO:Creating metrics dataframe
2025-03-30 20:38:35,098:INFO:Finalizing model
2025-03-30 20:38:35,240:INFO:Uploading results into container
2025-03-30 20:38:35,240:INFO:Uploading model into container now
2025-03-30 20:38:35,240:INFO:_master_model_container: 4
2025-03-30 20:38:35,240:INFO:_display_container: 5
2025-03-30 20:38:35,240:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:35,240:INFO:create_model() successfully completed......................................
2025-03-30 20:38:35,321:INFO:SubProcess create_model() end ==================================
2025-03-30 20:38:35,335:INFO:Creating Dashboard logs
2025-03-30 20:38:35,337:INFO:Model: Decision Tree Classifier
2025-03-30 20:38:35,378:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:38:35,595:INFO:Initializing predict_model()
2025-03-30 20:38:35,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A4B83D160>)
2025-03-30 20:38:35,595:INFO:Checking exceptions
2025-03-30 20:38:35,595:INFO:Preloading libraries
2025-03-30 20:38:35,832:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:35,840:INFO:_master_model_container: 4
2025-03-30 20:38:35,840:INFO:_display_container: 5
2025-03-30 20:38:35,841:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:35,841:INFO:calibrate_model() successfully completed......................................
2025-03-30 20:38:35,937:INFO:Initializing finalize_model()
2025-03-30 20:38:35,937:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 20:38:35,937:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:38:35,937:INFO:Initializing create_model()
2025-03-30 20:38:35,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023A49A4ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:38:35,937:INFO:Checking exceptions
2025-03-30 20:38:35,937:INFO:Importing libraries
2025-03-30 20:38:35,937:INFO:Copying training dataset
2025-03-30 20:38:35,937:INFO:Defining folds
2025-03-30 20:38:35,937:INFO:Declaring metric variables
2025-03-30 20:38:35,937:INFO:Importing untrained model
2025-03-30 20:38:35,937:INFO:Declaring custom model
2025-03-30 20:38:35,937:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:38:35,937:INFO:Cross validation set to False
2025-03-30 20:38:35,937:INFO:Fitting Model
2025-03-30 20:38:36,136:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:38:36,136:INFO:create_model() successfully completed......................................
2025-03-30 20:38:36,237:INFO:Creating Dashboard logs
2025-03-30 20:38:36,237:INFO:Model: Decision Tree Classifier
2025-03-30 20:38:36,304:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:38:36,515:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:38:36,515:INFO:_master_model_container: 4
2025-03-30 20:38:36,515:INFO:_display_container: 5
2025-03-30 20:38:36,515:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:38:36,515:INFO:finalize_model() successfully completed......................................
2025-03-30 20:38:36,637:INFO:Initializing save_model()
2025-03-30 20:38:36,637:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 20:38:36,637:INFO:Adding model into prep_pipe
2025-03-30 20:38:36,637:WARNING:Only Model saved as it was a pipeline.
2025-03-30 20:38:36,652:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 20:38:36,656:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:38:36,656:INFO:save_model() successfully completed......................................
2025-03-30 20:38:39,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:39,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:39,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:39,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:38:40,657:INFO:Initializing load_model()
2025-03-30 20:38:40,658:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:39:14,763:INFO:Initializing load_model()
2025-03-30 20:39:14,763:INFO:load_model(model_name=Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:39:30,594:INFO:Initializing load_model()
2025-03-30 20:39:30,595:INFO:load_model(model_name=../../Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:39:58,184:INFO:Initializing load_model()
2025-03-30 20:39:58,184:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:39:58,226:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:78: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x=["Acertos Previstos", "Erros Previstos"],

2025-03-30 20:42:22,466:INFO:Initializing load_model()
2025-03-30 20:42:22,466:INFO:load_model(model_name=Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:42:39,491:INFO:Initializing load_model()
2025-03-30 20:42:39,491:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:42:39,531:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:88: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x=["Acertos Previstos", "Erros Previstos"],

2025-03-30 20:43:28,498:INFO:Initializing load_model()
2025-03-30 20:43:28,498:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:43:28,539:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:88: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x=["Acertos Previstos", "Erros Previstos"],

2025-03-30 20:43:44,240:INFO:Initializing load_model()
2025-03-30 20:43:44,241:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 20:43:44,278:WARNING:C:\Users\Ian\PythonProjects\infnet-25E1_3\Code\Operationalization\streamlit_dashboard.py:87: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  fig_bar, ax_bar = plt.subplots(figsize=(5, 4))

2025-03-30 20:50:16,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:16,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:16,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:16,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:17,086:INFO:PyCaret ClassificationExperiment
2025-03-30 20:50:17,086:INFO:Logging name: Treinamento
2025-03-30 20:50:17,086:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-30 20:50:17,086:INFO:version 3.3.2
2025-03-30 20:50:17,086:INFO:Initializing setup()
2025-03-30 20:50:17,086:INFO:self.USI: 6d80
2025-03-30 20:50:17,086:INFO:self._variable_keys: {'log_plots_param', 'fix_imbalance', 'target_param', 'y', 'n_jobs_param', 'fold_groups_param', 'memory', 'gpu_param', 'pipeline', 'fold_generator', 'data', 'exp_id', 'seed', 'exp_name_log', 'is_multiclass', 'html_param', 'logging_param', 'y_test', 'X_test', 'fold_shuffle_param', 'y_train', '_available_plots', 'gpu_n_jobs_param', 'X_train', 'X', 'idx', '_ml_usecase', 'USI'}
2025-03-30 20:50:17,086:INFO:Checking environment
2025-03-30 20:50:17,086:INFO:python_version: 3.9.21
2025-03-30 20:50:17,086:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-03-30 20:50:17,086:INFO:machine: AMD64
2025-03-30 20:50:17,107:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-30 20:50:17,107:INFO:Memory: svmem(total=33685155840, available=21989015552, percent=34.7, used=11696140288, free=21989015552)
2025-03-30 20:50:17,107:INFO:Physical Core: 6
2025-03-30 20:50:17,107:INFO:Logical Core: 12
2025-03-30 20:50:17,107:INFO:Checking libraries
2025-03-30 20:50:17,107:INFO:System:
2025-03-30 20:50:17,107:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-03-30 20:50:17,107:INFO:executable: C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\python.exe
2025-03-30 20:50:17,107:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-30 20:50:17,107:INFO:PyCaret required dependencies:
2025-03-30 20:50:17,136:INFO:                 pip: 25.0
2025-03-30 20:50:17,136:INFO:          setuptools: 75.8.0
2025-03-30 20:50:17,136:INFO:             pycaret: 3.3.2
2025-03-30 20:50:17,136:INFO:             IPython: 8.18.1
2025-03-30 20:50:17,136:INFO:          ipywidgets: 8.1.5
2025-03-30 20:50:17,136:INFO:                tqdm: 4.67.1
2025-03-30 20:50:17,136:INFO:               numpy: 1.26.4
2025-03-30 20:50:17,136:INFO:              pandas: 1.5.3
2025-03-30 20:50:17,136:INFO:              jinja2: 3.1.6
2025-03-30 20:50:17,136:INFO:               scipy: 1.11.4
2025-03-30 20:50:17,136:INFO:              joblib: 1.3.2
2025-03-30 20:50:17,136:INFO:             sklearn: 1.4.2
2025-03-30 20:50:17,136:INFO:                pyod: 2.0.3
2025-03-30 20:50:17,136:INFO:            imblearn: 0.12.4
2025-03-30 20:50:17,136:INFO:   category_encoders: 2.6.4
2025-03-30 20:50:17,136:INFO:            lightgbm: 4.6.0
2025-03-30 20:50:17,136:INFO:               numba: 0.60.0
2025-03-30 20:50:17,136:INFO:            requests: 2.32.3
2025-03-30 20:50:17,136:INFO:          matplotlib: 3.7.5
2025-03-30 20:50:17,136:INFO:          scikitplot: 0.3.7
2025-03-30 20:50:17,136:INFO:         yellowbrick: 1.5
2025-03-30 20:50:17,136:INFO:              plotly: 5.24.1
2025-03-30 20:50:17,136:INFO:    plotly-resampler: Not installed
2025-03-30 20:50:17,136:INFO:             kaleido: 0.2.1
2025-03-30 20:50:17,136:INFO:           schemdraw: 0.15
2025-03-30 20:50:17,136:INFO:         statsmodels: 0.14.4
2025-03-30 20:50:17,136:INFO:              sktime: 0.26.0
2025-03-30 20:50:17,136:INFO:               tbats: 1.1.3
2025-03-30 20:50:17,136:INFO:            pmdarima: 2.0.4
2025-03-30 20:50:17,136:INFO:              psutil: 7.0.0
2025-03-30 20:50:17,136:INFO:          markupsafe: 3.0.2
2025-03-30 20:50:17,136:INFO:             pickle5: Not installed
2025-03-30 20:50:17,136:INFO:         cloudpickle: 2.2.1
2025-03-30 20:50:17,136:INFO:         deprecation: 2.1.0
2025-03-30 20:50:17,136:INFO:              xxhash: 3.5.0
2025-03-30 20:50:17,136:INFO:           wurlitzer: Not installed
2025-03-30 20:50:17,136:INFO:PyCaret optional dependencies:
2025-03-30 20:50:17,453:INFO:                shap: 0.47.1
2025-03-30 20:50:17,453:INFO:           interpret: Not installed
2025-03-30 20:50:17,453:INFO:                umap: Not installed
2025-03-30 20:50:17,453:INFO:     ydata_profiling: Not installed
2025-03-30 20:50:17,453:INFO:  explainerdashboard: Not installed
2025-03-30 20:50:17,453:INFO:             autoviz: Not installed
2025-03-30 20:50:17,453:INFO:           fairlearn: Not installed
2025-03-30 20:50:17,453:INFO:          deepchecks: Not installed
2025-03-30 20:50:17,453:INFO:             xgboost: Not installed
2025-03-30 20:50:17,453:INFO:            catboost: Not installed
2025-03-30 20:50:17,453:INFO:              kmodes: Not installed
2025-03-30 20:50:17,453:INFO:             mlxtend: Not installed
2025-03-30 20:50:17,453:INFO:       statsforecast: Not installed
2025-03-30 20:50:17,453:INFO:        tune_sklearn: Not installed
2025-03-30 20:50:17,453:INFO:                 ray: Not installed
2025-03-30 20:50:17,453:INFO:            hyperopt: Not installed
2025-03-30 20:50:17,453:INFO:              optuna: Not installed
2025-03-30 20:50:17,453:INFO:               skopt: Not installed
2025-03-30 20:50:17,453:INFO:              mlflow: 2.21.0
2025-03-30 20:50:17,453:INFO:              gradio: Not installed
2025-03-30 20:50:17,453:INFO:             fastapi: 0.115.11
2025-03-30 20:50:17,453:INFO:             uvicorn: 0.34.0
2025-03-30 20:50:17,453:INFO:              m2cgen: Not installed
2025-03-30 20:50:17,453:INFO:           evidently: Not installed
2025-03-30 20:50:17,453:INFO:               fugue: Not installed
2025-03-30 20:50:17,453:INFO:           streamlit: 1.43.2
2025-03-30 20:50:17,453:INFO:             prophet: Not installed
2025-03-30 20:50:17,453:INFO:None
2025-03-30 20:50:17,453:INFO:Set up data.
2025-03-30 20:50:17,468:INFO:Set up folding strategy.
2025-03-30 20:50:17,468:INFO:Set up train/test split.
2025-03-30 20:50:17,470:INFO:Set up index.
2025-03-30 20:50:17,470:INFO:Assigning column types.
2025-03-30 20:50:17,470:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-30 20:50:17,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,590:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-30 20:50:17,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-30 20:50:17,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,691:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-30 20:50:17,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,794:INFO:Preparing preprocessing pipeline...
2025-03-30 20:50:17,795:INFO:Set up simple imputation.
2025-03-30 20:50:17,810:INFO:Finished creating preprocessing pipeline.
2025-03-30 20:50:17,812:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 20:50:17,812:INFO:Creating final display dataframe.
2025-03-30 20:50:17,858:INFO:Setup _display_container:                     Description            Value
0                    Session id               42
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             6d80
2025-03-30 20:50:17,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-30 20:50:17,962:INFO:Logging experiment in loggers
2025-03-30 20:50:18,190:INFO:SubProcess save_model() called ==================================
2025-03-30 20:50:18,203:INFO:Initializing save_model()
2025-03-30 20:50:18,203:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\Ian\AppData\Local\Temp\tmps8hy6q50\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 20:50:18,203:INFO:Adding model into prep_pipe
2025-03-30 20:50:18,203:WARNING:Only Model saved as it was a pipeline.
2025-03-30 20:50:18,207:INFO:C:\Users\Ian\AppData\Local\Temp\tmps8hy6q50\Transformation Pipeline.pkl saved in current working directory
2025-03-30 20:50:18,207:INFO:Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-03-30 20:50:18,207:INFO:save_model() successfully completed......................................
2025-03-30 20:50:18,287:INFO:SubProcess save_model() end ==================================
2025-03-30 20:50:18,320:INFO:setup() successfully completed in 0.88s...............
2025-03-30 20:50:18,320:INFO:Initializing create_model()
2025-03-30 20:50:18,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:18,320:INFO:Checking exceptions
2025-03-30 20:50:18,321:INFO:Importing libraries
2025-03-30 20:50:18,321:INFO:Copying training dataset
2025-03-30 20:50:18,321:INFO:Defining folds
2025-03-30 20:50:18,321:INFO:Declaring metric variables
2025-03-30 20:50:18,321:INFO:Importing untrained model
2025-03-30 20:50:18,321:INFO:Logistic Regression Imported successfully
2025-03-30 20:50:18,321:INFO:Starting cross validation
2025-03-30 20:50:18,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:50:21,747:INFO:Calculating mean and std
2025-03-30 20:50:21,749:INFO:Creating metrics dataframe
2025-03-30 20:50:21,749:INFO:Finalizing model
2025-03-30 20:50:21,796:INFO:Creating Dashboard logs
2025-03-30 20:50:21,796:INFO:Model: Logistic Regression
2025-03-30 20:50:21,837:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-03-30 20:50:21,990:INFO:Initializing predict_model()
2025-03-30 20:50:21,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C0AED649D0>)
2025-03-30 20:50:21,990:INFO:Checking exceptions
2025-03-30 20:50:21,990:INFO:Preloading libraries
2025-03-30 20:50:22,129:WARNING:C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-03-30 20:50:22,148:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:22,148:INFO:Uploading results into container
2025-03-30 20:50:22,148:INFO:Uploading model into container now
2025-03-30 20:50:22,154:INFO:_master_model_container: 1
2025-03-30 20:50:22,154:INFO:_display_container: 2
2025-03-30 20:50:22,154:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-30 20:50:22,154:INFO:create_model() successfully completed......................................
2025-03-30 20:50:22,236:INFO:Initializing calibrate_model()
2025-03-30 20:50:22,236:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 20:50:22,236:INFO:Checking exceptions
2025-03-30 20:50:22,236:INFO:Preloading libraries
2025-03-30 20:50:22,236:INFO:Preparing display monitor
2025-03-30 20:50:22,236:INFO:Getting model name
2025-03-30 20:50:22,236:INFO:Base model : Logistic Regression
2025-03-30 20:50:22,236:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 20:50:22,236:INFO:SubProcess create_model() called ==================================
2025-03-30 20:50:22,236:INFO:Initializing create_model()
2025-03-30 20:50:22,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C0AEFE5F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:22,236:INFO:Checking exceptions
2025-03-30 20:50:22,236:INFO:Importing libraries
2025-03-30 20:50:22,236:INFO:Copying training dataset
2025-03-30 20:50:22,252:INFO:Defining folds
2025-03-30 20:50:22,252:INFO:Declaring metric variables
2025-03-30 20:50:22,252:INFO:Importing untrained model
2025-03-30 20:50:22,252:INFO:Declaring custom model
2025-03-30 20:50:22,252:INFO:Logistic Regression Imported successfully
2025-03-30 20:50:22,252:INFO:Starting cross validation
2025-03-30 20:50:22,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:50:24,099:INFO:Calculating mean and std
2025-03-30 20:50:24,099:INFO:Creating metrics dataframe
2025-03-30 20:50:24,099:INFO:Finalizing model
2025-03-30 20:50:24,232:INFO:Uploading results into container
2025-03-30 20:50:24,232:INFO:Uploading model into container now
2025-03-30 20:50:24,232:INFO:_master_model_container: 2
2025-03-30 20:50:24,232:INFO:_display_container: 3
2025-03-30 20:50:24,232:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:24,232:INFO:create_model() successfully completed......................................
2025-03-30 20:50:24,319:INFO:SubProcess create_model() end ==================================
2025-03-30 20:50:24,319:INFO:Creating Dashboard logs
2025-03-30 20:50:24,319:INFO:Model: Logistic Regression
2025-03-30 20:50:24,374:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:50:24,517:INFO:Initializing predict_model()
2025-03-30 20:50:24,517:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C0AD577EE0>)
2025-03-30 20:50:24,517:INFO:Checking exceptions
2025-03-30 20:50:24,517:INFO:Preloading libraries
2025-03-30 20:50:24,660:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:24,670:INFO:_master_model_container: 2
2025-03-30 20:50:24,670:INFO:_display_container: 3
2025-03-30 20:50:24,670:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:24,670:INFO:calibrate_model() successfully completed......................................
2025-03-30 20:50:24,754:INFO:Initializing finalize_model()
2025-03-30 20:50:24,754:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 20:50:24,754:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:24,754:INFO:Initializing create_model()
2025-03-30 20:50:24,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=42,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:24,754:INFO:Checking exceptions
2025-03-30 20:50:24,754:INFO:Importing libraries
2025-03-30 20:50:24,754:INFO:Copying training dataset
2025-03-30 20:50:24,754:INFO:Defining folds
2025-03-30 20:50:24,754:INFO:Declaring metric variables
2025-03-30 20:50:24,754:INFO:Importing untrained model
2025-03-30 20:50:24,754:INFO:Declaring custom model
2025-03-30 20:50:24,754:INFO:Logistic Regression Imported successfully
2025-03-30 20:50:24,754:INFO:Cross validation set to False
2025-03-30 20:50:24,754:INFO:Fitting Model
2025-03-30 20:50:24,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:50:24,919:INFO:create_model() successfully completed......................................
2025-03-30 20:50:25,003:INFO:Creating Dashboard logs
2025-03-30 20:50:25,003:INFO:Model: Logistic Regression
2025-03-30 20:50:25,053:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__C': 1.0, 'estimator__class_weight': None, 'estimator__dual': False, 'estimator__fit_intercept': True, 'estimator__intercept_scaling': 1, 'estimator__l1_ratio': None, 'estimator__max_iter': 1000, 'estimator__multi_class': 'auto', 'estimator__n_jobs': None, 'estimator__penalty': 'l2', 'estimator__random_state': 42, 'estimator__solver': 'lbfgs', 'estimator__tol': 0.0001, 'estimator__verbose': 0, 'estimator__warm_start': False, 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:50:25,190:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:25,190:INFO:_master_model_container: 2
2025-03-30 20:50:25,190:INFO:_display_container: 3
2025-03-30 20:50:25,193:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:50:25,193:INFO:finalize_model() successfully completed......................................
2025-03-30 20:50:25,287:INFO:Initializing create_model()
2025-03-30 20:50:25,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:25,287:INFO:Checking exceptions
2025-03-30 20:50:25,287:INFO:Importing libraries
2025-03-30 20:50:25,287:INFO:Copying training dataset
2025-03-30 20:50:25,287:INFO:Defining folds
2025-03-30 20:50:25,287:INFO:Declaring metric variables
2025-03-30 20:50:25,287:INFO:Importing untrained model
2025-03-30 20:50:25,287:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:50:25,287:INFO:Starting cross validation
2025-03-30 20:50:25,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:50:25,384:INFO:Calculating mean and std
2025-03-30 20:50:25,384:INFO:Creating metrics dataframe
2025-03-30 20:50:25,386:INFO:Finalizing model
2025-03-30 20:50:25,418:INFO:Creating Dashboard logs
2025-03-30 20:50:25,418:INFO:Model: Decision Tree Classifier
2025-03-30 20:50:25,481:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-03-30 20:50:25,654:INFO:Initializing predict_model()
2025-03-30 20:50:25,654:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C0AF08DE50>)
2025-03-30 20:50:25,654:INFO:Checking exceptions
2025-03-30 20:50:25,654:INFO:Preloading libraries
2025-03-30 20:50:25,782:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:25,782:INFO:Uploading results into container
2025-03-30 20:50:25,782:INFO:Uploading model into container now
2025-03-30 20:50:25,798:INFO:_master_model_container: 3
2025-03-30 20:50:25,798:INFO:_display_container: 4
2025-03-30 20:50:25,798:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-30 20:50:25,798:INFO:create_model() successfully completed......................................
2025-03-30 20:50:25,886:INFO:Initializing calibrate_model()
2025-03-30 20:50:25,886:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-03-30 20:50:25,886:INFO:Checking exceptions
2025-03-30 20:50:25,886:INFO:Preloading libraries
2025-03-30 20:50:25,886:INFO:Preparing display monitor
2025-03-30 20:50:25,886:INFO:Getting model name
2025-03-30 20:50:25,886:INFO:Base model : Decision Tree Classifier
2025-03-30 20:50:25,886:INFO:Importing untrained CalibratedClassifierCV
2025-03-30 20:50:25,886:INFO:SubProcess create_model() called ==================================
2025-03-30 20:50:25,886:INFO:Initializing create_model()
2025-03-30 20:50:25,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C0AED57340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:25,886:INFO:Checking exceptions
2025-03-30 20:50:25,886:INFO:Importing libraries
2025-03-30 20:50:25,886:INFO:Copying training dataset
2025-03-30 20:50:25,893:INFO:Defining folds
2025-03-30 20:50:25,893:INFO:Declaring metric variables
2025-03-30 20:50:25,893:INFO:Importing untrained model
2025-03-30 20:50:25,893:INFO:Declaring custom model
2025-03-30 20:50:25,893:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:50:25,895:INFO:Starting cross validation
2025-03-30 20:50:25,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-30 20:50:26,145:INFO:Calculating mean and std
2025-03-30 20:50:26,146:INFO:Creating metrics dataframe
2025-03-30 20:50:26,147:INFO:Finalizing model
2025-03-30 20:50:26,293:INFO:Uploading results into container
2025-03-30 20:50:26,293:INFO:Uploading model into container now
2025-03-30 20:50:26,293:INFO:_master_model_container: 4
2025-03-30 20:50:26,293:INFO:_display_container: 5
2025-03-30 20:50:26,293:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:26,293:INFO:create_model() successfully completed......................................
2025-03-30 20:50:26,383:INFO:SubProcess create_model() end ==================================
2025-03-30 20:50:26,383:INFO:Creating Dashboard logs
2025-03-30 20:50:26,383:INFO:Model: Decision Tree Classifier
2025-03-30 20:50:26,441:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:50:26,628:INFO:Initializing predict_model()
2025-03-30 20:50:26,628:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C0AF08D160>)
2025-03-30 20:50:26,628:INFO:Checking exceptions
2025-03-30 20:50:26,628:INFO:Preloading libraries
2025-03-30 20:50:26,787:ERROR:_log_model() for CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:26,803:INFO:_master_model_container: 4
2025-03-30 20:50:26,803:INFO:_display_container: 5
2025-03-30 20:50:26,803:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:26,803:INFO:calibrate_model() successfully completed......................................
2025-03-30 20:50:26,889:INFO:Initializing finalize_model()
2025-03-30 20:50:26,889:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-30 20:50:26,890:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2025-03-30 20:50:26,892:INFO:Initializing create_model()
2025-03-30 20:50:26,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C0AD29ACD0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=42,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-30 20:50:26,892:INFO:Checking exceptions
2025-03-30 20:50:26,893:INFO:Importing libraries
2025-03-30 20:50:26,893:INFO:Copying training dataset
2025-03-30 20:50:26,893:INFO:Defining folds
2025-03-30 20:50:26,893:INFO:Declaring metric variables
2025-03-30 20:50:26,893:INFO:Importing untrained model
2025-03-30 20:50:26,893:INFO:Declaring custom model
2025-03-30 20:50:26,893:INFO:Decision Tree Classifier Imported successfully
2025-03-30 20:50:26,894:INFO:Cross validation set to False
2025-03-30 20:50:26,894:INFO:Fitting Model
2025-03-30 20:50:27,098:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:50:27,098:INFO:create_model() successfully completed......................................
2025-03-30 20:50:27,183:INFO:Creating Dashboard logs
2025-03-30 20:50:27,183:INFO:Model: Decision Tree Classifier
2025-03-30 20:50:27,230:INFO:Logged params: {'cv': 5, 'ensemble': True, 'estimator__ccp_alpha': 0.0, 'estimator__class_weight': None, 'estimator__criterion': 'gini', 'estimator__max_depth': None, 'estimator__max_features': None, 'estimator__max_leaf_nodes': None, 'estimator__min_impurity_decrease': 0.0, 'estimator__min_samples_leaf': 1, 'estimator__min_samples_split': 2, 'estimator__min_weight_fraction_leaf': 0.0, 'estimator__monotonic_cst': None, 'estimator__random_state': 42, 'estimator__splitter': 'best', 'method': 'sigmoid', 'n_jobs': None}
2025-03-30 20:50:27,407:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\sklearn\__init__.py", line 424, in log_model
    return Model.log(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\models\model.py", line 552, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\fluent.py", line 817, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\client.py", line 1069, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 448, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Ian\anaconda3\envs\infnet-25E1_3_v2\lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-03-30 20:50:27,407:INFO:_master_model_container: 4
2025-03-30 20:50:27,407:INFO:_display_container: 5
2025-03-30 20:50:27,410:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                         class_weight=None,
                                                                         criterion='gini',
                                                                         max_depth=None,
                                                                         max_features=None,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         random_state=42,
                                                                         splitter='best'),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:50:27,410:INFO:finalize_model() successfully completed......................................
2025-03-30 20:50:27,520:INFO:Initializing save_model()
2025-03-30 20:50:27,520:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=../../Data/Modeling\modelo_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Ian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-30 20:50:27,520:INFO:Adding model into prep_pipe
2025-03-30 20:50:27,520:WARNING:Only Model saved as it was a pipeline.
2025-03-30 20:50:27,520:INFO:../../Data/Modeling\modelo_final.pkl saved in current working directory
2025-03-30 20:50:27,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=LogisticRegression(C=1.0,
                                                                     class_weight=None,
                                                                     dual=False,
                                                                     fit_intercept=True,
                                                                     intercept_scaling=1,
                                                                     l1_ratio=None,
                                                                     max_iter=1000,
                                                                     multi_class='auto',
                                                                     n_jobs=None,
                                                                     penalty='l2',
                                                                     random_state=42,
                                                                     solver='lbfgs',
                                                                     tol=0.0001,
                                                                     verbose=0,
                                                                     warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-03-30 20:50:27,531:INFO:save_model() successfully completed......................................
2025-03-30 20:50:30,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:30,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:30,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:30,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 20:50:31,418:INFO:Initializing load_model()
2025-03-30 20:50:31,418:INFO:load_model(model_name=../../Data/Modeling/modelo_final, platform=None, authentication=None, verbose=True)
2025-03-30 21:04:03,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 21:04:03,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 21:04:03,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-30 21:04:03,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
